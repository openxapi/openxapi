components:
    schemas:
        APIError:
            description: OKX API error
            properties:
                code:
                    type: string
                msg:
                    type: string
            type: object
        GetRfqQuotesV5Resp:
            example: |
                {
                    "code":"0",
                    "msg":"",
                    "data":[
                        {
                            "validUntil":"1608997227834",
                            "uTime":"1608267227834",
                            "cTime":"1608267227834",
                            "legs":[
                                {
                                    "px":"46000",
                                    "sz":"25",
                                    "instId":"BTC-USD-220114-25000-C",
                                    "tdMode":"cross",
                                    "ccy":"USDT",
                                    "side":"sell",
                                    "posSide": "long",
                                    "tgtCcy":""
                                },
                                {
                                    "px":"45000",
                                    "sz":"25",
                                    "instId":"BTC-USDT",
                                    "tdMode":"cross",
                                    "ccy":"USDT",
                                    "side":"buy",
                                    "posSide": "long",
                                    "tgtCcy":"base_ccy"
                                }
                            ],
                            "quoteId":"25092",
                            "rfqId":"18753",
                            "quoteSide":"sell",
                            "state":"canceled",
                            "reason":"mmp_canceled",
                            "clQuoteId":"cq001",
                            "clRfqId":"cr001",
                            "tag":"123456",
                            "traderCode":"Trader1"
                        }
                    ]
                }
            properties:
                code:
                    default: ""
                    type: string
                data:
                    items:
                        properties:
                            cTime:
                                default: ""
                                description: The timestamp the Quote was created, Unix timestamp format in milliseconds.
                                type: string
                            ccy:
                                default: ""
                                description: "Margin currency. \n\nOnly applicable to `cross` `MARGIN` orders in `Spot and futures mode`. The parameter will be ignored in other scenarios."
                                type: string
                            clQuoteId:
                                default: ""
                                description: Client-supplied Quote ID. This attribute is treated as client sensitive information. It will not be exposed to the Taker, only return empty string.
                                type: string
                            clRfqId:
                                default: ""
                                description: Client-supplied RFQ ID. This attribute is treated as client sensitive information. It will not be exposed to the Maker, only return empty string.
                                type: string
                            instId:
                                default: ""
                                description: The instrument ID of the quoted leg.
                                type: string
                            legs:
                                description: The legs of the Quote.
                                items:
                                    properties:
                                        ccy:
                                            default: ""
                                            description: "Margin currency. \n\nOnly applicable to `cross` `MARGIN` orders in `Spot and futures mode`. The parameter will be ignored in other scenarios."
                                            type: string
                                        instId:
                                            default: ""
                                            description: The instrument ID of the quoted leg.
                                            type: string
                                        posSide:
                                            default: ""
                                            description: "Position side. \n\nThe default is `net` in the net mode. If not specified, return \"\", which is equivalent to net. \n\nIt can only be `long` or `short` in the long/short mode. If not specified, return \"\", which corresponds to the direction that opens new positions for the trade (buy => long, sell => short). \n\nOnly applicable to `FUTURES`/`SWAP`."
                                            type: string
                                        px:
                                            default: ""
                                            description: The price of the leg.
                                            type: string
                                        side:
                                            default: ""
                                            description: The direction of the leg. Valid values can be buy or sell.
                                            type: string
                                        sz:
                                            default: ""
                                            description: Size of the leg in contracts or spot.
                                            type: string
                                        tdMode:
                                            default: ""
                                            description: "Trade mode \n\nMargin mode: `cross` `isolated` \n\nNon-Margin mode: `cash`. \n\nIf not provided, tdMode will inherit default values set by the system shown below: \n\nSpot and futures mode & SPOT: `cash` \n\nBuy options in Spot and futures mode and Multi-currency Margin: `isolated` \n\nOther cases: `cross`"
                                            type: string
                                        tgtCcy:
                                            default: ""
                                            description: "Defines the unit of the “sz” attribute. \n\nOnly applicable to instType = SPOT. \n\nThe valid enumerations are base_ccy and quote_ccy. When not specified this is equal to base_ccy by default."
                                            type: string
                                    type: object
                                type: array
                            posSide:
                                default: ""
                                description: "Position side. \n\nThe default is `net` in the net mode. If not specified, return \"\", which is equivalent to net. \n\nIt can only be `long` or `short` in the long/short mode. If not specified, return \"\", which corresponds to the direction that opens new positions for the trade (buy => long, sell => short). \n\nOnly applicable to `FUTURES`/`SWAP`."
                                type: string
                            px:
                                default: ""
                                description: The price of the leg.
                                type: string
                            quoteId:
                                default: ""
                                description: Quote ID.
                                type: string
                            quoteSide:
                                default: ""
                                description: Top level direction of Quote. Its value can be buy or sell.
                                type: string
                            reason:
                                default: ""
                                description: Reasons of state. Valid values can be `mmp_canceled`.
                                type: string
                            rfqId:
                                default: ""
                                description: RFQ ID.
                                type: string
                            side:
                                default: ""
                                description: The direction of the leg. Valid values can be buy or sell.
                                type: string
                            state:
                                default: ""
                                description: The status of the quote. Valid values can be `active` `canceled` `pending_fill` `filled` `expired` or `failed`.
                                type: string
                            sz:
                                default: ""
                                description: Size of the leg in contracts or spot.
                                type: string
                            tag:
                                default: ""
                                description: Quote tag. The block trade associated with the Quote will have the same tag.
                                type: string
                            tdMode:
                                default: ""
                                description: "Trade mode \n\nMargin mode: `cross` `isolated` \n\nNon-Margin mode: `cash`. \n\nIf not provided, tdMode will inherit default values set by the system shown below: \n\nSpot and futures mode & SPOT: `cash` \n\nBuy options in Spot and futures mode and Multi-currency Margin: `isolated` \n\nOther cases: `cross`"
                                type: string
                            tgtCcy:
                                default: ""
                                description: "Defines the unit of the “sz” attribute. \n\nOnly applicable to instType = SPOT. \n\nThe valid enumerations are base_ccy and quote_ccy. When not specified this is equal to base_ccy by default."
                                type: string
                            traderCode:
                                default: ""
                                description: A unique identifier of maker. Empty If the anonymous parameter of the Quote is set to be `true`.
                                type: string
                            uTime:
                                default: ""
                                description: The timestamp the Quote was last updated, Unix timestamp format in milliseconds.
                                type: string
                            validUntil:
                                default: ""
                                description: The timestamp the Quote expires. Unix timestamp format in milliseconds.
                                type: string
                        type: object
                    type: array
                msg:
                    default: ""
                    type: string
            type: object
    securitySchemes:
        APIKey:
            in: header
            name: OK-ACCESS-KEY
            type: apiKey
        Passphrase:
            in: header
            name: OK-ACCESS-PASSPHRASE
            type: apiKey
info:
    title: ""
    version: ""
openapi: ""
paths:
    /api/v5/rfq/quotes:
        get:
            description: "Retrieve all Quotes that the user is a counterparty to (either as the creator or the receiver).\n\n#### Rate Limit: 2 requests per 2 seconds \n\n#### Rate limit rule: User ID \n\n#### Permission: Read \n\n"
            operationId: GetRfqQuotesV5
            parameters:
                - description: RFQ ID .
                  in: query
                  name: rfqId
                  schema:
                    default: ""
                    description: RFQ ID .
                    type: string
                - description: Client-supplied RFQ ID. If both `clRfqId` and `rfqId` are passed, `rfqId` will be be treated as primary identifier.
                  in: query
                  name: clRfqId
                  schema:
                    default: ""
                    description: Client-supplied RFQ ID. If both `clRfqId` and `rfqId` are passed, `rfqId` will be be treated as primary identifier.
                    type: string
                - description: Quote ID
                  in: query
                  name: quoteId
                  schema:
                    default: ""
                    description: Quote ID
                    type: string
                - description: Client-supplied Quote ID. If both clQuoteId and quoteId are passed, quoteId will be treated as primary identifier
                  in: query
                  name: clQuoteId
                  schema:
                    default: ""
                    description: Client-supplied Quote ID. If both clQuoteId and quoteId are passed, quoteId will be treated as primary identifier
                    type: string
                - description: The status of the quote. Valid values can be `active` `canceled` `pending_fill` `filled` `expired` or `failed`.
                  in: query
                  name: state
                  schema:
                    default: ""
                    description: The status of the quote. Valid values can be `active` `canceled` `pending_fill` `filled` `expired` or `failed`.
                    type: string
                - description: Start quote id the request to begin with. Pagination of data to return records newer than the requested quoteId, not including beginId
                  in: query
                  name: beginId
                  schema:
                    default: ""
                    description: Start quote id the request to begin with. Pagination of data to return records newer than the requested quoteId, not including beginId
                    type: string
                - description: End quote id the request to end with. Pagination of data to return records earlier than the requested quoteId, not including endId
                  in: query
                  name: endId
                  schema:
                    default: ""
                    description: End quote id the request to end with. Pagination of data to return records earlier than the requested quoteId, not including endId
                    type: string
                - description: Number of results per request. The maximum is 100 which is also the default value.
                  in: query
                  name: limit
                  schema:
                    default: ""
                    description: Number of results per request. The maximum is 100 which is also the default value.
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRfqQuotesV5Resp'
                    description: Successful operation
            security:
                - APIKey: []
                  Passphrase: []
            summary: Get quotes
            tags:
                - Block Trading

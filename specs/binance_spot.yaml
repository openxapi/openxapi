components:
    schemas:
        GetDepthV3Resp:
            example: |
                {
                    "lastUpdateId": 1027024,
                    "bids": [
                        [
                        "4.00000000",     // PRICE
                        "431.00000000"    // QTY
                        ]
                    ],
                    "asks": [
                        [
                        "4.00000200",
                        "12.00000000"
                        ]
                    ]
                }
            properties:
                asks:
                    items:
                        items:
                            type: string
                        type: array
                    type: array
                bids:
                    items:
                        items:
                            type: string
                        type: array
                    type: array
                lastUpdateId:
                    type: integer
            type: object
        SpotCreateOrderOcoV3Resp:
            example: '{    "orderListId": 1,    "contingencyType": "OCO",    "listStatusType": "EXEC_STARTED",    "listOrderStatus": "EXECUTING",    "listClientOrderId": "lH1YDkuQKWiXVXHPSKYEIp",    "transactionTime": 1710485608839,    "symbol": "LTCBTC",    "orders": [        {            "symbol": "LTCBTC",            "orderId": 10,            "clientOrderId": "44nZvqpemY7sVYgPYbvPih"        },        {            "symbol": "LTCBTC",            "orderId": 11,            "clientOrderId": "NuMp0nVYnciDiFmVqfpBqK"        }    ],    "orderReports": [        {            "symbol": "LTCBTC",            "orderId": 10,            "orderListId": 1,            "clientOrderId": "44nZvqpemY7sVYgPYbvPih",            "transactTime": 1710485608839,            "price": "1.00000000",            "origQty": "5.00000000",            "executedQty": "0.00000000",            "origQuoteOrderQty": "0.000000",            "cummulativeQuoteQty": "0.00000000",            "status": "NEW",            "timeInForce": "GTC",            "type": "STOP_LOSS_LIMIT",            "side": "SELL",            "stopPrice": "1.00000000",            "workingTime": -1,            "icebergQty": "1.00000000",            "selfTradePreventionMode": "NONE"        },        {            "symbol": "LTCBTC",            "orderId": 11,            "orderListId": 1,            "clientOrderId": "NuMp0nVYnciDiFmVqfpBqK",            "transactTime": 1710485608839,            "price": "3.00000000",            "origQty": "5.00000000",            "executedQty": "0.00000000",            "origQuoteOrderQty": "0.000000",            "cummulativeQuoteQty": "0.00000000",            "status": "NEW",            "timeInForce": "GTC",            "type": "LIMIT_MAKER",            "side": "SELL",            "workingTime": 1710485608839,            "selfTradePreventionMode": "NONE"        }    ]}'
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    type: number
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            icebergQty:
                                type: string
                            orderId:
                                type: number
                            orderListId:
                                type: number
                            origQty:
                                type: string
                            origQuoteOrderQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            stopPrice:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                type: number
                            type:
                                type: string
                            workingTime:
                                type: number
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                type: number
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    type: number
            type: object
        SpotCreateOrderTestV3Resp:
            example: '{}'
            type: object
        SpotCreateOrderV3Resp:
            example: |
                {
                  "symbol": "BTCUSDT",
                  "orderId": 28,
                  "orderListId": -1, // Unless it's part of an order list, value will be -1
                  "clientOrderId": "6gCrw2kRUAF9CvJDGP16IP",
                  "transactTime": 1507725176595,
                  "price": "0.00000000",
                  "origQty": "10.00000000",
                  "executedQty": "10.00000000",
                  "origQuoteOrderQty": "0.000000",
                  "cummulativeQuoteQty": "10.00000000",
                  "status": "FILLED",
                  "timeInForce": "GTC",
                  "type": "MARKET",
                  "side": "SELL",
                  "workingTime": 1507725176595,
                  "selfTradePreventionMode": "NONE",
                  "fills": [
                    {
                      "price": "4000.00000000",
                      "qty": "1.00000000",
                      "commission": "4.00000000",
                      "commissionAsset": "USDT",
                      "tradeId": 56
                    },
                    {
                      "price": "3999.00000000",
                      "qty": "5.00000000",
                      "commission": "19.99500000",
                      "commissionAsset": "USDT",
                      "tradeId": 57
                    },
                    {
                      "price": "3998.00000000",
                      "qty": "2.00000000",
                      "commission": "7.99600000",
                      "commissionAsset": "USDT",
                      "tradeId": 58
                    },
                    {
                      "price": "3997.00000000",
                      "qty": "1.00000000",
                      "commission": "3.99700000",
                      "commissionAsset": "USDT",
                      "tradeId": 59
                    },
                    {
                      "price": "3995.00000000",
                      "qty": "1.00000000",
                      "commission": "3.99500000",
                      "commissionAsset": "USDT",
                      "tradeId": 60
                    }
                  ]
                }
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                fills:
                    items:
                        properties:
                            commission:
                                type: string
                            commissionAsset:
                                type: string
                            price:
                                type: string
                            qty:
                                type: string
                            tradeId:
                                type: number
                        type: object
                    type: array
                orderId:
                    type: number
                orderListId:
                    type: number
                origQty:
                    type: string
                origQuoteOrderQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                transactTime:
                    type: number
                type:
                    type: string
                workingTime:
                    type: number
            type: object
        SpotCreateSorOrderV3Resp:
            example: '{  "symbol": "BTCUSDT",  "orderId": 2,  "orderListId": -1,  "clientOrderId": "sBI1KM6nNtOfj5tccZSKly",  "transactTime": 1689149087774,  "price": "31000.00000000",  "origQty": "0.50000000",  "executedQty": "0.50000000",  "origQuoteOrderQty": "0.000000",  "cummulativeQuoteQty": "14000.00000000",  "status": "FILLED",  "timeInForce": "GTC",  "type": "LIMIT",  "side": "BUY",  "workingTime": 1689149087774,  "fills": [    {      "matchType": "ONE_PARTY_TRADE_REPORT",      "price": "28000.00000000",      "qty": "0.50000000",      "commission": "0.00000000",      "commissionAsset": "BTC",      "tradeId": -1,      "allocId": 0    }  ],  "workingFloor": "SOR",                "selfTradePreventionMode": "NONE",  "usedSor": true}'
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                fills:
                    items:
                        properties:
                            allocId:
                                type: number
                            commission:
                                type: string
                            commissionAsset:
                                type: string
                            matchType:
                                type: string
                            price:
                                type: string
                            qty:
                                type: string
                            tradeId:
                                type: number
                        type: object
                    type: array
                orderId:
                    type: number
                orderListId:
                    type: number
                origQty:
                    type: string
                origQuoteOrderQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                transactTime:
                    type: number
                type:
                    type: string
                usedSor:
                    type: boolean
                workingFloor:
                    type: string
                workingTime:
                    type: number
            type: object
        SpotDeleteOpenOrdersV3RespItem:
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                orderId:
                    type: number
                orderListId:
                    type: number
                origClientOrderId:
                    type: string
                origQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                transactTime:
                    type: number
                type:
                    type: string
            type: object
        SpotGetAggTradesV3RespItem:
            example: |
                {
                  a: 26129,         // Aggregate tradeId
                  p: "0.01633102",  // Price
                  q: "4.70443515",  // Quantity
                  f: 27781,         // First tradeId
                  l: 27781,         // Last tradeId
                  T: 1498793709153, // Timestamp
                  m: true,          // Was the buyer the maker?
                  M: true           // Was the trade the best price match?
                }
            properties:
                M:
                    type: boolean
                T:
                    type: integer
                a:
                    type: integer
                f:
                    type: integer
                l:
                    type: integer
                m:
                    type: boolean
                p:
                    type: string
                q:
                    type: string
            type: object
        SpotGetAvgPriceV3Resp:
            example: |
                {
                    "mins": 5,                    // Average price interval (in minutes)
                    "price": "9.35751834",        // Average price
                    "closeTime": 1694061154503    // Last trade time
                }
            properties:
                closeTime:
                    type: number
                mins:
                    type: number
                price:
                    type: string
            type: object
        SpotGetExchangeInfoV3Resp:
            example: |
                {
                  "timezone": "UTC",
                  "serverTime": 1741633633702,
                  "rateLimits": [
                    {
                      "rateLimitType": "REQUEST_WEIGHT",
                      "interval": "MINUTE",
                      "intervalNum": 1,
                      "limit": 6000
                    },
                    {
                      "rateLimitType": "ORDERS",
                      "interval": "SECOND",
                      "intervalNum": 10,
                      "limit": 100
                    },
                    {
                      "rateLimitType": "ORDERS",
                      "interval": "DAY",
                      "intervalNum": 1,
                      "limit": 200000
                    },
                    {
                      "rateLimitType": "RAW_REQUESTS",
                      "interval": "MINUTE",
                      "intervalNum": 5,
                      "limit": 61000
                    }
                  ],
                  "exchangeFilters": [],
                  "symbols": [
                    {
                      "symbol": "BNBBTC",
                      "status": "TRADING",
                      "baseAsset": "BNB",
                      "baseAssetPrecision": 8,
                      "quoteAsset": "BTC",
                      "quotePrecision": 8,
                      "quoteAssetPrecision": 8,
                      "baseCommissionPrecision": 8,
                      "quoteCommissionPrecision": 8,
                      "orderTypes": [
                        "LIMIT",
                        "LIMIT_MAKER",
                        "MARKET",
                        "STOP_LOSS",
                        "STOP_LOSS_LIMIT",
                        "TAKE_PROFIT",
                        "TAKE_PROFIT_LIMIT"
                      ],
                      "icebergAllowed": true,
                      "ocoAllowed": true,
                      "otoAllowed": true,
                      "quoteOrderQtyMarketAllowed": true,
                      "allowTrailingStop": true,
                      "cancelReplaceAllowed": true,
                      "isSpotTradingAllowed": true,
                      "isMarginTradingAllowed": true,
                      "filters": [
                        {
                          "filterType": "PRICE_FILTER",
                          "minPrice": "0.00000100",
                          "maxPrice": "100000.00000000",
                          "tickSize": "0.00000100"
                        },
                        {
                          "filterType": "LOT_SIZE",
                          "minQty": "0.00100000",
                          "maxQty": "100000.00000000",
                          "stepSize": "0.00100000"
                        },
                        {
                          "filterType": "ICEBERG_PARTS",
                          "limit": 10
                        },
                        {
                          "filterType": "MARKET_LOT_SIZE",
                          "minQty": "0.00000000",
                          "maxQty": "2130.19768200",
                          "stepSize": "0.00000000"
                        },
                        {
                          "filterType": "TRAILING_DELTA",
                          "minTrailingAboveDelta": 10,
                          "maxTrailingAboveDelta": 2000,
                          "minTrailingBelowDelta": 10,
                          "maxTrailingBelowDelta": 2000
                        },
                        {
                          "filterType": "PERCENT_PRICE_BY_SIDE",
                          "bidMultiplierUp": "5",
                          "bidMultiplierDown": "0.2",
                          "askMultiplierUp": "5",
                          "askMultiplierDown": "0.2",
                          "avgPriceMins": 5
                        },
                        {
                          "filterType": "NOTIONAL",
                          "minNotional": "0.00010000",
                          "applyMinToMarket": true,
                          "maxNotional": "9000000.00000000",
                          "applyMaxToMarket": false,
                          "avgPriceMins": 5
                        },
                        {
                          "filterType": "MAX_NUM_ORDERS",
                          "maxNumOrders": 200
                        },
                        {
                          "filterType": "MAX_NUM_ALGO_ORDERS",
                          "maxNumAlgoOrders": 5
                        }
                      ],
                      "permissions": [],
                      "permissionSets": [
                        [
                          "SPOT",
                          "MARGIN",
                          "TRD_GRP_004",
                          "TRD_GRP_005",
                          "TRD_GRP_006",
                          "TRD_GRP_008",
                          "TRD_GRP_009",
                          "TRD_GRP_010",
                          "TRD_GRP_011",
                          "TRD_GRP_012",
                          "TRD_GRP_013",
                          "TRD_GRP_014",
                          "TRD_GRP_015",
                          "TRD_GRP_016",
                          "TRD_GRP_017",
                          "TRD_GRP_018",
                          "TRD_GRP_019",
                          "TRD_GRP_020",
                          "TRD_GRP_021",
                          "TRD_GRP_022",
                          "TRD_GRP_023",
                          "TRD_GRP_024",
                          "TRD_GRP_025",
                          "TRD_GRP_026",
                          "TRD_GRP_027",
                          "TRD_GRP_028",
                          "TRD_GRP_029",
                          "TRD_GRP_030",
                          "TRD_GRP_031",
                          "TRD_GRP_032",
                          "TRD_GRP_033",
                          "TRD_GRP_034",
                          "TRD_GRP_035",
                          "TRD_GRP_036",
                          "TRD_GRP_037",
                          "TRD_GRP_038",
                          "TRD_GRP_039",
                          "TRD_GRP_040",
                          "TRD_GRP_041",
                          "TRD_GRP_042",
                          "TRD_GRP_043",
                          "TRD_GRP_044",
                          "TRD_GRP_045",
                          "TRD_GRP_046",
                          "TRD_GRP_047",
                          "TRD_GRP_048",
                          "TRD_GRP_049",
                          "TRD_GRP_050",
                          "TRD_GRP_051",
                          "TRD_GRP_052",
                          "TRD_GRP_053",
                          "TRD_GRP_054",
                          "TRD_GRP_055",
                          "TRD_GRP_056",
                          "TRD_GRP_057",
                          "TRD_GRP_058",
                          "TRD_GRP_059",
                          "TRD_GRP_060",
                          "TRD_GRP_061",
                          "TRD_GRP_062",
                          "TRD_GRP_063",
                          "TRD_GRP_064",
                          "TRD_GRP_065",
                          "TRD_GRP_066",
                          "TRD_GRP_067",
                          "TRD_GRP_068",
                          "TRD_GRP_069",
                          "TRD_GRP_070",
                          "TRD_GRP_071",
                          "TRD_GRP_072",
                          "TRD_GRP_073",
                          "TRD_GRP_074",
                          "TRD_GRP_075",
                          "TRD_GRP_076",
                          "TRD_GRP_077",
                          "TRD_GRP_078",
                          "TRD_GRP_079",
                          "TRD_GRP_080",
                          "TRD_GRP_081",
                          "TRD_GRP_082",
                          "TRD_GRP_083",
                          "TRD_GRP_084",
                          "TRD_GRP_085",
                          "TRD_GRP_086",
                          "TRD_GRP_087",
                          "TRD_GRP_088",
                          "TRD_GRP_089",
                          "TRD_GRP_090",
                          "TRD_GRP_091",
                          "TRD_GRP_092",
                          "TRD_GRP_093",
                          "TRD_GRP_094",
                          "TRD_GRP_095",
                          "TRD_GRP_096",
                          "TRD_GRP_097",
                          "TRD_GRP_098",
                          "TRD_GRP_099",
                          "TRD_GRP_100",
                          "TRD_GRP_101",
                          "TRD_GRP_102",
                          "TRD_GRP_103",
                          "TRD_GRP_104",
                          "TRD_GRP_105",
                          "TRD_GRP_106",
                          "TRD_GRP_107",
                          "TRD_GRP_108",
                          "TRD_GRP_109",
                          "TRD_GRP_110",
                          "TRD_GRP_111",
                          "TRD_GRP_112",
                          "TRD_GRP_113",
                          "TRD_GRP_114",
                          "TRD_GRP_115",
                          "TRD_GRP_116",
                          "TRD_GRP_117",
                          "TRD_GRP_118",
                          "TRD_GRP_119",
                          "TRD_GRP_120",
                          "TRD_GRP_121",
                          "TRD_GRP_122",
                          "TRD_GRP_123",
                          "TRD_GRP_124",
                          "TRD_GRP_125",
                          "TRD_GRP_126",
                          "TRD_GRP_127",
                          "TRD_GRP_128",
                          "TRD_GRP_129",
                          "TRD_GRP_130",
                          "TRD_GRP_131",
                          "TRD_GRP_132",
                          "TRD_GRP_133",
                          "TRD_GRP_134",
                          "TRD_GRP_135",
                          "TRD_GRP_136",
                          "TRD_GRP_137",
                          "TRD_GRP_138",
                          "TRD_GRP_139",
                          "TRD_GRP_140",
                          "TRD_GRP_141",
                          "TRD_GRP_142",
                          "TRD_GRP_143",
                          "TRD_GRP_144",
                          "TRD_GRP_145",
                          "TRD_GRP_146",
                          "TRD_GRP_147",
                          "TRD_GRP_148",
                          "TRD_GRP_149",
                          "TRD_GRP_150",
                          "TRD_GRP_151",
                          "TRD_GRP_152",
                          "TRD_GRP_153",
                          "TRD_GRP_154",
                          "TRD_GRP_155",
                          "TRD_GRP_156",
                          "TRD_GRP_157",
                          "TRD_GRP_158",
                          "TRD_GRP_159",
                          "TRD_GRP_160",
                          "TRD_GRP_161",
                          "TRD_GRP_162",
                          "TRD_GRP_163",
                          "TRD_GRP_164",
                          "TRD_GRP_165",
                          "TRD_GRP_166",
                          "TRD_GRP_167",
                          "TRD_GRP_168",
                          "TRD_GRP_169",
                          "TRD_GRP_170",
                          "TRD_GRP_171",
                          "TRD_GRP_172",
                          "TRD_GRP_173",
                          "TRD_GRP_174",
                          "TRD_GRP_175",
                          "TRD_GRP_176",
                          "TRD_GRP_177",
                          "TRD_GRP_178",
                          "TRD_GRP_179",
                          "TRD_GRP_180",
                          "TRD_GRP_181",
                          "TRD_GRP_182",
                          "TRD_GRP_183",
                          "TRD_GRP_184",
                          "TRD_GRP_185",
                          "TRD_GRP_186",
                          "TRD_GRP_187",
                          "TRD_GRP_188",
                          "TRD_GRP_189",
                          "TRD_GRP_190",
                          "TRD_GRP_191",
                          "TRD_GRP_192",
                          "TRD_GRP_193",
                          "TRD_GRP_194",
                          "TRD_GRP_195",
                          "TRD_GRP_196",
                          "TRD_GRP_197",
                          "TRD_GRP_198",
                          "TRD_GRP_199",
                          "TRD_GRP_200",
                          "TRD_GRP_201",
                          "TRD_GRP_202",
                          "TRD_GRP_203",
                          "TRD_GRP_204",
                          "TRD_GRP_205",
                          "TRD_GRP_206",
                          "TRD_GRP_207",
                          "TRD_GRP_208",
                          "TRD_GRP_209",
                          "TRD_GRP_210",
                          "TRD_GRP_211",
                          "TRD_GRP_212",
                          "TRD_GRP_213",
                          "TRD_GRP_214",
                          "TRD_GRP_215",
                          "TRD_GRP_216",
                          "TRD_GRP_217",
                          "TRD_GRP_218",
                          "TRD_GRP_219",
                          "TRD_GRP_220",
                          "TRD_GRP_221",
                          "TRD_GRP_222",
                          "TRD_GRP_223",
                          "TRD_GRP_224",
                          "TRD_GRP_225",
                          "TRD_GRP_226",
                          "TRD_GRP_227",
                          "TRD_GRP_228",
                          "TRD_GRP_229",
                          "TRD_GRP_230",
                          "TRD_GRP_231",
                          "TRD_GRP_232",
                          "TRD_GRP_233",
                          "TRD_GRP_234",
                          "TRD_GRP_235",
                          "TRD_GRP_236"
                        ]
                      ],
                      "defaultSelfTradePreventionMode": "EXPIRE_MAKER",
                      "allowedSelfTradePreventionModes": [
                        "EXPIRE_TAKER",
                        "EXPIRE_MAKER",
                        "EXPIRE_BOTH"
                      ]
                    },
                    {
                      "symbol": "BTCUSDT",
                      "status": "TRADING",
                      "baseAsset": "BTC",
                      "baseAssetPrecision": 8,
                      "quoteAsset": "USDT",
                      "quotePrecision": 8,
                      "quoteAssetPrecision": 8,
                      "baseCommissionPrecision": 8,
                      "quoteCommissionPrecision": 8,
                      "orderTypes": [
                        "LIMIT",
                        "LIMIT_MAKER",
                        "MARKET",
                        "STOP_LOSS",
                        "STOP_LOSS_LIMIT",
                        "TAKE_PROFIT",
                        "TAKE_PROFIT_LIMIT"
                      ],
                      "icebergAllowed": true,
                      "ocoAllowed": true,
                      "otoAllowed": true,
                      "quoteOrderQtyMarketAllowed": true,
                      "allowTrailingStop": true,
                      "cancelReplaceAllowed": true,
                      "isSpotTradingAllowed": true,
                      "isMarginTradingAllowed": true,
                      "filters": [
                        {
                          "filterType": "PRICE_FILTER",
                          "minPrice": "0.01000000",
                          "maxPrice": "1000000.00000000",
                          "tickSize": "0.01000000"
                        },
                        {
                          "filterType": "LOT_SIZE",
                          "minQty": "0.00001000",
                          "maxQty": "9000.00000000",
                          "stepSize": "0.00001000"
                        },
                        {
                          "filterType": "ICEBERG_PARTS",
                          "limit": 10
                        },
                        {
                          "filterType": "MARKET_LOT_SIZE",
                          "minQty": "0.00000000",
                          "maxQty": "96.56124711",
                          "stepSize": "0.00000000"
                        },
                        {
                          "filterType": "TRAILING_DELTA",
                          "minTrailingAboveDelta": 10,
                          "maxTrailingAboveDelta": 2000,
                          "minTrailingBelowDelta": 10,
                          "maxTrailingBelowDelta": 2000
                        },
                        {
                          "filterType": "PERCENT_PRICE_BY_SIDE",
                          "bidMultiplierUp": "5",
                          "bidMultiplierDown": "0.2",
                          "askMultiplierUp": "5",
                          "askMultiplierDown": "0.2",
                          "avgPriceMins": 5
                        },
                        {
                          "filterType": "NOTIONAL",
                          "minNotional": "5.00000000",
                          "applyMinToMarket": true,
                          "maxNotional": "9000000.00000000",
                          "applyMaxToMarket": false,
                          "avgPriceMins": 5
                        },
                        {
                          "filterType": "MAX_NUM_ORDERS",
                          "maxNumOrders": 200
                        },
                        {
                          "filterType": "MAX_NUM_ALGO_ORDERS",
                          "maxNumAlgoOrders": 5
                        }
                      ],
                      "permissions": [],
                      "permissionSets": [
                        [
                          "SPOT",
                          "MARGIN",
                          "TRD_GRP_004",
                          "TRD_GRP_005",
                          "TRD_GRP_006",
                          "TRD_GRP_009",
                          "TRD_GRP_010",
                          "TRD_GRP_011",
                          "TRD_GRP_012",
                          "TRD_GRP_013",
                          "TRD_GRP_014",
                          "TRD_GRP_015",
                          "TRD_GRP_016",
                          "TRD_GRP_017",
                          "TRD_GRP_018",
                          "TRD_GRP_019",
                          "TRD_GRP_020",
                          "TRD_GRP_021",
                          "TRD_GRP_022",
                          "TRD_GRP_023",
                          "TRD_GRP_024",
                          "TRD_GRP_025",
                          "TRD_GRP_026",
                          "TRD_GRP_027",
                          "TRD_GRP_028",
                          "TRD_GRP_029",
                          "TRD_GRP_030",
                          "TRD_GRP_031",
                          "TRD_GRP_032",
                          "TRD_GRP_033",
                          "TRD_GRP_034",
                          "TRD_GRP_035",
                          "TRD_GRP_036",
                          "TRD_GRP_037",
                          "TRD_GRP_038",
                          "TRD_GRP_039",
                          "TRD_GRP_040",
                          "TRD_GRP_041",
                          "TRD_GRP_042",
                          "TRD_GRP_043",
                          "TRD_GRP_044",
                          "TRD_GRP_045",
                          "TRD_GRP_046",
                          "TRD_GRP_047",
                          "TRD_GRP_048",
                          "TRD_GRP_049",
                          "TRD_GRP_050",
                          "TRD_GRP_051",
                          "TRD_GRP_052",
                          "TRD_GRP_053",
                          "TRD_GRP_054",
                          "TRD_GRP_055",
                          "TRD_GRP_056",
                          "TRD_GRP_057",
                          "TRD_GRP_058",
                          "TRD_GRP_059",
                          "TRD_GRP_060",
                          "TRD_GRP_061",
                          "TRD_GRP_062",
                          "TRD_GRP_063",
                          "TRD_GRP_064",
                          "TRD_GRP_065",
                          "TRD_GRP_066",
                          "TRD_GRP_067",
                          "TRD_GRP_068",
                          "TRD_GRP_069",
                          "TRD_GRP_070",
                          "TRD_GRP_071",
                          "TRD_GRP_072",
                          "TRD_GRP_073",
                          "TRD_GRP_074",
                          "TRD_GRP_075",
                          "TRD_GRP_076",
                          "TRD_GRP_077",
                          "TRD_GRP_078",
                          "TRD_GRP_079",
                          "TRD_GRP_080",
                          "TRD_GRP_081",
                          "TRD_GRP_082",
                          "TRD_GRP_083",
                          "TRD_GRP_084",
                          "TRD_GRP_085",
                          "TRD_GRP_086",
                          "TRD_GRP_087",
                          "TRD_GRP_088",
                          "TRD_GRP_089",
                          "TRD_GRP_090",
                          "TRD_GRP_091",
                          "TRD_GRP_092",
                          "TRD_GRP_093",
                          "TRD_GRP_094",
                          "TRD_GRP_095",
                          "TRD_GRP_096",
                          "TRD_GRP_097",
                          "TRD_GRP_098",
                          "TRD_GRP_099",
                          "TRD_GRP_100",
                          "TRD_GRP_101",
                          "TRD_GRP_102",
                          "TRD_GRP_103",
                          "TRD_GRP_104",
                          "TRD_GRP_105",
                          "TRD_GRP_106",
                          "TRD_GRP_107",
                          "TRD_GRP_108",
                          "TRD_GRP_109",
                          "TRD_GRP_110",
                          "TRD_GRP_111",
                          "TRD_GRP_112",
                          "TRD_GRP_113",
                          "TRD_GRP_114",
                          "TRD_GRP_115",
                          "TRD_GRP_116",
                          "TRD_GRP_117",
                          "TRD_GRP_118",
                          "TRD_GRP_119",
                          "TRD_GRP_120",
                          "TRD_GRP_121",
                          "TRD_GRP_122",
                          "TRD_GRP_123",
                          "TRD_GRP_124",
                          "TRD_GRP_125",
                          "TRD_GRP_126",
                          "TRD_GRP_127",
                          "TRD_GRP_128",
                          "TRD_GRP_129",
                          "TRD_GRP_130",
                          "TRD_GRP_131",
                          "TRD_GRP_132",
                          "TRD_GRP_133",
                          "TRD_GRP_134",
                          "TRD_GRP_135",
                          "TRD_GRP_136",
                          "TRD_GRP_137",
                          "TRD_GRP_138",
                          "TRD_GRP_139",
                          "TRD_GRP_140",
                          "TRD_GRP_141",
                          "TRD_GRP_142",
                          "TRD_GRP_143",
                          "TRD_GRP_144",
                          "TRD_GRP_145",
                          "TRD_GRP_146",
                          "TRD_GRP_147",
                          "TRD_GRP_148",
                          "TRD_GRP_149",
                          "TRD_GRP_150",
                          "TRD_GRP_151",
                          "TRD_GRP_152",
                          "TRD_GRP_153",
                          "TRD_GRP_154",
                          "TRD_GRP_155",
                          "TRD_GRP_156",
                          "TRD_GRP_157",
                          "TRD_GRP_158",
                          "TRD_GRP_159",
                          "TRD_GRP_160",
                          "TRD_GRP_161",
                          "TRD_GRP_162",
                          "TRD_GRP_163",
                          "TRD_GRP_164",
                          "TRD_GRP_165",
                          "TRD_GRP_166",
                          "TRD_GRP_167",
                          "TRD_GRP_168",
                          "TRD_GRP_169",
                          "TRD_GRP_170",
                          "TRD_GRP_171",
                          "TRD_GRP_172",
                          "TRD_GRP_173",
                          "TRD_GRP_174",
                          "TRD_GRP_175",
                          "TRD_GRP_176",
                          "TRD_GRP_177",
                          "TRD_GRP_178",
                          "TRD_GRP_179",
                          "TRD_GRP_180",
                          "TRD_GRP_181",
                          "TRD_GRP_182",
                          "TRD_GRP_183",
                          "TRD_GRP_184",
                          "TRD_GRP_185",
                          "TRD_GRP_186",
                          "TRD_GRP_187",
                          "TRD_GRP_188",
                          "TRD_GRP_189",
                          "TRD_GRP_190",
                          "TRD_GRP_191",
                          "TRD_GRP_192",
                          "TRD_GRP_193",
                          "TRD_GRP_194",
                          "TRD_GRP_195",
                          "TRD_GRP_196",
                          "TRD_GRP_197",
                          "TRD_GRP_198",
                          "TRD_GRP_199",
                          "TRD_GRP_200",
                          "TRD_GRP_201",
                          "TRD_GRP_202",
                          "TRD_GRP_203",
                          "TRD_GRP_204",
                          "TRD_GRP_205",
                          "TRD_GRP_206",
                          "TRD_GRP_207",
                          "TRD_GRP_208",
                          "TRD_GRP_209",
                          "TRD_GRP_210",
                          "TRD_GRP_211",
                          "TRD_GRP_212",
                          "TRD_GRP_213",
                          "TRD_GRP_214",
                          "TRD_GRP_215",
                          "TRD_GRP_216",
                          "TRD_GRP_217",
                          "TRD_GRP_218",
                          "TRD_GRP_219",
                          "TRD_GRP_220",
                          "TRD_GRP_221",
                          "TRD_GRP_222",
                          "TRD_GRP_223",
                          "TRD_GRP_224",
                          "TRD_GRP_225",
                          "TRD_GRP_226",
                          "TRD_GRP_227",
                          "TRD_GRP_228",
                          "TRD_GRP_229",
                          "TRD_GRP_230",
                          "TRD_GRP_231",
                          "TRD_GRP_232",
                          "TRD_GRP_233",
                          "TRD_GRP_234",
                          "TRD_GRP_235",
                          "TRD_GRP_236"
                        ]
                      ],
                      "defaultSelfTradePreventionMode": "EXPIRE_MAKER",
                      "allowedSelfTradePreventionModes": [
                        "EXPIRE_TAKER",
                        "EXPIRE_MAKER",
                        "EXPIRE_BOTH"
                      ]
                    }
                  ]
                }
            properties:
                allowedSelfTradePreventionModes:
                    items:
                        type: string
                    type: array
                defaultSelfTradePreventionMode:
                    type: string
                exchangeFilters:
                    items:
                        properties:
                            filterType:
                                type: string
                            maxPrice:
                                type: string
                            minPrice:
                                type: string
                            tickSize:
                                type: string
                        type: object
                    type: array
                permissionSets:
                    items:
                        items:
                            type: string
                        type: array
                    type: array
                permissions:
                    items:
                        type: string
                    type: array
                rateLimits:
                    items:
                        properties:
                            interval:
                                type: string
                            intervalNum:
                                type: number
                            limit:
                                type: number
                            rateLimitType:
                                type: string
                        type: object
                    type: array
                serverTime:
                    type: number
                symbols:
                    items:
                        properties:
                            allowTrailingStop:
                                type: boolean
                            baseAsset:
                                type: string
                            baseAssetPrecision:
                                type: number
                            baseCommissionPrecision:
                                type: number
                            cancelReplaceAllowed:
                                type: boolean
                            filters:
                                items:
                                    properties:
                                        filterType:
                                            type: string
                                        maxPrice:
                                            type: string
                                        minPrice:
                                            type: string
                                    type: object
                                type: array
                            icebergAllowed:
                                type: boolean
                            isMarginTradingAllowed:
                                type: boolean
                            isSpotTradingAllowed:
                                type: boolean
                            ocoAllowed:
                                type: boolean
                            orderTypes:
                                items:
                                    type: string
                                type: array
                            otoAllowed:
                                type: boolean
                            quoteAsset:
                                type: string
                            quoteAssetPrecision:
                                type: number
                            quoteCommissionPrecision:
                                type: number
                            quoteOrderQtyMarketAllowed:
                                type: boolean
                            quotePrecision:
                                type: number
                            status:
                                type: string
                            symbol:
                                type: string
                        type: object
                    type: array
                timezone:
                    type: string
            type: object
        SpotGetHistoricalTradesV3RespItem:
            properties:
                id:
                    type: number
                isBestMatch:
                    type: boolean
                isBuyerMaker:
                    type: boolean
                price:
                    type: string
                qty:
                    type: string
                quoteQty:
                    type: string
                time:
                    type: number
            type: object
        SpotGetKlinesV3RespItem:
            example: |
                [
                  1499040000000,      // Kline open time
                  "0.01634790",       // Open price
                  "0.80000000",       // High price
                  "0.01575800",       // Low price
                  "0.01577100",       // Close price
                  "148976.11427815",  // Volume
                  1499644799999,      // Kline Close time
                  "2434.19055334",    // Quote asset volume
                  308,                // Number of trades
                  "1756.87402397",    // Taker buy base asset volume
                  "28.46694368",      // Taker buy quote asset volume
                  "0"                 // Unused field, ignore.
                ]
            items:
                oneOf:
                    - type: string
                    - type: number
            type: array
        SpotGetPingV3Resp:
            example: '{}'
            type: object
        SpotGetTicker24hrV3RespItem:
            example: |
                {
                    "symbol": "BNBBTC",
                    "priceChange": "-94.99999800",
                    "priceChangePercent": "-95.960",
                    "weightedAvgPrice": "0.29628482",
                    "prevClosePrice": "0.10002000",
                    "lastPrice": "4.00000200",
                    "lastQty": "200.00000000",
                    "bidPrice": "4.00000000",
                    "bidQty": "100.00000000",
                    "askPrice": "4.00000200",
                    "askQty": "100.00000000",
                    "openPrice": "99.00000000",
                    "highPrice": "100.00000000",
                    "lowPrice": "0.10000000",
                    "volume": "8913.30000000",
                    "quoteVolume": "15.30000000",
                    "openTime": 1499783499040,
                    "closeTime": 1499869899040,
                    "firstId": 28385,   // First tradeId
                    "lastId": 28460,    // Last tradeId
                    "count": 76         // Trade count
                }
            properties:
                askPrice:
                    type: string
                askQty:
                    type: string
                bidPrice:
                    type: string
                bidQty:
                    type: string
                closeTime:
                    type: number
                count:
                    type: number
                firstId:
                    type: number
                highPrice:
                    type: string
                lastId:
                    type: number
                lastPrice:
                    type: string
                lastQty:
                    type: string
                lowPrice:
                    type: string
                openPrice:
                    type: string
                openTime:
                    type: number
                prevClosePrice:
                    type: string
                priceChange:
                    type: string
                priceChangePercent:
                    type: string
                quoteVolume:
                    type: string
                symbol:
                    type: string
                volume:
                    type: string
                weightedAvgPrice:
                    type: string
            type: object
        SpotGetTickerBookTickerV3RespItem:
            example: '{  "symbol": "LTCBTC",  "bidPrice": "4.00000000",  "bidQty": "431.00000000",  "askPrice": "4.00000200",  "askQty": "9.00000000"}'
            properties:
                askPrice:
                    type: string
                askQty:
                    type: string
                bidPrice:
                    type: string
                bidQty:
                    type: string
                symbol:
                    type: string
            type: object
        SpotGetTickerPriceV3RespItem:
            example: '{  "symbol": "LTCBTC",  "price": "4.00000200"}'
            properties:
                price:
                    type: string
                symbol:
                    type: string
            type: object
        SpotGetTickerTradingDayV3RespItem:
            example: |
                {
                    "symbol":             "BTCUSDT",
                    "priceChange":        "-83.13000000",         // Absolute price change
                    "priceChangePercent": "-0.317",               // Relative price change in percent
                    "weightedAvgPrice":   "26234.58803036",       // quoteVolume / volume
                    "openPrice":          "26304.80000000",
                    "highPrice":          "26397.46000000",
                    "lowPrice":           "26088.34000000",
                    "lastPrice":          "26221.67000000",
                    "volume":             "18495.35066000",       // Volume in base asset
                    "quoteVolume":        "485217905.04210480",   // Volume in quote asset
                    "openTime":           1695686400000,
                    "closeTime":          1695772799999,
                    "firstId":            3220151555,             // Trade ID of the first trade in the interval
                    "lastId":             3220849281,             // Trade ID of the last trade in the interval
                    "count":              697727                  // Number of trades in the interval
                }
            properties:
                closeTime:
                    type: number
                count:
                    type: number
                firstId:
                    type: number
                highPrice:
                    type: string
                lastId:
                    type: number
                lastPrice:
                    type: string
                lowPrice:
                    type: string
                openPrice:
                    type: string
                openTime:
                    type: number
                priceChange:
                    type: string
                priceChangePercent:
                    type: string
                quoteVolume:
                    type: string
                symbol:
                    type: string
                volume:
                    type: string
                weightedAvgPrice:
                    type: string
            type: object
        SpotGetTickerV3RespItem:
            example: |
                {
                    "symbol":             "BNBBTC",
                    "priceChange":        "-8.00000000",  // Absolute price change
                    "priceChangePercent": "-88.889",      // Relative price change in percent
                    "weightedAvgPrice":   "2.60427807",   // QuoteVolume / Volume
                    "openPrice":          "9.00000000",
                    "highPrice":          "9.00000000",
                    "lowPrice":           "1.00000000",
                    "lastPrice":          "1.00000000",
                    "volume":             "187.00000000",
                    "quoteVolume":        "487.00000000", // Sum of (price * volume) for all trades
                    "openTime":           1641859200000,  // Open time for ticker window
                    "closeTime":          1642031999999,  // Close time for ticker window
                    "firstId":            0,              // Trade IDs
                    "lastId":             60,
                    "count":              61              // Number of trades in the interval
                }
            properties:
                closeTime:
                    type: number
                count:
                    type: number
                firstId:
                    type: number
                highPrice:
                    type: string
                lastId:
                    type: number
                lastPrice:
                    type: string
                lowPrice:
                    type: string
                openPrice:
                    type: string
                openTime:
                    type: number
                priceChange:
                    type: string
                priceChangePercent:
                    type: string
                quoteVolume:
                    type: string
                symbol:
                    type: string
                volume:
                    type: string
                weightedAvgPrice:
                    type: string
            type: object
        SpotGetTimeV3Resp:
            example: '{  "serverTime": 1499827319559}'
            properties:
                serverTime:
                    type: number
            type: object
        SpotGetTradesV3RespItem:
            properties:
                id:
                    type: number
                isBestMatch:
                    type: boolean
                isBuyerMaker:
                    type: boolean
                price:
                    type: string
                qty:
                    type: string
                quoteQty:
                    type: string
                time:
                    type: number
            type: object
        SpotGetUiKlinesV3RespItem:
            example: |
                [
                  1499040000000,      // Kline open time
                  "0.01634790",       // Open price
                  "0.80000000",       // High price
                  "0.01575800",       // Low price
                  "0.01577100",       // Close price
                  "148976.11427815",  // Volume
                  1499644799999,      // Kline close time
                  "2434.19055334",    // Quote asset volume
                  308,                // Number of trades
                  "1756.87402397",    // Taker buy base asset volume
                  "28.46694368",      // Taker buy quote asset volume
                  "0"                 // Unused field. Ignore.
                ]
            items:
                oneOf:
                    - type: string
                    - type: number
            type: array
info:
    description: OpenAPI specification for Binance cryptocurrency exchange - Spot API
    title: Binance Spot API
    version: 1.0.0
openapi: 3.0.3
paths:
    /api/v3/aggTrades:
        get:
            description: Get compressed, aggregate trades. Trades that fill at the time, from the same taker order, with the same price will have the quantity aggregated.
            operationId: SpotGetAggTradesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: ID to get aggregate trades from INCLUSIVE.
                  in: query
                  name: fromId
                  schema:
                    type: integer
                - description: Timestamp in ms to get aggregate trades from INCLUSIVE.
                  in: query
                  name: startTime
                  schema:
                    type: integer
                - description: Timestamp in ms to get aggregate trades until INCLUSIVE.
                  in: query
                  name: endTime
                  schema:
                    type: integer
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/SpotGetAggTradesV3RespItem'
                                type: array
                    description: Successful operation
            summary: Compressed/Aggregate trades list
            tags:
                - Market Data endpoints
                - V3 APIs
    /api/v3/allOrders:
        get:
            description: Get all account orders; active, canceled, or filled.
            operationId: SpotGetAllOrdersV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    type: integer
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    type: integer
            responses: {}
            summary: All orders (USER_DATA)
            tags:
                - Trading endpoints
                - V3 APIs
    /api/v3/avgPrice:
        get:
            description: Current average price for a symbol.
            operationId: SpotGetAvgPriceV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetAvgPriceV3Resp'
                    description: Successful operation
            summary: Current average price
            tags:
                - Market Data endpoints
                - V3 APIs
    /api/v3/depth:
        get:
            operationId: SpotGetDepthV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Default 100; max 5000. <br/> If limit &gt; 5000. then the response will truncate to 5000.
                  in: query
                  name: limit
                  schema:
                    default: 100
                    maximum: 5000
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDepthV3Resp'
                    description: Successful operation
            summary: Order book
            tags:
                - Market Data endpoints
                - V3 APIs
    /api/v3/exchangeInfo:
        get:
            description: Current exchange trading rules and symbol information
            operationId: SpotGetExchangeInfoV3
            parameters:
                - description: 'Example: curl -X GET &#34;<a href="https://api.binance.com/api/v3/exchangeInfo?symbol=BNBBTC" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?symbol=BNBBTC</a>&#34;'
                  in: query
                  name: symbol
                  schema:
                    type: string
                - description: 'Examples: curl -X GET &#34;<a href="https://api.binance.com/api/v3/exchangeInfo?symbols=%5B%22BNBBTC%22,%22BTCUSDT%22%5D" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?symbols=%5B%22BNBBTC%22,%22BTCUSDT%22%5D</a>&#34; <br/> or <br/> curl -g -X  GET &#39;<a href="https://api.binance.com/api/v3/exchangeInfo?symbols=%5B%22BTCUSDT%22,%22BNBBTC" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?symbols=[&#34;BTCUSDT&#34;,&#34;BNBBTC</a>&#34;]&#39;'
                  in: query
                  name: symbols
                  schema:
                    type: string
                - description: 'Examples: curl -X GET &#34;<a href="https://api.binance.com/api/v3/exchangeInfo?permissions=SPOT" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?permissions=SPOT</a>&#34; <br/> or <br/> curl -X GET &#34;<a href="https://api.binance.com/api/v3/exchangeInfo?permissions=%5B%22MARGIN%22%2C%22LEVERAGED%22%5D" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?permissions=%5B%22MARGIN%22%2C%22LEVERAGED%22%5D</a>&#34; <br/> or <br/> curl -g -X GET &#39;<a href="https://api.binance.com/api/v3/exchangeInfo?permissions=%5B%22MARGIN%22,%22LEVERAGED" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?permissions=[&#34;MARGIN&#34;,&#34;LEVERAGED</a>&#34;]&#39;'
                  in: query
                  name: permissions
                  schema:
                    items:
                        default: ""
                        type: string
                    type: array
                - description: Controls whether the content of the `permissionSets` field is populated or not. Defaults to `true`
                  in: query
                  name: showPermissionSets
                  schema:
                    type: boolean
                - description: 'Filters symbols that have this `tradingStatus`. Valid values: `TRADING`, `HALT`, `BREAK` <br/> Cannot be used in combination with `symbols` or `symbol`.'
                  in: query
                  name: symbolStatus
                  schema:
                    enum:
                        - TRADING
                        - HALT
                        - BREAK
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetExchangeInfoV3Resp'
                    description: Successful operation
            summary: Exchange information
            tags:
                - General endpoints
                - V3 APIs
    /api/v3/historicalTrades:
        get:
            description: Get older trades.
            operationId: SpotGetHistoricalTradesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
                - description: TradeId to fetch from. Default gets most recent trades.
                  in: query
                  name: fromId
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                example: '[  {    "id": 28457,    "price": "4.00000100",    "qty": "12.00000000",    "quoteQty": "48.000012",    "time": 1499865549590,    "isBuyerMaker": true,    "isBestMatch": true  }]'
                                items:
                                    $ref: '#/components/schemas/SpotGetHistoricalTradesV3RespItem'
                                type: array
                    description: Successful operation
            summary: Old trade lookup
            tags:
                - Market Data endpoints
                - V3 APIs
    /api/v3/klines:
        get:
            description: |-
                Kline/candlestick bars for a symbol.
                Klines are uniquely identified by their open time.
            operationId: SpotGetKlinesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: interval
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    type: integer
                - description: 'Default: 0 (UTC)'
                  in: query
                  name: timeZone
                  schema:
                    default: 0
                    type: string
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/SpotGetKlinesV3RespItem'
                                type: array
                    description: Successful operation
            summary: Kline/Candlestick data
            tags:
                - Market Data endpoints
                - V3 APIs
    /api/v3/openOrders:
        delete:
            description: |-
                Cancels all active orders on a symbol.
                This includes orders that are part of an order list.
            operationId: SpotDeleteOpenOrdersV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                example: '[  {    "symbol": "BTCUSDT",    "origClientOrderId": "E6APeyTJvkMvLMYMqu1KQ4",    "orderId": 11,    "orderListId": -1,    "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx",    "transactTime": 1684804350068,    "price": "0.089853",    "origQty": "0.178622",    "executedQty": "0.000000",    "cummulativeQuoteQty": "0.000000",    "status": "CANCELED",    "timeInForce": "GTC",    "type": "LIMIT",    "side": "BUY",    "selfTradePreventionMode": "NONE"  },  {    "symbol": "BTCUSDT",    "origClientOrderId": "A3EF2HCwxgZPFMrfwbgrhv",    "orderId": 13,    "orderListId": -1,    "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx",    "transactTime": 1684804350069,    "price": "0.090430",    "origQty": "0.178622",    "executedQty": "0.000000",    "cummulativeQuoteQty": "0.000000",    "status": "CANCELED",    "timeInForce": "GTC",    "type": "LIMIT",    "side": "BUY",    "selfTradePreventionMode": "NONE"  },  {    "orderListId": 1929,    "contingencyType": "OCO",    "listStatusType": "ALL_DONE",    "listOrderStatus": "ALL_DONE",    "listClientOrderId": "2inzWQdDvZLHbbAmAozX2N",    "transactionTime": 1585230948299,    "symbol": "BTCUSDT",    "orders": [      {        "symbol": "BTCUSDT",        "orderId": 20,        "clientOrderId": "CwOOIPHSmYywx6jZX77TdL"      },      {        "symbol": "BTCUSDT",        "orderId": 21,        "clientOrderId": "461cPg51vQjV3zIMOXNz39"      }    ],    "orderReports": [      {        "symbol": "BTCUSDT",        "origClientOrderId": "CwOOIPHSmYywx6jZX77TdL",        "orderId": 20,        "orderListId": 1929,        "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx",        "transactTime": 1688005070874,        "price": "0.668611",        "origQty": "0.690354",        "executedQty": "0.000000",        "cummulativeQuoteQty": "0.000000",        "status": "CANCELED",        "timeInForce": "GTC",        "type": "STOP_LOSS_LIMIT",        "side": "BUY",        "stopPrice": "0.378131",        "icebergQty": "0.017083",        "selfTradePreventionMode": "NONE"      },      {        "symbol": "BTCUSDT",        "origClientOrderId": "461cPg51vQjV3zIMOXNz39",        "orderId": 21,        "orderListId": 1929,        "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx",        "transactTime": 1688005070874,        "price": "0.008791",        "origQty": "0.690354",        "executedQty": "0.000000",        "cummulativeQuoteQty": "0.000000",        "status": "CANCELED",        "timeInForce": "GTC",        "type": "LIMIT_MAKER",        "side": "BUY",        "icebergQty": "0.639962",        "selfTradePreventionMode": "NONE"      }    ]  }]'
                                items:
                                    $ref: '#/components/schemas/SpotDeleteOpenOrdersV3RespItem'
                                type: array
                    description: Successful operation
            summary: Cancel All Open Orders on a Symbol (TRADE)
            tags:
                - Trading endpoints
                - V3 APIs
        get:
            description: |-
                Get all open orders on a symbol. Careful when accessing this with no symbol.
                Weight:
                6 for a single symbol; 80 when the symbol parameter is omitted
            operationId: SpotGetOpenOrdersV3
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    type: integer
            responses: {}
            summary: Current open orders (USER_DATA)
            tags:
                - Trading endpoints
                - V3 APIs
    /api/v3/order:
        delete:
            description: Cancel an active order.
            operationId: SpotDeleteOrderV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    type: integer
                - in: query
                  name: origClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: Used to uniquely identify this cancel. Automatically generated by default.
                  in: query
                  name: newClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: 'Supported values: <br/>`ONLY_NEW` - Cancel will succeed if the order status is `NEW`.<br/> `ONLY_PARTIALLY_FILLED ` - Cancel will succeed if order status is `PARTIALLY_FILLED`.'
                  in: query
                  name: cancelRestrictions
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`.
                  in: query
                  name: recvWindow
                  schema:
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    type: integer
            responses: {}
            summary: Cancel order (TRADE)
            tags:
                - Trading endpoints
                - V3 APIs
        get:
            description: Check an order's status.
            operationId: SpotGetOrderV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    type: integer
                - in: query
                  name: origClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    type: integer
            responses: {}
            summary: Query order (USER_DATA)
            tags:
                - Trading endpoints
                - V3 APIs
        post:
            description: Send in a new order.
            operationId: SpotCreateOrderV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Please see <a href="/docs/binance-spot-api-docs/enums#side">Enums</a> for supported values.
                  in: query
                  name: side
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Please see <a href="/docs/binance-spot-api-docs/enums#ordertypes">Enums</a> for supported values
                  in: query
                  name: type
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Please see <a href="/docs/binance-spot-api-docs/enums#timeinforce">Enums</a> for supported values.
                  in: query
                  name: timeInForce
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: quantity
                  schema:
                    type: number
                - in: query
                  name: quoteOrderQty
                  schema:
                    type: number
                - in: query
                  name: price
                  schema:
                    type: number
                - description: A unique id among open orders. Automatically generated if not sent.<br/> Orders with the same `newClientOrderID` can be accepted only when the previous one is filled, otherwise the order will be rejected.
                  in: query
                  name: newClientOrderId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: strategyId
                  schema:
                    type: integer
                - description: The value cannot be less than `1000000`.
                  in: query
                  name: strategyType
                  schema:
                    type: integer
                - description: Used with `STOP_LOSS`, `STOP_LOSS_LIMIT`, `TAKE_PROFIT`, and `TAKE_PROFIT_LIMIT` orders.
                  in: query
                  name: stopPrice
                  schema:
                    type: number
                - description: Used with `STOP_LOSS`, `STOP_LOSS_LIMIT`, `TAKE_PROFIT`, and `TAKE_PROFIT_LIMIT` orders.
                  in: query
                  name: trailingDelta
                  schema:
                    type: integer
                - description: Used with `LIMIT`, `STOP_LOSS_LIMIT`, and `TAKE_PROFIT_LIMIT` to create an iceberg order.
                  in: query
                  name: icebergQty
                  schema:
                    type: number
                - description: Set the response JSON. `ACK`, `RESULT`, or `FULL`; `MARKET` and `LIMIT` order types default to `FULL`, all other orders default to `ACK`.
                  in: query
                  name: newOrderRespType
                  schema:
                    default: ""
                    type: string
                - description: 'The allowed enums is dependent on what is configured on the symbol. The possible supported values are: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#stpmodes">STP Modes</a>.'
                  in: query
                  name: selfTradePreventionMode
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateOrderV3Resp'
                    description: Successful operation
            summary: New order (TRADE)
            tags:
                - Trading endpoints
                - V3 APIs
    /api/v3/order/cancelReplace:
        post:
            description: |-
                Cancels an existing order and places a new order on the same symbol.
                Filters and Order Count are evaluated before the processing of the cancellation and order placement occurs.
                A new order that was not attempted (i.e. when newOrderResult: NOT_ATTEMPTED ), will still increase the order count by 1.
            operationId: SpotCreateOrderCancelReplaceV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: side
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: type
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: 'The allowed values are: <br/> `STOP_ON_FAILURE` - If the cancel request fails, the new order placement will not be attempted. <br/> `ALLOW_FAILURE` - new order placement will be attempted even if cancel request fails.'
                  in: query
                  name: cancelReplaceMode
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: timeInForce
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: quantity
                  schema:
                    type: number
                - in: query
                  name: quoteOrderQty
                  schema:
                    type: number
                - in: query
                  name: price
                  schema:
                    type: number
                - description: Used to uniquely identify this cancel. Automatically generated by default.
                  in: query
                  name: cancelNewClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: Either the `cancelOrigClientOrderId` or `cancelOrderId` must be provided. If both are provided, `cancelOrderId` takes precedence.
                  in: query
                  name: cancelOrigClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: Either the `cancelOrigClientOrderId` or `cancelOrderId` must be provided. If both are provided, `cancelOrderId` takes precedence.
                  in: query
                  name: cancelOrderId
                  schema:
                    type: integer
                - description: Used to identify the new order.
                  in: query
                  name: newClientOrderId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: strategyId
                  schema:
                    type: integer
                - description: The value cannot be less than `1000000`.
                  in: query
                  name: strategyType
                  schema:
                    type: integer
                - in: query
                  name: stopPrice
                  schema:
                    type: number
                - in: query
                  name: trailingDelta
                  schema:
                    type: integer
                - in: query
                  name: icebergQty
                  schema:
                    type: number
                - description: 'Allowed values: <br/> `ACK`, `RESULT`, `FULL` <br/> `MARKET` and `LIMIT` orders types default to `FULL`; all other orders default to `ACK`'
                  in: query
                  name: newOrderRespType
                  schema:
                    default: ""
                    type: string
                - description: 'The allowed enums is dependent on what is configured on the symbol. The possible supported values are: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#stpmodes">STP Modes</a>.'
                  in: query
                  name: selfTradePreventionMode
                  schema:
                    default: ""
                    type: string
                - description: 'Supported values: <br/>`ONLY_NEW` - Cancel will succeed if the order status is `NEW`.<br/> `ONLY_PARTIALLY_FILLED ` - Cancel will succeed if order status is `PARTIALLY_FILLED`. For more information please refer to <a href="/docs/binance-spot-api-docs/rest-api/trading-endpoints#regarding-cancelrestrictions">Regarding `cancelRestrictions`</a>'
                  in: query
                  name: cancelRestrictions
                  schema:
                    default: ""
                    type: string
                - description: 'Supported values: <br/> `DO_NOTHING` (default)- will only attempt to cancel the order if account has not exceeded the unfilled order rate limit<br/> `CANCEL_ONLY` - will always cancel the order'
                  in: query
                  name: orderRateLimitExceededMode
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    type: integer
            responses: {}
            summary: Cancel an Existing Order and Send a New Order (TRADE)
            tags:
                - Trading endpoints
                - V3 APIs
    /api/v3/order/oco:
        post:
            description: |-
                Send in a new OCO.
                - Price Restrictions:

                SELL: Limit Price > Last Price > Stop Price
                BUY: Limit Price < Last Price < Stop Price
                - SELL: Limit Price > Last Price > Stop Price
                - BUY: Limit Price < Last Price < Stop Price
                - Quantity Restrictions:

                Both legs must have the same quantity.
                ICEBERG quantities however do not have to be the same
                - Both legs must have the same quantity.
                - ICEBERG quantities however do not have to be the same
                - OCO adds 2 orders to the unfilled order count, EXCHANGE_MAX_ORDERS filter and the MAX_NUM_ORDERS filter.
            operationId: SpotCreateOrderOcoV3
            parameters:
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateOrderOcoV3Resp'
                    description: Successful operation
            summary: Order lists
            tags:
                - Trading endpoints
                - V3 APIs
    /api/v3/order/test:
        post:
            description: |-
                Test new order creation and signature/recvWindow long.
                Creates and validates a new order but does not send it into the matching engine.
                Weight:
            operationId: SpotCreateOrderTestV3
            parameters:
                - description: 'Default: `false`'
                  in: query
                  name: computeCommissionRates
                  schema:
                    type: boolean
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateOrderTestV3Resp'
                    description: Successful operation
            summary: Test new order (TRADE)
            tags:
                - Trading endpoints
                - V3 APIs
    /api/v3/ping:
        get:
            description: Test connectivity to the Rest API.
            operationId: SpotGetPingV3
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetPingV3Resp'
                    description: Successful operation
            summary: Test connectivity
            tags:
                - General endpoints
                - V3 APIs
    /api/v3/sor/order:
        post:
            description: Places an order using smart order routing (SOR).
            operationId: SpotCreateSorOrderV3
            parameters:
                - description: 'Default: `false`'
                  in: query
                  name: computeCommissionRates
                  schema:
                    type: boolean
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateSorOrderV3Resp'
                    description: Successful operation
            summary: SOR
            tags:
                - Trading endpoints
                - V3 APIs
    /api/v3/ticker:
        get:
            description: |-
                Note: This endpoint is different from the GET /api/v3/ticker/24hr endpoint.
                The window used to compute statistics will be no more than 59999ms from the requested windowSize.
                openTime for /api/v3/ticker always starts on a minute, while the closeTime is the current time of the request.
                As such, the effective window will be up to 59999ms wider than windowSize.
                E.g. If the closeTime is 1641287867099 (January 04, 2022 09:17:47:099 UTC) , and the windowSize is 1d. the openTime will be: 1641201420000 (January 3, 2022, 09:17:00)
                Weight:
                4 for each requested symbol regardless of windowSize.  The weight for this request will cap at 200 once the number of symbols in the request is more than 50.
            operationId: SpotGetTickerV3
            parameters:
                - description: 'Either `symbol` or `symbols` must be provided <br/><br/> Examples of accepted format for the `symbols` parameter: <br/> [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>or <br/>%5B%22BTCUSDT%22,%22BNBUSDT%22%5D <br/><br/> The maximum number of `symbols` allowed in a request is 100.'
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: 'Either `symbol` or `symbols` must be provided <br/><br/> Examples of accepted format for the `symbols` parameter: <br/> [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>or <br/>%5B%22BTCUSDT%22,%22BNBUSDT%22%5D <br/><br/> The maximum number of `symbols` allowed in a request is 100.'
                  in: query
                  name: symbols
                  schema:
                    default: ""
                    type: string
                - description: 'Defaults to `1d` if no parameter provided <br/> Supported `windowSize` values: <br/> `1m`,`2m`....`59m` for minutes <br/> `1h`, `2h`....`23h` - for hours <br/> `1d`...`7d` - for days <br/><br/> Units cannot be combined (e.g. `1d2h` is not allowed)'
                  in: query
                  name: windowSize
                  schema:
                    default: ""
                    type: string
                - description: 'Supported values: `FULL` or `MINI`. <br/>If none provided, the default is `FULL`'
                  in: query
                  name: type
                  schema:
                    default: FULL
                    enum:
                        - FULL
                        - MINI
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - items:
                                        $ref: '#/components/schemas/SpotGetTickerV3RespItem'
                                      type: array
                                    - $ref: '#/components/schemas/SpotGetTickerV3RespItem'
                    description: Successful operation
            summary: Rolling window price change statistics
            tags:
                - Market Data endpoints
                - V3 APIs
    /api/v3/ticker/24hr:
        get:
            description: |-
                24 hour rolling window price change statistics. Careful when accessing this with no symbol.
                Weight:
            operationId: SpotGetTicker24hrV3
            parameters:
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, tickers for all symbols will be returned in an array. <br/><br/>
                             Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, tickers for all symbols will be returned in an array. <br/><br/>
                             Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbols
                  schema:
                    default: ""
                    type: string
                - description: 'Supported values: `FULL` or `MINI`. <br/>If none provided, the default is `FULL`'
                  in: query
                  name: type
                  schema:
                    default: FULL
                    enum:
                        - FULL
                        - MINI
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - items:
                                        $ref: '#/components/schemas/SpotGetTicker24hrV3RespItem'
                                      type: array
                                    - $ref: '#/components/schemas/SpotGetTicker24hrV3RespItem'
                    description: Successful operation
            summary: 24hr ticker price change statistics
            tags:
                - Market Data endpoints
                - V3 APIs
    /api/v3/ticker/bookTicker:
        get:
            description: |-
                Best price/qty on the order book for a symbol or symbols.
                Weight:
            operationId: SpotGetTickerBookTickerV3
            parameters:
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, bookTickers for all symbols will be returned in an array.
                             <br/><br/>
                            Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, bookTickers for all symbols will be returned in an array.
                             <br/><br/>
                            Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbols
                  schema:
                    default: ""
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - items:
                                        $ref: '#/components/schemas/SpotGetTickerBookTickerV3RespItem'
                                      type: array
                                    - $ref: '#/components/schemas/SpotGetTickerBookTickerV3RespItem'
                    description: Successful operation
            summary: Symbol order book ticker
            tags:
                - Market Data endpoints
                - V3 APIs
    /api/v3/ticker/price:
        get:
            description: |-
                Latest price for a symbol or symbols.
                Weight:
            operationId: SpotGetTickerPriceV3
            parameters:
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, prices for all symbols will be returned in an array. <br/><br/>
                            Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, prices for all symbols will be returned in an array. <br/><br/>
                            Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbols
                  schema:
                    default: ""
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - items:
                                        $ref: '#/components/schemas/SpotGetTickerPriceV3RespItem'
                                      type: array
                                    - $ref: '#/components/schemas/SpotGetTickerPriceV3RespItem'
                    description: Successful operation
            summary: Symbol price ticker
            tags:
                - Market Data endpoints
                - V3 APIs
    /api/v3/ticker/tradingDay:
        get:
            description: |-
                Price change statistics for a trading day.
                Weight:
                4 for each requested symbol.  The weight for this request will cap at 200 once the number of symbols in the request is more than 50.
            operationId: SpotGetTickerTradingDayV3
            parameters:
                - description: 'Either `symbol` or `symbols` must be provided <br/><br/> Examples of accepted format for the `symbols` parameter: <br/> [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>or <br/>%5B%22BTCUSDT%22,%22BNBUSDT%22%5D <br/><br/> The maximum number of `symbols` allowed in a request is 100.'
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: 'Either `symbol` or `symbols` must be provided <br/><br/> Examples of accepted format for the `symbols` parameter: <br/> [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>or <br/>%5B%22BTCUSDT%22,%22BNBUSDT%22%5D <br/><br/> The maximum number of `symbols` allowed in a request is 100.'
                  in: query
                  name: symbols
                  schema:
                    default: ""
                    type: string
                - description: 'Default: 0 (UTC)'
                  in: query
                  name: timeZone
                  schema:
                    default: 0
                    type: string
                - description: 'Supported values: `FULL` or `MINI`. <br/>If none provided, the default is `FULL`'
                  in: query
                  name: type
                  schema:
                    default: FULL
                    enum:
                        - FULL
                        - MINI
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - items:
                                        $ref: '#/components/schemas/SpotGetTickerTradingDayV3RespItem'
                                      type: array
                                    - $ref: '#/components/schemas/SpotGetTickerTradingDayV3RespItem'
                    description: Successful operation
            summary: Trading Day Ticker
            tags:
                - Market Data endpoints
                - V3 APIs
    /api/v3/time:
        get:
            description: Test connectivity to the Rest API and get the current server time.
            operationId: SpotGetTimeV3
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetTimeV3Resp'
                    description: Successful operation
            summary: Check server time
            tags:
                - General endpoints
                - V3 APIs
    /api/v3/trades:
        get:
            description: Get recent trades.
            operationId: SpotGetTradesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                example: '[  {    "id": 28457,    "price": "4.00000100",    "qty": "12.00000000",    "quoteQty": "48.000012",    "time": 1499865549590,    "isBuyerMaker": true,    "isBestMatch": true  }]'
                                items:
                                    $ref: '#/components/schemas/SpotGetTradesV3RespItem'
                                type: array
                    description: Successful operation
            summary: Recent trades list
            tags:
                - Market Data endpoints
                - V3 APIs
    /api/v3/uiKlines:
        get:
            description: |-
                The request is similar to klines having the same parameters and response.
                uiKlines return modified kline data, optimized for presentation of candlestick charts.
            operationId: SpotGetUiKlinesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: See <a href="/docs/binance-spot-api-docs/rest-api/market-data-endpoints#kline-intervals">`klines`</a>
                  in: query
                  name: interval
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    type: integer
                - description: 'Default: 0 (UTC)'
                  in: query
                  name: timeZone
                  schema:
                    default: 0
                    type: string
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/SpotGetUiKlinesV3RespItem'
                                type: array
                    description: Successful operation
            summary: UIKlines
            tags:
                - Market Data endpoints
                - V3 APIs
servers:
    - description: Binance Spot API Server
      url: https://api.binance.com

components:
    schemas:
        APIError:
            description: binance API error
            properties:
                code:
                    type: integer
                msg:
                    type: string
            type: object
        SpotCreateOrderCancelReplaceV3Req:
            properties:
                cancelNewClientOrderId:
                    default: ""
                    description: Used to uniquely identify this cancel. Automatically generated by default.
                    type: string
                cancelOrderId:
                    description: Either the `cancelOrigClientOrderId` or `cancelOrderId` must be provided. If both are provided, `cancelOrderId` takes precedence.
                    format: int64
                    type: integer
                cancelOrigClientOrderId:
                    default: ""
                    description: Either the `cancelOrigClientOrderId` or `cancelOrderId` must be provided. If both are provided, `cancelOrderId` takes precedence.
                    type: string
                cancelReplaceMode:
                    default: STOP_ON_FAILURE
                    description: 'The allowed values are: <br/> `STOP_ON_FAILURE` - If the cancel request fails, the new order placement will not be attempted. <br/> `ALLOW_FAILURE` - new order placement will be attempted even if cancel request fails.'
                    enum:
                        - STOP_ON_FAILURE
                        - ALLOW_FAILURE
                    type: string
                cancelRestrictions:
                    default: ONLY_NEW
                    description: 'Supported values: <br/>`ONLY_NEW` - Cancel will succeed if the order status is `NEW`.<br/> `ONLY_PARTIALLY_FILLED ` - Cancel will succeed if order status is `PARTIALLY_FILLED`. For more information please refer to <a href="/docs/binance-spot-api-docs/rest-api/trading-endpoints#regarding-cancelrestrictions">Regarding `cancelRestrictions`</a>'
                    enum:
                        - ONLY_NEW
                        - ONLY_PARTIALLY_FILLED
                    type: string
                icebergQty:
                    type: number
                newClientOrderId:
                    default: ""
                    description: Used to identify the new order.
                    type: string
                newOrderRespType:
                    default: FULL
                    description: 'Allowed values: <br/> `ACK`, `RESULT`, `FULL` <br/> `MARKET` and `LIMIT` orders types default to `FULL`; all other orders default to `ACK`'
                    enum:
                        - ACK
                        - RESULT
                        - FULL
                    type: string
                orderRateLimitExceededMode:
                    default: DO_NOTHING
                    description: 'Supported values: <br/> `DO_NOTHING` (default)- will only attempt to cancel the order if account has not exceeded the unfilled order rate limit<br/> `CANCEL_ONLY` - will always cancel the order'
                    enum:
                        - DO_NOTHING
                        - CANCEL_ONLY
                    type: string
                price:
                    type: number
                quantity:
                    type: number
                quoteOrderQty:
                    type: number
                recvWindow:
                    description: The value cannot be greater than `60000`
                    format: int64
                    maximum: 60000
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    description: 'The allowed enums is dependent on what is configured on the symbol. The possible supported values are: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#stpmodes">STP Modes</a>.'
                    type: string
                side:
                    default: ""
                    type: string
                stopPrice:
                    type: number
                strategyId:
                    format: int64
                    type: integer
                strategyType:
                    description: The value cannot be less than `1000000`.
                    minimum: 1e+06
                    type: integer
                symbol:
                    default: ""
                    type: string
                timeInForce:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                trailingDelta:
                    format: int64
                    type: integer
                type:
                    default: ""
                    type: string
            required:
                - symbol
                - side
                - type
                - cancelReplaceMode
                - timestamp
            type: object
        SpotCreateOrderCancelReplaceV3Resp:
            example: |-
                // Both the cancel order placement and new order placement succeeded.
                {
                  "cancelResult": "SUCCESS",
                  "newOrderResult": "SUCCESS",
                  "cancelResponse": {
                    "symbol": "BTCUSDT",
                    "origClientOrderId": "DnLo3vTAQcjha43lAZhZ0y",
                    "orderId": 9,
                    "orderListId": -1,
                    "clientOrderId": "osxN3JXAtJvKvCqGeMWMVR",
                    "transactTime": 1684804350068,
                    "price": "0.01000000",
                    "origQty": "0.000100",
                    "executedQty": "0.00000000",
                    "origQuoteOrderQty": "0.000000",
                    "cummulativeQuoteQty": "0.00000000",
                    "status": "CANCELED",
                    "timeInForce": "GTC",
                    "type": "LIMIT",
                    "side": "SELL",
                    "selfTradePreventionMode": "NONE"
                  },
                  "newOrderResponse": {
                    "symbol": "BTCUSDT",
                    "orderId": 10,
                    "orderListId": -1,
                    "clientOrderId": "wOceeeOzNORyLiQfw7jd8S",
                    "transactTime": 1652928801803,
                    "price": "0.02000000",
                    "origQty": "0.040000",
                    "executedQty": "0.00000000",
                    "cummulativeQuoteQty": "0.00000000",
                    "origQuoteOrderQty": "0.000000",
                    "status": "NEW",
                    "timeInForce": "GTC",
                    "type": "LIMIT",
                    "side": "BUY",
                    "workingTime": 1669277163808,
                    "fills": [],
                    "selfTradePreventionMode": "NONE"
                  }
                }
            properties:
                cancelResponse:
                    $ref: '#/components/schemas/SpotCreateOrderCancelReplaceV3RespCancelResponse'
                cancelResult:
                    type: string
                newOrderResponse:
                    $ref: '#/components/schemas/SpotCreateOrderCancelReplaceV3RespNewOrderResponse'
                newOrderResult:
                    type: string
            type: object
        SpotCreateOrderCancelReplaceV3RespCancelResponse:
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                orderId:
                    type: integer
                orderListId:
                    type: integer
                origClientOrderId:
                    type: string
                origQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                transactTime:
                    type: integer
                type:
                    type: string
            type: object
        SpotCreateOrderCancelReplaceV3RespNewOrderResponse:
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                fills:
                    items:
                        type: object
                    type: array
                orderId:
                    type: integer
                orderListId:
                    type: integer
                origQty:
                    type: string
                origQuoteOrderQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                transactTime:
                    type: integer
                type:
                    type: string
                workingTime:
                    type: integer
            type: object
        SpotCreateOrderListOcoV3Req:
            properties:
                aboveClientOrderId:
                    default: ""
                    description: Arbitrary unique ID among open orders for the above order. Automatically generated if not sent
                    type: string
                aboveIcebergQty:
                    description: Note that this can only be used if `aboveTimeInForce` is `GTC`.
                    type: integer
                abovePrice:
                    description: Can be used if `aboveType` is `STOP_LOSS_LIMIT` , `LIMIT_MAKER`, or `TAKE_PROFIT_LIMIT` to specify the limit price.
                    type: number
                aboveStopPrice:
                    description: Can be used if `aboveType` is `STOP_LOSS`, `STOP_LOSS_LIMIT`, `TAKE_PROFIT`, `TAKE_PROFIT_LIMIT` <br/>Either `aboveStopPrice` or `aboveTrailingDelta` or both, must be specified.
                    type: number
                aboveStrategyId:
                    description: Arbitrary numeric value identifying the above order within an order strategy.
                    type: integer
                aboveStrategyType:
                    description: Arbitrary numeric value identifying the above order strategy. <br/>Values smaller than 1000000 are reserved and cannot be used.
                    type: integer
                aboveTimeInForce:
                    description: Required if `aboveType` is `STOP_LOSS_LIMIT` or `TAKE_PROFIT_LIMIT`
                    type: number
                aboveTrailingDelta:
                    description: See <a href="/docs/binance-spot-api-docs/faqs/trailing-stop-faq">Trailing Stop order FAQ</a>.
                    type: integer
                aboveType:
                    default: STOP_LOSS_LIMIT
                    description: 'Supported values: `STOP_LOSS_LIMIT`, `STOP_LOSS`, `LIMIT_MAKER`, `TAKE_PROFIT`, `TAKE_PROFIT_LIMIT`'
                    enum:
                        - STOP_LOSS_LIMIT
                        - STOP_LOSS
                        - LIMIT_MAKER
                        - TAKE_PROFIT
                        - TAKE_PROFIT_LIMIT
                    type: string
                belowClientOrderId:
                    default: ""
                    description: Arbitrary unique ID among open orders for the below order. Automatically generated if not sent
                    type: string
                belowIcebergQty:
                    description: Note that this can only be used if `belowTimeInForce` is `GTC`.
                    type: integer
                belowPrice:
                    description: Can be used if `belowType` is `STOP_LOSS_LIMIT` , `LIMIT_MAKER`, or `TAKE_PROFIT_LIMIT` to specify the limit price.
                    type: number
                belowStopPrice:
                    description: Can be used if `belowType` is `STOP_LOSS`, `STOP_LOSS_LIMIT, TAKE_PROFIT` or `TAKE_PROFIT_LIMIT` <br/>Either belowStopPrice or belowTrailingDelta or both, must be specified.
                    type: number
                belowStrategyId:
                    description: Arbitrary numeric value identifying the below order within an order strategy.
                    type: integer
                belowStrategyType:
                    description: Arbitrary numeric value identifying the below order strategy. <br/>Values smaller than 1000000 are reserved and cannot be used.
                    type: integer
                belowTimeInForce:
                    default: ""
                    description: Required if `belowType` is `STOP_LOSS_LIMIT` or `TAKE_PROFIT_LIMIT`.
                    type: string
                belowTrailingDelta:
                    description: See <a href="/docs/binance-spot-api-docs/faqs/trailing-stop-faq">Trailing Stop order FAQ</a>.
                    type: integer
                belowType:
                    default: STOP_LOSS
                    description: 'Supported values: `STOP_LOSS`, `STOP_LOSS_LIMIT`, `TAKE_PROFIT`,`TAKE_PROFIT_LIMIT`'
                    enum:
                        - STOP_LOSS
                        - STOP_LOSS_LIMIT
                        - TAKE_PROFIT
                        - TAKE_PROFIT_LIMIT
                    type: string
                listClientOrderId:
                    default: ""
                    description: Arbitrary unique ID among open order lists. Automatically generated if not sent. <br/> A new order list with the same `listClientOrderId` is accepted only when the previous one is filled or completely expired. <br/> `listClientOrderId` is distinct from the `aboveClientOrderId` and the `belowCLientOrderId`.
                    type: string
                newOrderRespType:
                    default: FULL
                    description: 'Select response format: `ACK`, `RESULT`, `FULL`'
                    enum:
                        - ACK
                        - RESULT
                        - FULL
                    type: string
                quantity:
                    description: Quantity for both orders of the order list.
                    type: number
                recvWindow:
                    description: The value cannot be greater than `60000`.
                    maximum: 60000
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    description: 'The allowed enums is dependent on what is configured on the symbol. Supported values: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#stpmodes">STP Modes</a>'
                    type: string
                side:
                    default: ""
                    description: '`BUY` or `SELL`'
                    type: string
                symbol:
                    default: ""
                    type: string
                timestamp:
                    type: integer
            required:
                - symbol
                - side
                - quantity
                - aboveType
                - belowType
                - timestamp
            type: object
        SpotCreateOrderListOcoV3Resp:
            example: '{    "orderListId": 1,    "contingencyType": "OCO",    "listStatusType": "EXEC_STARTED",    "listOrderStatus": "EXECUTING",    "listClientOrderId": "lH1YDkuQKWiXVXHPSKYEIp",    "transactionTime": 1710485608839,    "symbol": "LTCBTC",    "orders": [        {            "symbol": "LTCBTC",            "orderId": 10,            "clientOrderId": "44nZvqpemY7sVYgPYbvPih"        },        {            "symbol": "LTCBTC",            "orderId": 11,            "clientOrderId": "NuMp0nVYnciDiFmVqfpBqK"        }    ],    "orderReports": [        {            "symbol": "LTCBTC",            "orderId": 10,            "orderListId": 1,            "clientOrderId": "44nZvqpemY7sVYgPYbvPih",            "transactTime": 1710485608839,            "price": "1.00000000",            "origQty": "5.00000000",            "executedQty": "0.00000000",            "origQuoteOrderQty": "0.000000",            "cummulativeQuoteQty": "0.00000000",            "status": "NEW",            "timeInForce": "GTC",            "type": "STOP_LOSS_LIMIT",            "side": "SELL",            "stopPrice": "1.00000000",            "workingTime": -1,            "icebergQty": "1.00000000",            "selfTradePreventionMode": "NONE"        },        {            "symbol": "LTCBTC",            "orderId": 11,            "orderListId": 1,            "clientOrderId": "NuMp0nVYnciDiFmVqfpBqK",            "transactTime": 1710485608839,            "price": "3.00000000",            "origQty": "5.00000000",            "executedQty": "0.00000000",            "origQuoteOrderQty": "0.000000",            "cummulativeQuoteQty": "0.00000000",            "status": "NEW",            "timeInForce": "GTC",            "type": "LIMIT_MAKER",            "side": "SELL",            "workingTime": 1710485608839,            "selfTradePreventionMode": "NONE"        }    ]}'
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    type: number
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            icebergQty:
                                type: string
                            orderId:
                                type: number
                            orderListId:
                                type: number
                            origQty:
                                type: string
                            origQuoteOrderQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            stopPrice:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                type: number
                            type:
                                type: string
                            workingTime:
                                type: number
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                type: number
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    type: number
            type: object
        SpotCreateOrderListOtoV3Req:
            properties:
                listClientOrderId:
                    default: ""
                    description: Arbitrary unique ID among open order lists. Automatically generated if not sent. <br/>A new order list with the same listClientOrderId is accepted only when the previous one is filled or completely expired. <br/> `listClientOrderId` is distinct from the `workingClientOrderId` and the `pendingClientOrderId`.
                    type: string
                newOrderRespType:
                    default: FULL
                    description: 'Format of the JSON response. Supported values: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#orderresponsetype">Order Response Type</a>'
                    enum:
                        - ACK
                        - RESULT
                        - FULL
                    type: string
                pendingClientOrderId:
                    default: ""
                    description: Arbitrary unique ID among open orders for the pending order.<br/> Automatically generated if not sent.
                    type: string
                pendingIcebergQty:
                    description: This can only be used if `pendingTimeInForce` is `GTC` or if `pendingType` is `LIMIT_MAKER`.
                    type: number
                pendingPrice:
                    type: number
                pendingQuantity:
                    description: Sets the quantity for the pending order.
                    type: number
                pendingSide:
                    default: ""
                    description: 'Supported values: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#side">Order Side</a>'
                    type: string
                pendingStopPrice:
                    type: number
                pendingStrategyId:
                    description: Arbitrary numeric value identifying the pending order within an order strategy.
                    format: int64
                    type: integer
                pendingStrategyType:
                    description: Arbitrary numeric value identifying the pending order strategy. <br/> Values smaller than 1000000 are reserved and cannot be used.
                    type: integer
                pendingTimeInForce:
                    default: ""
                    description: 'Supported values: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#timeinforce">Time In Force</a>'
                    type: string
                pendingTrailingDelta:
                    type: number
                pendingType:
                    default: ""
                    description: 'Supported values: <a href="/docs/binance-spot-api-docs/rest-api/trading-endpoints#order-type">Order Types</a><br/> Note that `MARKET` orders using `quoteOrderQty` are not supported.'
                    type: string
                recvWindow:
                    description: The value cannot be greater than `60000`.
                    format: int64
                    maximum: 60000
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    description: 'The allowed values are dependent on what is configured on the symbol. Supported values: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#stpmodes">STP Modes</a>'
                    type: string
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                workingClientOrderId:
                    default: ""
                    description: Arbitrary unique ID among open orders for the working order.<br/> Automatically generated if not sent.
                    type: string
                workingIcebergQty:
                    description: This can only be used if `workingTimeInForce` is `GTC`, or if `workingType` is `LIMIT_MAKER`.
                    type: number
                workingPrice:
                    type: number
                workingQuantity:
                    description: Sets the quantity for the working order.
                    type: number
                workingSide:
                    default: ""
                    description: 'Supported values: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#side">Order Side</a>'
                    type: string
                workingStrategyId:
                    description: Arbitrary numeric value identifying the working order within an order strategy.
                    format: int64
                    type: integer
                workingStrategyType:
                    description: Arbitrary numeric value identifying the working order strategy. <br/> Values smaller than 1000000 are reserved and cannot be used.
                    type: integer
                workingTimeInForce:
                    default: ""
                    description: 'Supported values: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#timeinforce">Time In Force</a>'
                    type: string
                workingType:
                    default: LIMIT
                    description: 'Supported values: `LIMIT`,`LIMIT_MAKER`'
                    enum:
                        - LIMIT
                        - LIMIT_MAKER
                    type: string
            required:
                - symbol
                - workingType
                - workingSide
                - workingPrice
                - workingQuantity
                - pendingType
                - pendingSide
                - pendingQuantity
                - timestamp
            type: object
        SpotCreateOrderListOtoV3Resp:
            example: '{    "orderListId": 0,    "contingencyType": "OTO",    "listStatusType": "EXEC_STARTED",    "listOrderStatus": "EXECUTING",    "listClientOrderId": "yl2ERtcar1o25zcWtqVBTC",    "transactionTime": 1712289389158,    "symbol": "ABCDEF",    "orders": [        {            "symbol": "LTCBTC",            "orderId": 4,            "clientOrderId": "Bq17mn9fP6vyCn75Jw1xya"        },        {            "symbol": "LTCBTC",            "orderId": 5,            "clientOrderId": "arLFo0zGJVDE69cvGBaU0d"        }    ],    "orderReports": [        {            "symbol": "LTCBTC",            "orderId": 4,            "orderListId": 0,            "clientOrderId": "Bq17mn9fP6vyCn75Jw1xya",            "transactTime": 1712289389158,            "price": "1.00000000",            "origQty": "1.00000000",            "executedQty": "0.00000000",            "origQuoteOrderQty": "0.000000",            "cummulativeQuoteQty": "0.00000000",            "status": "NEW",            "timeInForce": "GTC",            "type": "LIMIT",            "side": "SELL",            "workingTime": 1712289389158,            "selfTradePreventionMode": "NONE"        },        {            "symbol": "LTCBTC",            "orderId": 5,            "orderListId": 0,            "clientOrderId": "arLFo0zGJVDE69cvGBaU0d",            "transactTime": 1712289389158,            "price": "0.00000000",            "origQty": "5.00000000",            "executedQty": "0.00000000",            "origQuoteOrderQty": "0.000000",            "cummulativeQuoteQty": "0.00000000",            "status": "PENDING_NEW",            "timeInForce": "GTC",            "type": "MARKET",            "side": "BUY",            "workingTime": -1,            "selfTradePreventionMode": "NONE"        }    ]}'
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    type: number
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            orderId:
                                type: number
                            orderListId:
                                type: number
                            origQty:
                                type: string
                            origQuoteOrderQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                type: number
                            type:
                                type: string
                            workingTime:
                                type: number
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                type: number
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    type: number
            type: object
        SpotCreateOrderListOtocoV3Req:
            properties:
                listClientOrderId:
                    default: ""
                    description: Arbitrary unique ID among open order lists. Automatically generated if not sent. <br/>A new order list with the same listClientOrderId is accepted only when the previous one is filled or completely expired. <br/> `listClientOrderId` is distinct from the `workingClientOrderId`, `pendingAboveClientOrderId`, and the `pendingBelowClientOrderId`.
                    type: string
                newOrderRespType:
                    default: ""
                    description: 'Format of the JSON response. Supported values: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#orderresponsetype">Order Response Type</a>'
                    type: string
                pendingAboveClientOrderId:
                    default: ""
                    description: Arbitrary unique ID among open orders for the pending above order.<br/> Automatically generated if not sent.
                    type: string
                pendingAboveIcebergQty:
                    description: This can only be used if `pendingAboveTimeInForce` is `GTC` or if `pendingAboveType` is `LIMIT_MAKER`.
                    type: number
                pendingAbovePrice:
                    description: Can be used if `pendingAboveType` is `STOP_LOSS_LIMIT` , `LIMIT_MAKER`, or `TAKE_PROFIT_LIMIT` to specify the limit price.
                    type: number
                pendingAboveStopPrice:
                    description: Can be used if `pendingAboveType` is `STOP_LOSS`, `STOP_LOSS_LIMIT`, `TAKE_PROFIT`, `TAKE_PROFIT_LIMIT`
                    type: number
                pendingAboveStrategyId:
                    description: Arbitrary numeric value identifying the pending above order within an order strategy.
                    format: int64
                    type: integer
                pendingAboveStrategyType:
                    description: Arbitrary numeric value identifying the pending above order strategy. <br/> Values smaller than 1000000 are reserved and cannot be used.
                    type: integer
                pendingAboveTimeInForce:
                    default: ""
                    type: string
                pendingAboveTrailingDelta:
                    description: See <a href="/docs/binance-spot-api-docs/faqs/trailing-stop-faq">Trailing Stop FAQ</a>
                    type: number
                pendingAboveType:
                    default: STOP_LOSS_LIMIT
                    description: 'Supported values: `STOP_LOSS_LIMIT`, `STOP_LOSS`, `LIMIT_MAKER`, `TAKE_PROFIT`, `TAKE_PROFIT_LIMIT`'
                    enum:
                        - STOP_LOSS_LIMIT
                        - STOP_LOSS
                        - LIMIT_MAKER
                        - TAKE_PROFIT
                        - TAKE_PROFIT_LIMIT
                    type: string
                pendingBelowClientOrderId:
                    default: ""
                    description: Arbitrary unique ID among open orders for the pending below order.<br/> Automatically generated if not sent.
                    type: string
                pendingBelowIcebergQty:
                    description: This can only be used if `pendingBelowTimeInForce` is `GTC`, or if `pendingBelowType` is `LIMIT_MAKER`.
                    type: number
                pendingBelowPrice:
                    description: Can be used if `pendingBelowType` is `STOP_LOSS_LIMIT` or `TAKE_PROFIT_LIMIT` to specify limit price
                    type: number
                pendingBelowStopPrice:
                    description: Can be used if `pendingBelowType` is `STOP_LOSS`, `STOP_LOSS_LIMIT, TAKE_PROFIT or TAKE_PROFIT_LIMIT`. <br/> Either `pendingBelowStopPrice` or `pendingBelowTrailingDelta` or both, must be specified.
                    type: number
                pendingBelowStrategyId:
                    description: Arbitrary numeric value identifying the pending below order within an order strategy.
                    format: int64
                    type: integer
                pendingBelowStrategyType:
                    description: Arbitrary numeric value identifying the pending below order strategy. <br/> Values smaller than 1000000 are reserved and cannot be used.
                    type: integer
                pendingBelowTimeInForce:
                    default: ""
                    description: 'Supported values: <a href="/docs/binance-spot-api-docs/enums#timeinforce">Time In Force</a>'
                    type: string
                pendingBelowTrailingDelta:
                    type: number
                pendingBelowType:
                    default: STOP_LOSS
                    description: 'Supported values: `STOP_LOSS`, `STOP_LOSS_LIMIT`, `TAKE_PROFIT`,`TAKE_PROFIT_LIMIT`'
                    enum:
                        - STOP_LOSS
                        - STOP_LOSS_LIMIT
                        - TAKE_PROFIT
                        - TAKE_PROFIT_LIMIT
                    type: string
                pendingQuantity:
                    type: number
                pendingSide:
                    default: ""
                    description: 'Supported values: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#side">Order side</a>'
                    type: string
                recvWindow:
                    description: The value cannot be greater than `60000`.
                    format: int64
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    description: 'The allowed values are dependent on what is configured on the symbol. Supported values: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#stpmodes">STP Modes</a>'
                    type: string
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                workingClientOrderId:
                    default: ""
                    description: Arbitrary unique ID among open orders for the working order.<br/> Automatically generated if not sent.
                    type: string
                workingIcebergQty:
                    description: This can only be used if `workingTimeInForce` is `GTC`.
                    type: number
                workingPrice:
                    type: number
                workingQuantity:
                    type: number
                workingSide:
                    default: ""
                    description: 'Supported values: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#side">Order side</a>'
                    type: string
                workingStrategyId:
                    description: Arbitrary numeric value identifying the working order within an order strategy.
                    format: int64
                    type: integer
                workingStrategyType:
                    description: Arbitrary numeric value identifying the working order strategy. <br/> Values smaller than 1000000 are reserved and cannot be used.
                    type: integer
                workingTimeInForce:
                    default: ""
                    description: 'Supported values: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#timeinforce">Time In Force</a>'
                    type: string
                workingType:
                    default: LIMIT
                    description: 'Supported values: `LIMIT`, `LIMIT_MAKER`'
                    enum:
                        - LIMIT
                        - LIMIT_MAKER
                    type: string
            required:
                - symbol
                - workingType
                - workingSide
                - workingPrice
                - workingQuantity
                - pendingSide
                - pendingQuantity
                - pendingAboveType
                - timestamp
            type: object
        SpotCreateOrderListOtocoV3Resp:
            example: '{    "orderListId": 1,    "contingencyType": "OTO",    "listStatusType": "EXEC_STARTED",    "listOrderStatus": "EXECUTING",    "listClientOrderId": "RumwQpBaDctlUu5jyG5rs0",    "transactionTime": 1712291372842,    "symbol": "ABCDEF",    "orders": [        {            "symbol": "LTCBTC",            "orderId": 6,            "clientOrderId": "fM9Y4m23IFJVCQmIrlUmMK"        },        {            "symbol": "LTCBTC",            "orderId": 7,            "clientOrderId": "6pcQbFIzTXGZQ1e2MkGDq4"        },        {            "symbol": "LTCBTC",            "orderId": 8,            "clientOrderId": "r4JMv9cwAYYUwwBZfbussx"        }    ],    "orderReports": [        {            "symbol": "LTCBTC",            "orderId": 6,            "orderListId": 1,            "clientOrderId": "fM9Y4m23IFJVCQmIrlUmMK",            "transactTime": 1712291372842,            "price": "1.00000000",            "origQty": "1.00000000",            "executedQty": "0.00000000",            "origQuoteOrderQty": "0.000000",            "cummulativeQuoteQty": "0.00000000",            "status": "NEW",            "timeInForce": "GTC",            "type": "LIMIT",            "side": "SELL",            "workingTime": 1712291372842,            "selfTradePreventionMode": "NONE"        },        {            "symbol": "LTCBTC",            "orderId": 7,            "orderListId": 1,            "clientOrderId": "6pcQbFIzTXGZQ1e2MkGDq4",            "transactTime": 1712291372842,            "price": "1.00000000",            "origQty": "5.00000000",            "executedQty": "0.00000000",            "origQuoteOrderQty": "0.000000",            "cummulativeQuoteQty": "0.00000000",            "status": "PENDING_NEW",            "timeInForce": "IOC",            "type": "STOP_LOSS_LIMIT",            "side": "BUY",            "stopPrice": "6.00000000",            "workingTime": -1,            "selfTradePreventionMode": "NONE"        },        {            "symbol": "LTCBTC",            "orderId": 8,            "orderListId": 1,            "clientOrderId": "r4JMv9cwAYYUwwBZfbussx",            "transactTime": 1712291372842,            "price": "3.00000000",            "origQty": "5.00000000",            "executedQty": "0.00000000",            "origQuoteOrderQty": "0.000000",            "cummulativeQuoteQty": "0.00000000",            "status": "PENDING_NEW",            "timeInForce": "GTC",            "type": "LIMIT_MAKER",            "side": "BUY",            "workingTime": -1,            "selfTradePreventionMode": "NONE"        }    ]}'
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    type: number
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            orderId:
                                type: number
                            orderListId:
                                type: number
                            origQty:
                                type: string
                            origQuoteOrderQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                type: number
                            type:
                                type: string
                            workingTime:
                                type: number
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                type: number
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    type: number
            type: object
        SpotCreateOrderOcoV3Req:
            properties:
                limitClientOrderId:
                    default: ""
                    type: string
                limitIcebergQty:
                    type: number
                limitStrategyId:
                    format: int64
                    type: integer
                limitStrategyType:
                    type: integer
                listClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                price:
                    type: number
                quantity:
                    type: number
                recvWindow:
                    format: int64
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                stopClientOrderId:
                    default: ""
                    type: string
                stopIcebergQty:
                    type: number
                stopLimitPrice:
                    type: number
                stopLimitTimeInForce:
                    default: ""
                    type: string
                stopPrice:
                    type: number
                stopStrategyId:
                    format: int64
                    type: integer
                stopStrategyType:
                    type: integer
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                trailingDelta:
                    format: int64
                    type: integer
            required:
                - symbol
                - side
                - quantity
                - price
                - stopPrice
                - timestamp
            type: object
        SpotCreateOrderOcoV3Resp:
            example: '{  "orderListId": 0,  "contingencyType": "OCO",  "listStatusType": "EXEC_STARTED",  "listOrderStatus": "EXECUTING",  "listClientOrderId": "JYVpp3F0f5CAG15DhtrqLp",  "transactionTime": 1563417480525,  "symbol": "LTCBTC",  "orders": [    {      "symbol": "LTCBTC",      "orderId": 2,      "clientOrderId": "Kk7sqHb9J6mJWTMDVW7Vos"    },    {      "symbol": "LTCBTC",      "orderId": 3,      "clientOrderId": "xTXKaGYd4bluPVp78IVRvl"    }  ],  "orderReports": [    {      "symbol": "LTCBTC",      "orderId": 2,      "orderListId": 0,      "clientOrderId": "Kk7sqHb9J6mJWTMDVW7Vos",      "transactTime": 1563417480525,      "price": "0.000000",      "origQty": "0.624363",      "executedQty": "0.000000",      "origQuoteOrderQty": "0.000000",      "cummulativeQuoteQty": "0.000000",      "status": "NEW",      "timeInForce": "GTC",      "type": "STOP_LOSS",      "side": "BUY",      "stopPrice": "0.960664",      "workingTime": -1,      "selfTradePreventionMode": "NONE"    },    {      "symbol": "LTCBTC",      "orderId": 3,      "orderListId": 0,      "clientOrderId": "xTXKaGYd4bluPVp78IVRvl",      "transactTime": 1563417480525,      "price": "0.036435",      "origQty": "0.624363",      "executedQty": "0.000000",      "origQuoteOrderQty": "0.000000",      "cummulativeQuoteQty": "0.000000",      "status": "NEW",      "timeInForce": "GTC",      "type": "LIMIT_MAKER",      "side": "BUY",      "workingTime": 1563417480525,      "selfTradePreventionMode": "NONE"    }  ]}'
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    type: number
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            orderId:
                                type: number
                            orderListId:
                                type: number
                            origQty:
                                type: string
                            origQuoteOrderQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            stopPrice:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                type: number
                            type:
                                type: string
                            workingTime:
                                type: number
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                type: number
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    type: number
            type: object
        SpotCreateOrderTestV3Req:
            properties:
                computeCommissionRates:
                    description: 'Default: `false`'
                    type: boolean
                icebergQty:
                    description: Used with `LIMIT`, `STOP_LOSS_LIMIT`, and `TAKE_PROFIT_LIMIT` to create an iceberg order.
                    type: number
                newClientOrderId:
                    default: ""
                    description: A unique id among open orders. Automatically generated if not sent.<br/> Orders with the same `newClientOrderID` can be accepted only when the previous one is filled, otherwise the order will be rejected.
                    type: string
                newOrderRespType:
                    default: ""
                    description: Set the response JSON. `ACK`, `RESULT`, or `FULL`; `MARKET` and `LIMIT` order types default to `FULL`, all other orders default to `ACK`.
                    type: string
                price:
                    type: number
                quantity:
                    type: number
                quoteOrderQty:
                    type: number
                recvWindow:
                    description: The value cannot be greater than `60000`
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    description: 'The allowed enums is dependent on what is configured on the symbol. The possible supported values are: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#stpmodes">STP Modes</a>.'
                    type: string
                side:
                    default: ""
                    description: Please see <a href="/docs/binance-spot-api-docs/enums#side">Enums</a> for supported values.
                    type: string
                stopPrice:
                    description: Used with `STOP_LOSS`, `STOP_LOSS_LIMIT`, `TAKE_PROFIT`, and `TAKE_PROFIT_LIMIT` orders.
                    type: number
                strategyId:
                    type: integer
                strategyType:
                    description: The value cannot be less than `1000000`.
                    type: integer
                symbol:
                    default: ""
                    type: string
                timeInForce:
                    default: ""
                    description: Please see <a href="/docs/binance-spot-api-docs/enums#timeinforce">Enums</a> for supported values.
                    type: string
                timestamp:
                    type: integer
                trailingDelta:
                    description: Used with `STOP_LOSS`, `STOP_LOSS_LIMIT`, `TAKE_PROFIT`, and `TAKE_PROFIT_LIMIT` orders.
                    type: integer
                type:
                    default: ""
                    description: Please see <a href="/docs/binance-spot-api-docs/enums#ordertypes">Enums</a> for supported values
                    type: string
            required:
                - symbol
                - side
                - type
                - timestamp
            type: object
        SpotCreateOrderTestV3Resp:
            example: |-
                {
                    "standardCommissionForOrder": {  //Standard commission rates on trades from the order.
                        "maker": "0.00000112",
                        "taker": "0.00000114"
                    },
                    "taxCommissionForOrder": {       //Tax commission rates for trades from the order.
                        "maker": "0.00000112",
                        "taker": "0.00000114"
                    },
                    "discount": {                    //Discount on standard commissions when paying in BNB.
                        "enabledForAccount": true,
                        "enabledForSymbol": true,
                        "discountAsset": "BNB",
                        "discount": "0.25000000"       //Standard commission is reduced by this rate when paying commission in BNB.
                    }
                }
            properties:
                discount:
                    properties:
                        discount:
                            format: double
                            type: string
                        discountAsset:
                            type: string
                        enabledForAccount:
                            type: boolean
                        enabledForSymbol:
                            type: boolean
                    type: object
                standardCommissionForOrder:
                    properties:
                        maker:
                            format: double
                            type: string
                        taker:
                            format: double
                            type: string
                    type: object
                taxCommissionForOrder:
                    properties:
                        maker:
                            format: double
                            type: string
                        taker:
                            format: double
                            type: string
                    type: object
            type: object
        SpotCreateOrderV3Req:
            properties:
                icebergQty:
                    description: Used with `LIMIT`, `STOP_LOSS_LIMIT`, and `TAKE_PROFIT_LIMIT` to create an iceberg order.
                    type: number
                newClientOrderId:
                    default: ""
                    description: A unique id among open orders. Automatically generated if not sent.<br/> Orders with the same `newClientOrderID` can be accepted only when the previous one is filled, otherwise the order will be rejected.
                    type: string
                newOrderRespType:
                    default: ""
                    description: Set the response JSON. `ACK`, `RESULT`, or `FULL`; `MARKET` and `LIMIT` order types default to `FULL`, all other orders default to `ACK`.
                    type: string
                price:
                    type: number
                quantity:
                    type: number
                quoteOrderQty:
                    type: number
                recvWindow:
                    description: The value cannot be greater than `60000`
                    format: int64
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    description: 'The allowed enums is dependent on what is configured on the symbol. The possible supported values are: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#stpmodes">STP Modes</a>.'
                    type: string
                side:
                    default: ""
                    description: Please see <a href="/docs/binance-spot-api-docs/enums#side">Enums</a> for supported values.
                    type: string
                stopPrice:
                    description: Used with `STOP_LOSS`, `STOP_LOSS_LIMIT`, `TAKE_PROFIT`, and `TAKE_PROFIT_LIMIT` orders.
                    type: number
                strategyId:
                    format: int64
                    type: integer
                strategyType:
                    description: The value cannot be less than `1000000`.
                    type: integer
                symbol:
                    default: ""
                    type: string
                timeInForce:
                    default: ""
                    description: Please see <a href="/docs/binance-spot-api-docs/enums#timeinforce">Enums</a> for supported values.
                    type: string
                timestamp:
                    format: int64
                    type: integer
                trailingDelta:
                    description: Used with `STOP_LOSS`, `STOP_LOSS_LIMIT`, `TAKE_PROFIT`, and `TAKE_PROFIT_LIMIT` orders.
                    format: int64
                    type: integer
                type:
                    default: ""
                    description: Please see <a href="/docs/binance-spot-api-docs/enums#ordertypes">Enums</a> for supported values
                    type: string
            required:
                - symbol
                - side
                - type
                - timestamp
            type: object
        SpotCreateOrderV3Resp:
            example: |
                {
                  "symbol": "BTCUSDT",
                  "orderId": 28,
                  "orderListId": -1, // Unless it's part of an order list, value will be -1
                  "clientOrderId": "6gCrw2kRUAF9CvJDGP16IP",
                  "transactTime": 1507725176595,
                  "price": "0.00000000",
                  "origQty": "10.00000000",
                  "executedQty": "10.00000000",
                  "origQuoteOrderQty": "0.000000",
                  "cummulativeQuoteQty": "10.00000000",
                  "status": "FILLED",
                  "timeInForce": "GTC",
                  "type": "MARKET",
                  "side": "SELL",
                  "workingTime": 1507725176595,
                  "selfTradePreventionMode": "NONE",
                  "fills": [
                    {
                      "price": "4000.00000000",
                      "qty": "1.00000000",
                      "commission": "4.00000000",
                      "commissionAsset": "USDT",
                      "tradeId": 56
                    },
                    {
                      "price": "3999.00000000",
                      "qty": "5.00000000",
                      "commission": "19.99500000",
                      "commissionAsset": "USDT",
                      "tradeId": 57
                    },
                    {
                      "price": "3998.00000000",
                      "qty": "2.00000000",
                      "commission": "7.99600000",
                      "commissionAsset": "USDT",
                      "tradeId": 58
                    },
                    {
                      "price": "3997.00000000",
                      "qty": "1.00000000",
                      "commission": "3.99700000",
                      "commissionAsset": "USDT",
                      "tradeId": 59
                    },
                    {
                      "price": "3995.00000000",
                      "qty": "1.00000000",
                      "commission": "3.99500000",
                      "commissionAsset": "USDT",
                      "tradeId": 60
                    }
                  ]
                }
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                fills:
                    items:
                        properties:
                            commission:
                                type: string
                            commissionAsset:
                                type: string
                            price:
                                type: string
                            qty:
                                type: string
                            tradeId:
                                type: number
                        type: object
                    type: array
                orderId:
                    type: number
                orderListId:
                    type: number
                origQty:
                    type: string
                origQuoteOrderQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                transactTime:
                    type: number
                type:
                    type: string
                workingTime:
                    type: number
            type: object
        SpotCreateSorOrderTestV3Req:
            properties:
                computeCommissionRates:
                    type: boolean
                icebergQty:
                    type: number
                newClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                price:
                    type: number
                quantity:
                    type: number
                recvWindow:
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                strategyId:
                    type: integer
                strategyType:
                    type: integer
                symbol:
                    default: ""
                    type: string
                timeInForce:
                    default: ""
                    type: string
                timestamp:
                    type: integer
                type:
                    default: ""
                    type: string
            type: object
        SpotCreateSorOrderTestV3Resp:
            example: |
                {
                  "standardCommissionForOrder": {  //Standard commission rates on trades from the order.
                    "maker": "0.00000112",
                    "taker": "0.00000114"
                  },
                  "taxCommissionForOrder": {       //Tax commission rates for trades from the order
                    "maker": "0.00000112",
                    "taker": "0.00000114"
                  },
                  "discount": {                    //Discount on standard commissions when paying in BNB.
                    "enabledForAccount": true,
                    "enabledForSymbol": true,
                    "discountAsset": "BNB",
                    "discount": "0.25000000"       //Standard commission is reduced by this rate when paying commission in BNB.
                  }
                }
            properties:
                discount:
                    type: object
                standardCommissionForOrder:
                    properties:
                        maker:
                            type: string
                        taker:
                            type: string
                    type: object
                taxCommissionForOrder:
                    type: object
            type: object
        SpotCreateSorOrderV3Req:
            properties:
                icebergQty:
                    type: number
                newClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                price:
                    type: number
                quantity:
                    type: number
                recvWindow:
                    format: int64
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                strategyId:
                    format: int64
                    type: integer
                strategyType:
                    type: integer
                symbol:
                    default: ""
                    type: string
                timeInForce:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                type:
                    default: ""
                    type: string
            required:
                - symbol
                - side
                - type
                - quantity
                - timestamp
            type: object
        SpotCreateSorOrderV3Resp:
            example: '{  "symbol": "BTCUSDT",  "orderId": 2,  "orderListId": -1,  "clientOrderId": "sBI1KM6nNtOfj5tccZSKly",  "transactTime": 1689149087774,  "price": "31000.00000000",  "origQty": "0.50000000",  "executedQty": "0.50000000",  "origQuoteOrderQty": "0.000000",  "cummulativeQuoteQty": "14000.00000000",  "status": "FILLED",  "timeInForce": "GTC",  "type": "LIMIT",  "side": "BUY",  "workingTime": 1689149087774,  "fills": [    {      "matchType": "ONE_PARTY_TRADE_REPORT",      "price": "28000.00000000",      "qty": "0.50000000",      "commission": "0.00000000",      "commissionAsset": "BTC",      "tradeId": -1,      "allocId": 0    }  ],  "workingFloor": "SOR",                "selfTradePreventionMode": "NONE",  "usedSor": true}'
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                fills:
                    items:
                        properties:
                            allocId:
                                type: number
                            commission:
                                type: string
                            commissionAsset:
                                type: string
                            matchType:
                                type: string
                            price:
                                type: string
                            qty:
                                type: string
                            tradeId:
                                type: number
                        type: object
                    type: array
                orderId:
                    type: number
                orderListId:
                    type: number
                origQty:
                    type: string
                origQuoteOrderQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                transactTime:
                    type: number
                type:
                    type: string
                usedSor:
                    type: boolean
                workingFloor:
                    type: string
                workingTime:
                    type: number
            type: object
        SpotCreateUserDataStreamV3Resp:
            example: '{  "listenKey": "pqia91ma19a5s61cv6a81va65sdf19v8a65a1a5s61cv6a81va65sdf19v8a65a1"}'
            properties:
                listenKey:
                    type: string
            type: object
        SpotDeleteOpenOrdersV3RespItem:
            example: |
                {
                    "orderListId": 1929,
                    "contingencyType": "OCO",
                    "listStatusType": "ALL_DONE",
                    "listOrderStatus": "ALL_DONE",
                    "listClientOrderId": "2inzWQdDvZLHbbAmAozX2N",
                    "transactionTime": 1585230948299,
                    "symbol": "BTCUSDT",
                    "orders": [
                    {
                        "symbol": "BTCUSDT",
                        "orderId": 20,
                        "clientOrderId": "CwOOIPHSmYywx6jZX77TdL"
                    },
                    {
                        "symbol": "BTCUSDT",
                        "orderId": 21,
                        "clientOrderId": "461cPg51vQjV3zIMOXNz39"
                    }
                    ],
                    "orderReports": [
                    {
                        "symbol": "BTCUSDT",
                        "origClientOrderId": "CwOOIPHSmYywx6jZX77TdL",
                        "orderId": 20,
                        "orderListId": 1929,
                        "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx",
                        "transactTime": 1688005070874,
                        "price": "0.668611",
                        "origQty": "0.690354",
                        "executedQty": "0.000000",
                        "cummulativeQuoteQty": "0.000000",
                        "status": "CANCELED",
                        "timeInForce": "GTC",
                        "type": "STOP_LOSS_LIMIT",
                        "side": "BUY",
                        "stopPrice": "0.378131",
                        "icebergQty": "0.017083",
                        "selfTradePreventionMode": "NONE"
                    },
                    {
                        "symbol": "BTCUSDT",
                        "origClientOrderId": "461cPg51vQjV3zIMOXNz39",
                        "orderId": 21,
                        "orderListId": 1929,
                        "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx",
                        "transactTime": 1688005070874,
                        "price": "0.008791",
                        "origQty": "0.690354",
                        "executedQty": "0.000000",
                        "cummulativeQuoteQty": "0.000000",
                        "status": "CANCELED",
                        "timeInForce": "GTC",
                        "type": "LIMIT_MAKER",
                        "side": "BUY",
                        "icebergQty": "0.639962",
                        "selfTradePreventionMode": "NONE"
                    }
                    ]
                }
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    type: number
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            icebergQty:
                                type: string
                            orderId:
                                type: number
                            orderListId:
                                type: number
                            origClientOrderId:
                                type: string
                            origQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            stopPrice:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                type: number
                            type:
                                type: string
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                type: number
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    type: number
            type: object
        SpotDeleteOrderListV3Resp:
            example: '{  "orderListId": 0,  "contingencyType": "OCO",  "listStatusType": "ALL_DONE",  "listOrderStatus": "ALL_DONE",  "listClientOrderId": "C3wyj4WVEktd7u9aVBRXcN",  "transactionTime": 1574040868128,  "symbol": "LTCBTC",  "orders": [    {      "symbol": "LTCBTC",      "orderId": 2,      "clientOrderId": "pO9ufTiFGg3nw2fOdgeOXa"    },    {      "symbol": "LTCBTC",      "orderId": 3,      "clientOrderId": "TXOvglzXuaubXAaENpaRCB"    }  ],  "orderReports": [    {      "symbol": "LTCBTC",      "origClientOrderId": "pO9ufTiFGg3nw2fOdgeOXa",      "orderId": 2,      "orderListId": 0,      "clientOrderId": "unfWT8ig8i0uj6lPuYLez6",      "transactTime": 1688005070874,      "price": "1.00000000",      "origQty": "10.00000000",      "executedQty": "0.00000000",      "origQuoteOrderQty": "0.000000",      "cummulativeQuoteQty": "0.00000000",      "status": "CANCELED",      "timeInForce": "GTC",      "type": "STOP_LOSS_LIMIT",      "side": "SELL",      "stopPrice": "1.00000000",      "selfTradePreventionMode": "NONE"    },    {      "symbol": "LTCBTC",      "origClientOrderId": "TXOvglzXuaubXAaENpaRCB",      "orderId": 3,      "orderListId": 0,      "clientOrderId": "unfWT8ig8i0uj6lPuYLez6",      "transactTime": 1688005070874,      "price": "3.00000000",      "origQty": "10.00000000",      "executedQty": "0.00000000",      "origQuoteOrderQty": "0.000000",      "cummulativeQuoteQty": "0.00000000",      "status": "CANCELED",      "timeInForce": "GTC",      "type": "LIMIT_MAKER",      "side": "SELL",      "selfTradePreventionMode": "NONE"    }  ]}'
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    type: number
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            orderId:
                                type: number
                            orderListId:
                                type: number
                            origClientOrderId:
                                type: string
                            origQty:
                                type: string
                            origQuoteOrderQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            stopPrice:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                type: number
                            type:
                                type: string
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                type: number
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    type: number
            type: object
        SpotDeleteOrderV3Resp:
            example: |
                {
                  "symbol": "LTCBTC",
                  "origClientOrderId": "myOrder1",
                  "orderId": 4,
                  "orderListId": -1, // Unless it's part of an order list, value will be -1
                  "clientOrderId": "cancelMyOrder1",
                  "transactTime": 1684804350068,
                  "price": "2.00000000",
                  "origQty": "1.00000000",
                  "executedQty": "0.00000000",
                  "cummulativeQuoteQty": "0.00000000",
                  "status": "CANCELED",
                  "timeInForce": "GTC",
                  "type": "LIMIT",
                  "side": "BUY",
                  "selfTradePreventionMode": "NONE"
                }
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                orderId:
                    format: int64
                    type: number
                orderListId:
                    type: number
                origClientOrderId:
                    type: string
                origQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                transactTime:
                    type: number
                type:
                    type: string
            type: object
        SpotDeleteUserDataStreamV3Resp:
            example: '{}'
            type: object
        SpotGetAccountCommissionV3Resp:
            example: "{\n    \"symbol\": \"BTCUSDT\",\n    \"standardCommission\": {         //Commission rates on trades from the order.\n        \"maker\": \"0.00000010\",\n        \"taker\": \"0.00000020\",\n        \"buyer\": \"0.00000030\",\n        \"seller\": \"0.00000040\" \n    },\n    \"taxCommission\": {              //Tax commission rates for trades from the order.\n        \"maker\": \"0.00000112\",\n        \"taker\": \"0.00000114\",\n        \"buyer\": \"0.00000118\",\n        \"seller\": \"0.00000116\" \n    },\n    \"discount\": {                   //Discount commission when paying in BNB\n        \"enabledForAccount\": true,\n        \"enabledForSymbol\": true,\n        \"discountAsset\": \"BNB\",\n        \"discount\": \"0.75000000\"      //Standard commission is reduced by this rate when paying commission in BNB.\n    }\n}\n"
            properties:
                discount:
                    properties:
                        discount:
                            type: string
                        discountAsset:
                            type: string
                        enabledForAccount:
                            type: boolean
                        enabledForSymbol:
                            type: boolean
                    type: object
                standardCommission:
                    properties:
                        buyer:
                            type: string
                        maker:
                            type: string
                        seller:
                            type: string
                        taker:
                            type: string
                    type: object
                symbol:
                    type: string
                taxCommission:
                    properties:
                        buyer:
                            type: string
                        maker:
                            type: string
                        seller:
                            type: string
                        taker:
                            type: string
                    type: object
            type: object
        SpotGetAccountV3Resp:
            example: '{  "makerCommission": 15,  "takerCommission": 15,  "buyerCommission": 0,  "sellerCommission": 0,  "commissionRates": {    "maker": "0.00150000",    "taker": "0.00150000",    "buyer": "0.00000000",    "seller": "0.00000000"  },  "canTrade": true,  "canWithdraw": true,  "canDeposit": true,  "brokered": false,  "requireSelfTradePrevention": false,  "preventSor": false,  "updateTime": 123456789,  "accountType": "SPOT",  "balances": [    {      "asset": "BTC",      "free": "4723846.89208129",      "locked": "0.00000000"    },    {      "asset": "LTC",      "free": "4763368.68006011",      "locked": "0.00000000"    }  ],  "permissions": [    "SPOT"  ],  "uid": 354937868}'
            properties:
                accountType:
                    type: string
                balances:
                    items:
                        properties:
                            asset:
                                type: string
                            free:
                                type: string
                            locked:
                                type: string
                        type: object
                    type: array
                brokered:
                    type: boolean
                buyerCommission:
                    type: number
                canDeposit:
                    type: boolean
                canTrade:
                    type: boolean
                canWithdraw:
                    type: boolean
                commissionRates:
                    properties:
                        buyer:
                            type: string
                        maker:
                            type: string
                        seller:
                            type: string
                        taker:
                            type: string
                    type: object
                makerCommission:
                    type: number
                permissions:
                    items:
                        type: string
                    type: array
                preventSor:
                    type: boolean
                requireSelfTradePrevention:
                    type: boolean
                sellerCommission:
                    type: number
                takerCommission:
                    type: number
                uid:
                    type: number
                updateTime:
                    type: number
            type: object
        SpotGetAggTradesV3RespItem:
            example: |
                {
                  a: 26129,         // Aggregate tradeId
                  p: "0.01633102",  // Price
                  q: "4.70443515",  // Quantity
                  f: 27781,         // First tradeId
                  l: 27781,         // Last tradeId
                  T: 1498793709153, // Timestamp
                  m: true,          // Was the buyer the maker?
                  M: true           // Was the trade the best price match?
                }
            properties:
                M:
                    type: boolean
                T:
                    type: integer
                a:
                    type: integer
                f:
                    type: integer
                l:
                    type: integer
                m:
                    type: boolean
                p:
                    type: string
                q:
                    type: string
            type: object
        SpotGetAllOrderListV3RespItem:
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    type: number
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                type: number
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    type: number
            type: object
        SpotGetAllOrdersV3RespItem:
            example: |-
                {
                  "symbol": "LTCBTC",
                  "orderId": 1,
                  "orderListId": -1, //Unless it's part of an order list, value will be -1
                  "clientOrderId": "myOrder1",
                  "price": "0.1",
                  "origQty": "1.0",
                  "executedQty": "0.0",
                  "cummulativeQuoteQty": "0.0",
                  "status": "NEW",
                  "timeInForce": "GTC",
                  "type": "LIMIT",
                  "side": "BUY",
                  "stopPrice": "0.0",
                  "icebergQty": "0.0",
                  "time": 1499827319559,
                  "updateTime": 1499827319559,
                  "isWorking": true,
                  "origQuoteOrderQty": "0.000000",
                  "workingTime": 1499827319559,
                  "selfTradePreventionMode": "NONE"
                }
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                icebergQty:
                    type: string
                isWorking:
                    type: boolean
                orderId:
                    format: int64
                    type: integer
                orderListId:
                    type: integer
                origQty:
                    type: string
                origQuoteOrderQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                time:
                    type: integer
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    type: integer
                workingTime:
                    type: integer
            type: object
        SpotGetAvgPriceV3Resp:
            example: |
                {
                    "mins": 5,                    // Average price interval (in minutes)
                    "price": "9.35751834",        // Average price
                    "closeTime": 1694061154503    // Last trade time
                }
            properties:
                closeTime:
                    type: number
                mins:
                    type: number
                price:
                    type: string
            type: object
        SpotGetDepthV3Resp:
            example: |
                {
                    "lastUpdateId": 1027024,
                    "bids": [
                        [
                        "4.00000000",     // PRICE
                        "431.00000000"    // QTY
                        ]
                    ],
                    "asks": [
                        [
                        "4.00000200",
                        "12.00000000"
                        ]
                    ]
                }
            properties:
                asks:
                    items:
                        items:
                            type: string
                        type: array
                    type: array
                bids:
                    items:
                        items:
                            type: string
                        type: array
                    type: array
                lastUpdateId:
                    type: integer
            type: object
        SpotGetExchangeInfoV3Resp:
            example: |
                {
                  "timezone": "UTC",
                  "serverTime": 1741633633702,
                  "rateLimits": [
                    {
                      "rateLimitType": "REQUEST_WEIGHT",
                      "interval": "MINUTE",
                      "intervalNum": 1,
                      "limit": 6000
                    },
                    {
                      "rateLimitType": "ORDERS",
                      "interval": "SECOND",
                      "intervalNum": 10,
                      "limit": 100
                    },
                    {
                      "rateLimitType": "ORDERS",
                      "interval": "DAY",
                      "intervalNum": 1,
                      "limit": 200000
                    },
                    {
                      "rateLimitType": "RAW_REQUESTS",
                      "interval": "MINUTE",
                      "intervalNum": 5,
                      "limit": 61000
                    }
                  ],
                  "exchangeFilters": [],
                  "symbols": [
                    {
                      "symbol": "BNBBTC",
                      "status": "TRADING",
                      "baseAsset": "BNB",
                      "baseAssetPrecision": 8,
                      "quoteAsset": "BTC",
                      "quotePrecision": 8,
                      "quoteAssetPrecision": 8,
                      "baseCommissionPrecision": 8,
                      "quoteCommissionPrecision": 8,
                      "orderTypes": [
                        "LIMIT",
                        "LIMIT_MAKER",
                        "MARKET",
                        "STOP_LOSS",
                        "STOP_LOSS_LIMIT",
                        "TAKE_PROFIT",
                        "TAKE_PROFIT_LIMIT"
                      ],
                      "icebergAllowed": true,
                      "ocoAllowed": true,
                      "otoAllowed": true,
                      "quoteOrderQtyMarketAllowed": true,
                      "allowTrailingStop": true,
                      "cancelReplaceAllowed": true,
                      "isSpotTradingAllowed": true,
                      "isMarginTradingAllowed": true,
                      "filters": [
                        {
                          "filterType": "PRICE_FILTER",
                          "minPrice": "0.00000100",
                          "maxPrice": "100000.00000000",
                          "tickSize": "0.00000100"
                        },
                        {
                          "filterType": "LOT_SIZE",
                          "minQty": "0.00100000",
                          "maxQty": "100000.00000000",
                          "stepSize": "0.00100000"
                        },
                        {
                          "filterType": "ICEBERG_PARTS",
                          "limit": 10
                        },
                        {
                          "filterType": "MARKET_LOT_SIZE",
                          "minQty": "0.00000000",
                          "maxQty": "2130.19768200",
                          "stepSize": "0.00000000"
                        },
                        {
                          "filterType": "TRAILING_DELTA",
                          "minTrailingAboveDelta": 10,
                          "maxTrailingAboveDelta": 2000,
                          "minTrailingBelowDelta": 10,
                          "maxTrailingBelowDelta": 2000
                        },
                        {
                          "filterType": "PERCENT_PRICE_BY_SIDE",
                          "bidMultiplierUp": "5",
                          "bidMultiplierDown": "0.2",
                          "askMultiplierUp": "5",
                          "askMultiplierDown": "0.2",
                          "avgPriceMins": 5
                        },
                        {
                          "filterType": "NOTIONAL",
                          "minNotional": "0.00010000",
                          "applyMinToMarket": true,
                          "maxNotional": "9000000.00000000",
                          "applyMaxToMarket": false,
                          "avgPriceMins": 5
                        },
                        {
                          "filterType": "MAX_NUM_ORDERS",
                          "maxNumOrders": 200
                        },
                        {
                          "filterType": "MAX_NUM_ALGO_ORDERS",
                          "maxNumAlgoOrders": 5
                        }
                      ],
                      "permissions": [],
                      "permissionSets": [
                        [
                          "SPOT",
                          "MARGIN",
                          "TRD_GRP_004",
                          "TRD_GRP_005",
                          "TRD_GRP_006",
                          "TRD_GRP_008",
                          "TRD_GRP_009",
                          "TRD_GRP_010",
                          "TRD_GRP_011",
                          "TRD_GRP_012",
                          "TRD_GRP_013",
                          "TRD_GRP_014",
                          "TRD_GRP_015",
                          "TRD_GRP_016",
                          "TRD_GRP_017",
                          "TRD_GRP_018",
                          "TRD_GRP_019",
                          "TRD_GRP_020",
                          "TRD_GRP_021",
                          "TRD_GRP_022",
                          "TRD_GRP_023",
                          "TRD_GRP_024",
                          "TRD_GRP_025",
                          "TRD_GRP_026",
                          "TRD_GRP_027",
                          "TRD_GRP_028",
                          "TRD_GRP_029",
                          "TRD_GRP_030",
                          "TRD_GRP_031",
                          "TRD_GRP_032",
                          "TRD_GRP_033",
                          "TRD_GRP_034",
                          "TRD_GRP_035",
                          "TRD_GRP_036",
                          "TRD_GRP_037",
                          "TRD_GRP_038",
                          "TRD_GRP_039",
                          "TRD_GRP_040",
                          "TRD_GRP_041",
                          "TRD_GRP_042",
                          "TRD_GRP_043",
                          "TRD_GRP_044",
                          "TRD_GRP_045",
                          "TRD_GRP_046",
                          "TRD_GRP_047",
                          "TRD_GRP_048",
                          "TRD_GRP_049",
                          "TRD_GRP_050",
                          "TRD_GRP_051",
                          "TRD_GRP_052",
                          "TRD_GRP_053",
                          "TRD_GRP_054",
                          "TRD_GRP_055",
                          "TRD_GRP_056",
                          "TRD_GRP_057",
                          "TRD_GRP_058",
                          "TRD_GRP_059",
                          "TRD_GRP_060",
                          "TRD_GRP_061",
                          "TRD_GRP_062",
                          "TRD_GRP_063",
                          "TRD_GRP_064",
                          "TRD_GRP_065",
                          "TRD_GRP_066",
                          "TRD_GRP_067",
                          "TRD_GRP_068",
                          "TRD_GRP_069",
                          "TRD_GRP_070",
                          "TRD_GRP_071",
                          "TRD_GRP_072",
                          "TRD_GRP_073",
                          "TRD_GRP_074",
                          "TRD_GRP_075",
                          "TRD_GRP_076",
                          "TRD_GRP_077",
                          "TRD_GRP_078",
                          "TRD_GRP_079",
                          "TRD_GRP_080",
                          "TRD_GRP_081",
                          "TRD_GRP_082",
                          "TRD_GRP_083",
                          "TRD_GRP_084",
                          "TRD_GRP_085",
                          "TRD_GRP_086",
                          "TRD_GRP_087",
                          "TRD_GRP_088",
                          "TRD_GRP_089",
                          "TRD_GRP_090",
                          "TRD_GRP_091",
                          "TRD_GRP_092",
                          "TRD_GRP_093",
                          "TRD_GRP_094",
                          "TRD_GRP_095",
                          "TRD_GRP_096",
                          "TRD_GRP_097",
                          "TRD_GRP_098",
                          "TRD_GRP_099",
                          "TRD_GRP_100",
                          "TRD_GRP_101",
                          "TRD_GRP_102",
                          "TRD_GRP_103",
                          "TRD_GRP_104",
                          "TRD_GRP_105",
                          "TRD_GRP_106",
                          "TRD_GRP_107",
                          "TRD_GRP_108",
                          "TRD_GRP_109",
                          "TRD_GRP_110",
                          "TRD_GRP_111",
                          "TRD_GRP_112",
                          "TRD_GRP_113",
                          "TRD_GRP_114",
                          "TRD_GRP_115",
                          "TRD_GRP_116",
                          "TRD_GRP_117",
                          "TRD_GRP_118",
                          "TRD_GRP_119",
                          "TRD_GRP_120",
                          "TRD_GRP_121",
                          "TRD_GRP_122",
                          "TRD_GRP_123",
                          "TRD_GRP_124",
                          "TRD_GRP_125",
                          "TRD_GRP_126",
                          "TRD_GRP_127",
                          "TRD_GRP_128",
                          "TRD_GRP_129",
                          "TRD_GRP_130",
                          "TRD_GRP_131",
                          "TRD_GRP_132",
                          "TRD_GRP_133",
                          "TRD_GRP_134",
                          "TRD_GRP_135",
                          "TRD_GRP_136",
                          "TRD_GRP_137",
                          "TRD_GRP_138",
                          "TRD_GRP_139",
                          "TRD_GRP_140",
                          "TRD_GRP_141",
                          "TRD_GRP_142",
                          "TRD_GRP_143",
                          "TRD_GRP_144",
                          "TRD_GRP_145",
                          "TRD_GRP_146",
                          "TRD_GRP_147",
                          "TRD_GRP_148",
                          "TRD_GRP_149",
                          "TRD_GRP_150",
                          "TRD_GRP_151",
                          "TRD_GRP_152",
                          "TRD_GRP_153",
                          "TRD_GRP_154",
                          "TRD_GRP_155",
                          "TRD_GRP_156",
                          "TRD_GRP_157",
                          "TRD_GRP_158",
                          "TRD_GRP_159",
                          "TRD_GRP_160",
                          "TRD_GRP_161",
                          "TRD_GRP_162",
                          "TRD_GRP_163",
                          "TRD_GRP_164",
                          "TRD_GRP_165",
                          "TRD_GRP_166",
                          "TRD_GRP_167",
                          "TRD_GRP_168",
                          "TRD_GRP_169",
                          "TRD_GRP_170",
                          "TRD_GRP_171",
                          "TRD_GRP_172",
                          "TRD_GRP_173",
                          "TRD_GRP_174",
                          "TRD_GRP_175",
                          "TRD_GRP_176",
                          "TRD_GRP_177",
                          "TRD_GRP_178",
                          "TRD_GRP_179",
                          "TRD_GRP_180",
                          "TRD_GRP_181",
                          "TRD_GRP_182",
                          "TRD_GRP_183",
                          "TRD_GRP_184",
                          "TRD_GRP_185",
                          "TRD_GRP_186",
                          "TRD_GRP_187",
                          "TRD_GRP_188",
                          "TRD_GRP_189",
                          "TRD_GRP_190",
                          "TRD_GRP_191",
                          "TRD_GRP_192",
                          "TRD_GRP_193",
                          "TRD_GRP_194",
                          "TRD_GRP_195",
                          "TRD_GRP_196",
                          "TRD_GRP_197",
                          "TRD_GRP_198",
                          "TRD_GRP_199",
                          "TRD_GRP_200",
                          "TRD_GRP_201",
                          "TRD_GRP_202",
                          "TRD_GRP_203",
                          "TRD_GRP_204",
                          "TRD_GRP_205",
                          "TRD_GRP_206",
                          "TRD_GRP_207",
                          "TRD_GRP_208",
                          "TRD_GRP_209",
                          "TRD_GRP_210",
                          "TRD_GRP_211",
                          "TRD_GRP_212",
                          "TRD_GRP_213",
                          "TRD_GRP_214",
                          "TRD_GRP_215",
                          "TRD_GRP_216",
                          "TRD_GRP_217",
                          "TRD_GRP_218",
                          "TRD_GRP_219",
                          "TRD_GRP_220",
                          "TRD_GRP_221",
                          "TRD_GRP_222",
                          "TRD_GRP_223",
                          "TRD_GRP_224",
                          "TRD_GRP_225",
                          "TRD_GRP_226",
                          "TRD_GRP_227",
                          "TRD_GRP_228",
                          "TRD_GRP_229",
                          "TRD_GRP_230",
                          "TRD_GRP_231",
                          "TRD_GRP_232",
                          "TRD_GRP_233",
                          "TRD_GRP_234",
                          "TRD_GRP_235",
                          "TRD_GRP_236"
                        ]
                      ],
                      "defaultSelfTradePreventionMode": "EXPIRE_MAKER",
                      "allowedSelfTradePreventionModes": [
                        "EXPIRE_TAKER",
                        "EXPIRE_MAKER",
                        "EXPIRE_BOTH"
                      ]
                    },
                    {
                      "symbol": "BTCUSDT",
                      "status": "TRADING",
                      "baseAsset": "BTC",
                      "baseAssetPrecision": 8,
                      "quoteAsset": "USDT",
                      "quotePrecision": 8,
                      "quoteAssetPrecision": 8,
                      "baseCommissionPrecision": 8,
                      "quoteCommissionPrecision": 8,
                      "orderTypes": [
                        "LIMIT",
                        "LIMIT_MAKER",
                        "MARKET",
                        "STOP_LOSS",
                        "STOP_LOSS_LIMIT",
                        "TAKE_PROFIT",
                        "TAKE_PROFIT_LIMIT"
                      ],
                      "icebergAllowed": true,
                      "ocoAllowed": true,
                      "otoAllowed": true,
                      "quoteOrderQtyMarketAllowed": true,
                      "allowTrailingStop": true,
                      "cancelReplaceAllowed": true,
                      "isSpotTradingAllowed": true,
                      "isMarginTradingAllowed": true,
                      "filters": [
                        {
                          "filterType": "PRICE_FILTER",
                          "minPrice": "0.01000000",
                          "maxPrice": "1000000.00000000",
                          "tickSize": "0.01000000"
                        },
                        {
                          "filterType": "LOT_SIZE",
                          "minQty": "0.00001000",
                          "maxQty": "9000.00000000",
                          "stepSize": "0.00001000"
                        },
                        {
                          "filterType": "ICEBERG_PARTS",
                          "limit": 10
                        },
                        {
                          "filterType": "MARKET_LOT_SIZE",
                          "minQty": "0.00000000",
                          "maxQty": "96.56124711",
                          "stepSize": "0.00000000"
                        },
                        {
                          "filterType": "TRAILING_DELTA",
                          "minTrailingAboveDelta": 10,
                          "maxTrailingAboveDelta": 2000,
                          "minTrailingBelowDelta": 10,
                          "maxTrailingBelowDelta": 2000
                        },
                        {
                          "filterType": "PERCENT_PRICE_BY_SIDE",
                          "bidMultiplierUp": "5",
                          "bidMultiplierDown": "0.2",
                          "askMultiplierUp": "5",
                          "askMultiplierDown": "0.2",
                          "avgPriceMins": 5
                        },
                        {
                          "filterType": "NOTIONAL",
                          "minNotional": "5.00000000",
                          "applyMinToMarket": true,
                          "maxNotional": "9000000.00000000",
                          "applyMaxToMarket": false,
                          "avgPriceMins": 5
                        },
                        {
                          "filterType": "MAX_NUM_ORDERS",
                          "maxNumOrders": 200
                        },
                        {
                          "filterType": "MAX_NUM_ALGO_ORDERS",
                          "maxNumAlgoOrders": 5
                        }
                      ],
                      "permissions": [],
                      "permissionSets": [
                        [
                          "SPOT",
                          "MARGIN",
                          "TRD_GRP_004",
                          "TRD_GRP_005",
                          "TRD_GRP_006",
                          "TRD_GRP_009",
                          "TRD_GRP_010",
                          "TRD_GRP_011",
                          "TRD_GRP_012",
                          "TRD_GRP_013",
                          "TRD_GRP_014",
                          "TRD_GRP_015",
                          "TRD_GRP_016",
                          "TRD_GRP_017",
                          "TRD_GRP_018",
                          "TRD_GRP_019",
                          "TRD_GRP_020",
                          "TRD_GRP_021",
                          "TRD_GRP_022",
                          "TRD_GRP_023",
                          "TRD_GRP_024",
                          "TRD_GRP_025",
                          "TRD_GRP_026",
                          "TRD_GRP_027",
                          "TRD_GRP_028",
                          "TRD_GRP_029",
                          "TRD_GRP_030",
                          "TRD_GRP_031",
                          "TRD_GRP_032",
                          "TRD_GRP_033",
                          "TRD_GRP_034",
                          "TRD_GRP_035",
                          "TRD_GRP_036",
                          "TRD_GRP_037",
                          "TRD_GRP_038",
                          "TRD_GRP_039",
                          "TRD_GRP_040",
                          "TRD_GRP_041",
                          "TRD_GRP_042",
                          "TRD_GRP_043",
                          "TRD_GRP_044",
                          "TRD_GRP_045",
                          "TRD_GRP_046",
                          "TRD_GRP_047",
                          "TRD_GRP_048",
                          "TRD_GRP_049",
                          "TRD_GRP_050",
                          "TRD_GRP_051",
                          "TRD_GRP_052",
                          "TRD_GRP_053",
                          "TRD_GRP_054",
                          "TRD_GRP_055",
                          "TRD_GRP_056",
                          "TRD_GRP_057",
                          "TRD_GRP_058",
                          "TRD_GRP_059",
                          "TRD_GRP_060",
                          "TRD_GRP_061",
                          "TRD_GRP_062",
                          "TRD_GRP_063",
                          "TRD_GRP_064",
                          "TRD_GRP_065",
                          "TRD_GRP_066",
                          "TRD_GRP_067",
                          "TRD_GRP_068",
                          "TRD_GRP_069",
                          "TRD_GRP_070",
                          "TRD_GRP_071",
                          "TRD_GRP_072",
                          "TRD_GRP_073",
                          "TRD_GRP_074",
                          "TRD_GRP_075",
                          "TRD_GRP_076",
                          "TRD_GRP_077",
                          "TRD_GRP_078",
                          "TRD_GRP_079",
                          "TRD_GRP_080",
                          "TRD_GRP_081",
                          "TRD_GRP_082",
                          "TRD_GRP_083",
                          "TRD_GRP_084",
                          "TRD_GRP_085",
                          "TRD_GRP_086",
                          "TRD_GRP_087",
                          "TRD_GRP_088",
                          "TRD_GRP_089",
                          "TRD_GRP_090",
                          "TRD_GRP_091",
                          "TRD_GRP_092",
                          "TRD_GRP_093",
                          "TRD_GRP_094",
                          "TRD_GRP_095",
                          "TRD_GRP_096",
                          "TRD_GRP_097",
                          "TRD_GRP_098",
                          "TRD_GRP_099",
                          "TRD_GRP_100",
                          "TRD_GRP_101",
                          "TRD_GRP_102",
                          "TRD_GRP_103",
                          "TRD_GRP_104",
                          "TRD_GRP_105",
                          "TRD_GRP_106",
                          "TRD_GRP_107",
                          "TRD_GRP_108",
                          "TRD_GRP_109",
                          "TRD_GRP_110",
                          "TRD_GRP_111",
                          "TRD_GRP_112",
                          "TRD_GRP_113",
                          "TRD_GRP_114",
                          "TRD_GRP_115",
                          "TRD_GRP_116",
                          "TRD_GRP_117",
                          "TRD_GRP_118",
                          "TRD_GRP_119",
                          "TRD_GRP_120",
                          "TRD_GRP_121",
                          "TRD_GRP_122",
                          "TRD_GRP_123",
                          "TRD_GRP_124",
                          "TRD_GRP_125",
                          "TRD_GRP_126",
                          "TRD_GRP_127",
                          "TRD_GRP_128",
                          "TRD_GRP_129",
                          "TRD_GRP_130",
                          "TRD_GRP_131",
                          "TRD_GRP_132",
                          "TRD_GRP_133",
                          "TRD_GRP_134",
                          "TRD_GRP_135",
                          "TRD_GRP_136",
                          "TRD_GRP_137",
                          "TRD_GRP_138",
                          "TRD_GRP_139",
                          "TRD_GRP_140",
                          "TRD_GRP_141",
                          "TRD_GRP_142",
                          "TRD_GRP_143",
                          "TRD_GRP_144",
                          "TRD_GRP_145",
                          "TRD_GRP_146",
                          "TRD_GRP_147",
                          "TRD_GRP_148",
                          "TRD_GRP_149",
                          "TRD_GRP_150",
                          "TRD_GRP_151",
                          "TRD_GRP_152",
                          "TRD_GRP_153",
                          "TRD_GRP_154",
                          "TRD_GRP_155",
                          "TRD_GRP_156",
                          "TRD_GRP_157",
                          "TRD_GRP_158",
                          "TRD_GRP_159",
                          "TRD_GRP_160",
                          "TRD_GRP_161",
                          "TRD_GRP_162",
                          "TRD_GRP_163",
                          "TRD_GRP_164",
                          "TRD_GRP_165",
                          "TRD_GRP_166",
                          "TRD_GRP_167",
                          "TRD_GRP_168",
                          "TRD_GRP_169",
                          "TRD_GRP_170",
                          "TRD_GRP_171",
                          "TRD_GRP_172",
                          "TRD_GRP_173",
                          "TRD_GRP_174",
                          "TRD_GRP_175",
                          "TRD_GRP_176",
                          "TRD_GRP_177",
                          "TRD_GRP_178",
                          "TRD_GRP_179",
                          "TRD_GRP_180",
                          "TRD_GRP_181",
                          "TRD_GRP_182",
                          "TRD_GRP_183",
                          "TRD_GRP_184",
                          "TRD_GRP_185",
                          "TRD_GRP_186",
                          "TRD_GRP_187",
                          "TRD_GRP_188",
                          "TRD_GRP_189",
                          "TRD_GRP_190",
                          "TRD_GRP_191",
                          "TRD_GRP_192",
                          "TRD_GRP_193",
                          "TRD_GRP_194",
                          "TRD_GRP_195",
                          "TRD_GRP_196",
                          "TRD_GRP_197",
                          "TRD_GRP_198",
                          "TRD_GRP_199",
                          "TRD_GRP_200",
                          "TRD_GRP_201",
                          "TRD_GRP_202",
                          "TRD_GRP_203",
                          "TRD_GRP_204",
                          "TRD_GRP_205",
                          "TRD_GRP_206",
                          "TRD_GRP_207",
                          "TRD_GRP_208",
                          "TRD_GRP_209",
                          "TRD_GRP_210",
                          "TRD_GRP_211",
                          "TRD_GRP_212",
                          "TRD_GRP_213",
                          "TRD_GRP_214",
                          "TRD_GRP_215",
                          "TRD_GRP_216",
                          "TRD_GRP_217",
                          "TRD_GRP_218",
                          "TRD_GRP_219",
                          "TRD_GRP_220",
                          "TRD_GRP_221",
                          "TRD_GRP_222",
                          "TRD_GRP_223",
                          "TRD_GRP_224",
                          "TRD_GRP_225",
                          "TRD_GRP_226",
                          "TRD_GRP_227",
                          "TRD_GRP_228",
                          "TRD_GRP_229",
                          "TRD_GRP_230",
                          "TRD_GRP_231",
                          "TRD_GRP_232",
                          "TRD_GRP_233",
                          "TRD_GRP_234",
                          "TRD_GRP_235",
                          "TRD_GRP_236"
                        ]
                      ],
                      "defaultSelfTradePreventionMode": "EXPIRE_MAKER",
                      "allowedSelfTradePreventionModes": [
                        "EXPIRE_TAKER",
                        "EXPIRE_MAKER",
                        "EXPIRE_BOTH"
                      ]
                    }
                  ]
                }
            properties:
                allowedSelfTradePreventionModes:
                    items:
                        type: string
                    type: array
                defaultSelfTradePreventionMode:
                    type: string
                exchangeFilters:
                    items:
                        properties:
                            filterType:
                                type: string
                            maxPrice:
                                type: string
                            minPrice:
                                type: string
                            tickSize:
                                type: string
                        type: object
                    type: array
                permissionSets:
                    items:
                        items:
                            type: string
                        type: array
                    type: array
                permissions:
                    items:
                        type: string
                    type: array
                rateLimits:
                    items:
                        properties:
                            interval:
                                type: string
                            intervalNum:
                                type: number
                            limit:
                                type: number
                            rateLimitType:
                                type: string
                        type: object
                    type: array
                serverTime:
                    type: number
                symbols:
                    items:
                        properties:
                            allowTrailingStop:
                                type: boolean
                            baseAsset:
                                type: string
                            baseAssetPrecision:
                                type: number
                            baseCommissionPrecision:
                                type: number
                            cancelReplaceAllowed:
                                type: boolean
                            filters:
                                items:
                                    properties:
                                        filterType:
                                            type: string
                                        maxPrice:
                                            type: string
                                        minPrice:
                                            type: string
                                    type: object
                                type: array
                            icebergAllowed:
                                type: boolean
                            isMarginTradingAllowed:
                                type: boolean
                            isSpotTradingAllowed:
                                type: boolean
                            ocoAllowed:
                                type: boolean
                            orderTypes:
                                items:
                                    type: string
                                type: array
                            otoAllowed:
                                type: boolean
                            quoteAsset:
                                type: string
                            quoteAssetPrecision:
                                type: number
                            quoteCommissionPrecision:
                                type: number
                            quoteOrderQtyMarketAllowed:
                                type: boolean
                            quotePrecision:
                                type: number
                            status:
                                type: string
                            symbol:
                                type: string
                        type: object
                    type: array
                timezone:
                    type: string
            type: object
        SpotGetHistoricalTradesV3RespItem:
            properties:
                id:
                    type: number
                isBestMatch:
                    type: boolean
                isBuyerMaker:
                    type: boolean
                price:
                    type: string
                qty:
                    type: string
                quoteQty:
                    type: string
                time:
                    type: number
            type: object
        SpotGetKlinesV3RespItem:
            example: |
                [
                  1499040000000,      // Kline open time
                  "0.01634790",       // Open price
                  "0.80000000",       // High price
                  "0.01575800",       // Low price
                  "0.01577100",       // Close price
                  "148976.11427815",  // Volume
                  1499644799999,      // Kline Close time
                  "2434.19055334",    // Quote asset volume
                  308,                // Number of trades
                  "1756.87402397",    // Taker buy base asset volume
                  "28.46694368",      // Taker buy quote asset volume
                  "0"                 // Unused field, ignore.
                ]
            items:
                oneOf:
                    - type: string
                    - type: number
            type: array
        SpotGetMyAllocationsV3RespItem:
            properties:
                allocationId:
                    type: number
                allocationType:
                    type: string
                commission:
                    type: string
                commissionAsset:
                    type: string
                isAllocator:
                    type: boolean
                isBuyer:
                    type: boolean
                isMaker:
                    type: boolean
                orderId:
                    type: number
                orderListId:
                    type: number
                price:
                    type: string
                qty:
                    type: string
                quoteQty:
                    type: string
                symbol:
                    type: string
                time:
                    type: number
            type: object
        SpotGetMyPreventedMatchesV3RespItem:
            properties:
                makerOrderId:
                    type: number
                makerPreventedQuantity:
                    type: string
                makerSymbol:
                    type: string
                preventedMatchId:
                    type: number
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                symbol:
                    type: string
                takerOrderId:
                    type: number
                tradeGroupId:
                    type: number
                transactTime:
                    type: number
            type: object
        SpotGetMyTradesV3RespItem:
            properties:
                commission:
                    type: string
                commissionAsset:
                    type: string
                id:
                    type: number
                isBestMatch:
                    type: boolean
                isBuyer:
                    type: boolean
                isMaker:
                    type: boolean
                orderId:
                    type: number
                orderListId:
                    type: number
                price:
                    type: string
                qty:
                    type: string
                quoteQty:
                    type: string
                symbol:
                    type: string
                time:
                    type: number
            type: object
        SpotGetOpenOrderListV3RespItem:
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    type: number
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                type: number
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    type: number
            type: object
        SpotGetOpenOrdersV3RespItem:
            example: |
                {
                  "symbol": "LTCBTC",
                  "orderId": 1,
                  "orderListId": -1, // Unless it's part of an order list, value will be -1
                  "clientOrderId": "myOrder1",
                  "price": "0.1",
                  "origQty": "1.0",
                  "executedQty": "0.0",
                  "cummulativeQuoteQty": "0.0",
                  "status": "NEW",
                  "timeInForce": "GTC",
                  "type": "LIMIT",
                  "side": "BUY",
                  "stopPrice": "0.0",
                  "icebergQty": "0.0",
                  "time": 1499827319559,
                  "updateTime": 1499827319559,
                  "isWorking": true,
                  "origQuoteOrderQty": "0.000000",
                  "workingTime": 1499827319559,
                  "selfTradePreventionMode": "NONE"
                }
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                icebergQty:
                    type: string
                isWorking:
                    type: boolean
                orderId:
                    type: number
                orderListId:
                    type: number
                origQty:
                    type: string
                origQuoteOrderQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                time:
                    type: number
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    type: number
                workingTime:
                    type: number
            type: object
        SpotGetOrderListV3Resp:
            example: '{  "orderListId": 27,  "contingencyType": "OCO",  "listStatusType": "EXEC_STARTED",  "listOrderStatus": "EXECUTING",  "listClientOrderId": "h2USkA5YQpaXHPIrkd96xE",  "transactionTime": 1565245656253,  "symbol": "LTCBTC",  "orders": [    {      "symbol": "LTCBTC",      "orderId": 4,      "clientOrderId": "qD1gy3kc3Gx0rihm9Y3xwS"    },    {      "symbol": "LTCBTC",      "orderId": 5,      "clientOrderId": "ARzZ9I00CPM8i3NhmU9Ega"    }  ]}'
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    type: number
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                type: number
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    type: number
            type: object
        SpotGetOrderV3Resp:
            example: |-
                {
                  "symbol": "LTCBTC",
                  "orderId": 1,
                  "orderListId": -1,                 // This field will always have a value of -1 if not an order list.
                  "clientOrderId": "myOrder1",
                  "price": "0.1",
                  "origQty": "1.0",
                  "executedQty": "0.0",
                  "cummulativeQuoteQty": "0.0",
                  "status": "NEW",
                  "timeInForce": "GTC",
                  "type": "LIMIT",
                  "side": "BUY",
                  "stopPrice": "0.0",
                  "icebergQty": "0.0",
                  "time": 1499827319559,
                  "updateTime": 1499827319559,
                  "isWorking": true,
                  "workingTime":1499827319559,
                  "origQuoteOrderQty": "0.000000",
                  "selfTradePreventionMode": "NONE"
                }
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    format: double
                    type: string
                executedQty:
                    format: double
                    type: string
                icebergQty:
                    format: double
                    type: string
                isWorking:
                    type: boolean
                orderId:
                    format: int64
                    type: integer
                orderListId:
                    type: integer
                origQty:
                    format: double
                    type: string
                origQuoteOrderQty:
                    format: double
                    type: string
                price:
                    format: double
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    format: double
                    type: string
                symbol:
                    type: string
                time:
                    type: integer
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    type: integer
                workingTime:
                    type: integer
            type: object
        SpotGetPingV3Resp:
            example: '{}'
            type: object
        SpotGetRateLimitOrderV3RespItem:
            properties:
                count:
                    type: number
                interval:
                    type: string
                intervalNum:
                    type: number
                limit:
                    type: number
                rateLimitType:
                    type: string
            type: object
        SpotGetTicker24hrV3RespItem:
            example: |
                {
                    "symbol": "BNBBTC",
                    "priceChange": "-94.99999800",
                    "priceChangePercent": "-95.960",
                    "weightedAvgPrice": "0.29628482",
                    "prevClosePrice": "0.10002000",
                    "lastPrice": "4.00000200",
                    "lastQty": "200.00000000",
                    "bidPrice": "4.00000000",
                    "bidQty": "100.00000000",
                    "askPrice": "4.00000200",
                    "askQty": "100.00000000",
                    "openPrice": "99.00000000",
                    "highPrice": "100.00000000",
                    "lowPrice": "0.10000000",
                    "volume": "8913.30000000",
                    "quoteVolume": "15.30000000",
                    "openTime": 1499783499040,
                    "closeTime": 1499869899040,
                    "firstId": 28385,   // First tradeId
                    "lastId": 28460,    // Last tradeId
                    "count": 76         // Trade count
                }
            properties:
                askPrice:
                    type: string
                askQty:
                    type: string
                bidPrice:
                    type: string
                bidQty:
                    type: string
                closeTime:
                    type: number
                count:
                    type: number
                firstId:
                    type: number
                highPrice:
                    type: string
                lastId:
                    type: number
                lastPrice:
                    type: string
                lastQty:
                    type: string
                lowPrice:
                    type: string
                openPrice:
                    type: string
                openTime:
                    type: number
                prevClosePrice:
                    type: string
                priceChange:
                    type: string
                priceChangePercent:
                    type: string
                quoteVolume:
                    type: string
                symbol:
                    type: string
                volume:
                    type: string
                weightedAvgPrice:
                    type: string
            type: object
        SpotGetTickerBookTickerV3RespItem:
            example: '{  "symbol": "LTCBTC",  "bidPrice": "4.00000000",  "bidQty": "431.00000000",  "askPrice": "4.00000200",  "askQty": "9.00000000"}'
            properties:
                askPrice:
                    type: string
                askQty:
                    type: string
                bidPrice:
                    type: string
                bidQty:
                    type: string
                symbol:
                    type: string
            type: object
        SpotGetTickerPriceV3RespItem:
            example: '{  "symbol": "LTCBTC",  "price": "4.00000200"}'
            properties:
                price:
                    type: string
                symbol:
                    type: string
            type: object
        SpotGetTickerTradingDayV3RespItem:
            example: |
                {
                    "symbol":             "BTCUSDT",
                    "priceChange":        "-83.13000000",         // Absolute price change
                    "priceChangePercent": "-0.317",               // Relative price change in percent
                    "weightedAvgPrice":   "26234.58803036",       // quoteVolume / volume
                    "openPrice":          "26304.80000000",
                    "highPrice":          "26397.46000000",
                    "lowPrice":           "26088.34000000",
                    "lastPrice":          "26221.67000000",
                    "volume":             "18495.35066000",       // Volume in base asset
                    "quoteVolume":        "485217905.04210480",   // Volume in quote asset
                    "openTime":           1695686400000,
                    "closeTime":          1695772799999,
                    "firstId":            3220151555,             // Trade ID of the first trade in the interval
                    "lastId":             3220849281,             // Trade ID of the last trade in the interval
                    "count":              697727                  // Number of trades in the interval
                }
            properties:
                closeTime:
                    type: number
                count:
                    type: number
                firstId:
                    type: number
                highPrice:
                    type: string
                lastId:
                    type: number
                lastPrice:
                    type: string
                lowPrice:
                    type: string
                openPrice:
                    type: string
                openTime:
                    type: number
                priceChange:
                    type: string
                priceChangePercent:
                    type: string
                quoteVolume:
                    type: string
                symbol:
                    type: string
                volume:
                    type: string
                weightedAvgPrice:
                    type: string
            type: object
        SpotGetTickerV3RespItem:
            example: |
                {
                    "symbol":             "BNBBTC",
                    "priceChange":        "-8.00000000",  // Absolute price change
                    "priceChangePercent": "-88.889",      // Relative price change in percent
                    "weightedAvgPrice":   "2.60427807",   // QuoteVolume / Volume
                    "openPrice":          "9.00000000",
                    "highPrice":          "9.00000000",
                    "lowPrice":           "1.00000000",
                    "lastPrice":          "1.00000000",
                    "volume":             "187.00000000",
                    "quoteVolume":        "487.00000000", // Sum of (price * volume) for all trades
                    "openTime":           1641859200000,  // Open time for ticker window
                    "closeTime":          1642031999999,  // Close time for ticker window
                    "firstId":            0,              // Trade IDs
                    "lastId":             60,
                    "count":              61              // Number of trades in the interval
                }
            properties:
                closeTime:
                    type: number
                count:
                    type: number
                firstId:
                    type: number
                highPrice:
                    type: string
                lastId:
                    type: number
                lastPrice:
                    type: string
                lowPrice:
                    type: string
                openPrice:
                    type: string
                openTime:
                    type: number
                priceChange:
                    type: string
                priceChangePercent:
                    type: string
                quoteVolume:
                    type: string
                symbol:
                    type: string
                volume:
                    type: string
                weightedAvgPrice:
                    type: string
            type: object
        SpotGetTimeV3Resp:
            example: '{  "serverTime": 1499827319559}'
            properties:
                serverTime:
                    type: number
            type: object
        SpotGetTradesV3RespItem:
            properties:
                id:
                    type: number
                isBestMatch:
                    type: boolean
                isBuyerMaker:
                    type: boolean
                price:
                    type: string
                qty:
                    type: string
                quoteQty:
                    type: string
                time:
                    type: number
            type: object
        SpotGetUiKlinesV3RespItem:
            example: |
                [
                  1499040000000,      // Kline open time
                  "0.01634790",       // Open price
                  "0.80000000",       // High price
                  "0.01575800",       // Low price
                  "0.01577100",       // Close price
                  "148976.11427815",  // Volume
                  1499644799999,      // Kline close time
                  "2434.19055334",    // Quote asset volume
                  308,                // Number of trades
                  "1756.87402397",    // Taker buy base asset volume
                  "28.46694368",      // Taker buy quote asset volume
                  "0"                 // Unused field. Ignore.
                ]
            items:
                oneOf:
                    - type: string
                    - type: number
            type: array
        SpotUpdateUserDataStreamV3Req:
            properties:
                listenKey:
                    default: ""
                    type: string
            required:
                - listenKey
            type: object
        SpotUpdateUserDataStreamV3Resp:
            example: '{}'
            type: object
    securitySchemes:
        ApiKey:
            in: header
            name: X-MBX-APIKEY
            type: apiKey
info:
    description: OpenAPI specification for Binance cryptocurrency exchange - Spot API
    title: Binance Spot API
    version: 1.0.0
openapi: 3.0.3
paths:
    /api/v3/account:
        get:
            description: Get current account information.
            operationId: SpotGetAccountV3
            parameters:
                - description: 'When set to `true`, emits only the non-zero balances of an account. <br/>Default value: `false`'
                  in: query
                  name: omitZeroBalances
                  schema:
                    type: boolean
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetAccountV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Account information (USER_DATA)
            tags:
                - Account
                - V3
    /api/v3/account/commission:
        get:
            description: Get current account commission rates.
            operationId: SpotGetAccountCommissionV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetAccountCommissionV3Resp'
                    description: Successful operation
            summary: Query Commission Rates (USER_DATA)
            tags:
                - Account
                - V3
    /api/v3/aggTrades:
        get:
            description: Get compressed, aggregate trades. Trades that fill at the time, from the same taker order, with the same price will have the quantity aggregated.
            operationId: SpotGetAggTradesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: ID to get aggregate trades from INCLUSIVE.
                  in: query
                  name: fromId
                  schema:
                    format: int64
                    type: integer
                - description: Timestamp in ms to get aggregate trades from INCLUSIVE.
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: Timestamp in ms to get aggregate trades until INCLUSIVE.
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/SpotGetAggTradesV3RespItem'
                                type: array
                    description: Successful operation
            summary: Compressed/Aggregate trades list
            tags:
                - Market Data
                - V3
    /api/v3/allOrderList:
        get:
            description: |-
                Retrieves all order lists based on provided optional parameters.
                Note that the time between startTime and endTime can't be longer than 24 hours.
            operationId: SpotGetAllOrderListV3
            parameters:
                - description: If supplied, neither `startTime` or `endTime` can be provided
                  in: query
                  name: fromId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default Value: 500; Max Value: 1000'
                  in: query
                  name: limit
                  schema:
                    type: integer
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                example: '[  {    "orderListId": 29,    "contingencyType": "OCO",    "listStatusType": "EXEC_STARTED",    "listOrderStatus": "EXECUTING",    "listClientOrderId": "amEEAXryFzFwYF1FeRpUoZ",    "transactionTime": 1565245913483,    "symbol": "LTCBTC",    "orders": [      {        "symbol": "LTCBTC",        "orderId": 4,        "clientOrderId": "oD7aesZqjEGlZrbtRpy5zB"      },      {        "symbol": "LTCBTC",        "orderId": 5,        "clientOrderId": "Jr1h6xirOxgeJOUuYQS7V3"      }    ]  },  {    "orderListId": 28,    "contingencyType": "OCO",    "listStatusType": "EXEC_STARTED",    "listOrderStatus": "EXECUTING",    "listClientOrderId": "hG7hFNxJV6cZy3Ze4AUT4d",    "transactionTime": 1565245913407,    "symbol": "LTCBTC",    "orders": [      {        "symbol": "LTCBTC",        "orderId": 2,        "clientOrderId": "j6lFOfbmFMRjTYA7rRJ0LP"      },      {        "symbol": "LTCBTC",        "orderId": 3,        "clientOrderId": "z0KCjOdditiLS5ekAFtK81"      }    ]  }]'
                                items:
                                    $ref: '#/components/schemas/SpotGetAllOrderListV3RespItem'
                                type: array
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query all Order lists (USER_DATA)
            tags:
                - Trading
                - V3
    /api/v3/allOrders:
        get:
            description: Get all account orders; active, canceled, or filled.
            operationId: SpotGetAllOrdersV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    maximum: 60000
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/SpotGetAllOrdersV3RespItem'
                                type: array
                    description: Successful operation
            summary: All orders (USER_DATA)
            tags:
                - Trading
                - V3
    /api/v3/avgPrice:
        get:
            description: Current average price for a symbol.
            operationId: SpotGetAvgPriceV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetAvgPriceV3Resp'
                    description: Successful operation
            summary: Current average price
            tags:
                - Market Data
                - V3
    /api/v3/depth:
        get:
            operationId: SpotGetDepthV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Default 100; max 5000. <br/> If limit &gt; 5000. then the response will truncate to 5000.
                  in: query
                  name: limit
                  schema:
                    default: 100
                    maximum: 5000
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetDepthV3Resp'
                    description: Successful operation
            summary: Order book
            tags:
                - Market Data
                - V3
    /api/v3/exchangeInfo:
        get:
            description: Current exchange trading rules and symbol information
            operationId: SpotGetExchangeInfoV3
            parameters:
                - description: 'Example: curl -X GET &#34;<a href="https://api.binance.com/api/v3/exchangeInfo?symbol=BNBBTC" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?symbol=BNBBTC</a>&#34;'
                  in: query
                  name: symbol
                  schema:
                    type: string
                - description: 'Examples: curl -X GET &#34;<a href="https://api.binance.com/api/v3/exchangeInfo?symbols=%5B%22BNBBTC%22,%22BTCUSDT%22%5D" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?symbols=%5B%22BNBBTC%22,%22BTCUSDT%22%5D</a>&#34; <br/> or <br/> curl -g -X  GET &#39;<a href="https://api.binance.com/api/v3/exchangeInfo?symbols=%5B%22BTCUSDT%22,%22BNBBTC" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?symbols=[&#34;BTCUSDT&#34;,&#34;BNBBTC</a>&#34;]&#39;'
                  in: query
                  name: symbols
                  schema:
                    type: string
                - description: 'Examples: curl -X GET &#34;<a href="https://api.binance.com/api/v3/exchangeInfo?permissions=SPOT" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?permissions=SPOT</a>&#34; <br/> or <br/> curl -X GET &#34;<a href="https://api.binance.com/api/v3/exchangeInfo?permissions=%5B%22MARGIN%22%2C%22LEVERAGED%22%5D" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?permissions=%5B%22MARGIN%22%2C%22LEVERAGED%22%5D</a>&#34; <br/> or <br/> curl -g -X GET &#39;<a href="https://api.binance.com/api/v3/exchangeInfo?permissions=%5B%22MARGIN%22,%22LEVERAGED" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?permissions=[&#34;MARGIN&#34;,&#34;LEVERAGED</a>&#34;]&#39;'
                  in: query
                  name: permissions
                  schema:
                    items:
                        default: ""
                        type: string
                    type: array
                - description: Controls whether the content of the `permissionSets` field is populated or not. Defaults to `true`
                  in: query
                  name: showPermissionSets
                  schema:
                    type: boolean
                - description: 'Filters symbols that have this `tradingStatus`. Valid values: `TRADING`, `HALT`, `BREAK` <br/> Cannot be used in combination with `symbols` or `symbol`.'
                  in: query
                  name: symbolStatus
                  schema:
                    enum:
                        - TRADING
                        - HALT
                        - BREAK
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetExchangeInfoV3Resp'
                    description: Successful operation
            summary: Exchange information
            tags:
                - General
                - V3
    /api/v3/historicalTrades:
        get:
            description: Get older trades.
            operationId: SpotGetHistoricalTradesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
                - description: TradeId to fetch from. Default gets most recent trades.
                  in: query
                  name: fromId
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                example: '[  {    "id": 28457,    "price": "4.00000100",    "qty": "12.00000000",    "quoteQty": "48.000012",    "time": 1499865549590,    "isBuyerMaker": true,    "isBestMatch": true  }]'
                                items:
                                    $ref: '#/components/schemas/SpotGetHistoricalTradesV3RespItem'
                                type: array
                    description: Successful operation
            summary: Old trade lookup
            tags:
                - Market Data
                - V3
    /api/v3/klines:
        get:
            description: |-
                Kline/candlestick bars for a symbol.
                Klines are uniquely identified by their open time.
            operationId: SpotGetKlinesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: interval
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default: 0 (UTC)'
                  in: query
                  name: timeZone
                  schema:
                    default: 0
                    type: string
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/SpotGetKlinesV3RespItem'
                                type: array
                    description: Successful operation
            summary: Kline/Candlestick data
            tags:
                - Market Data
                - V3
    /api/v3/myAllocations:
        get:
            description: Retrieves allocations resulting from SOR order placement.
            operationId: SpotGetMyAllocationsV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: fromAllocationId
                  schema:
                    type: integer
                - description: Default 500;Max 1000
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - description: The value cannot be greater than `60000`.
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                example: '[  {    "symbol": "BTCUSDT",    "allocationId": 0,    "allocationType": "SOR",    "orderId": 1,    "orderListId": -1,    "price": "1.00000000",    "qty": "5.00000000",    "quoteQty": "5.00000000",    "commission": "0.00000000",    "commissionAsset": "BTC",    "time": 1687506878118,    "isBuyer": true,    "isMaker": false,    "isAllocator": false  }]'
                                items:
                                    $ref: '#/components/schemas/SpotGetMyAllocationsV3RespItem'
                                type: array
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Allocations (USER_DATA)
            tags:
                - Account
                - V3
    /api/v3/myPreventedMatches:
        get:
            description: |-
                Displays the list of orders that were expired due to STP.
                These are the combinations supported:
                - symbol + preventedMatchId
                - symbol + orderId
                - symbol + orderId + fromPreventedMatchId (limit will default to 500)
                - symbol + orderId + fromPreventedMatchId + limit
            operationId: SpotGetMyPreventedMatchesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: preventedMatchId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: fromPreventedMatchId
                  schema:
                    format: int64
                    type: integer
                - description: 'Default: `500`; Max: `1000`'
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                example: '[  {    "symbol": "BTCUSDT",    "preventedMatchId": 1,    "takerOrderId": 5,    "makerSymbol": "BTCUSDT",    "makerOrderId": 3,    "tradeGroupId": 1,    "selfTradePreventionMode": "EXPIRE_MAKER",    "price": "1.100000",    "makerPreventedQuantity": "1.300000",    "transactTime": 1669101687094  }]'
                                items:
                                    $ref: '#/components/schemas/SpotGetMyPreventedMatchesV3RespItem'
                                type: array
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Prevented Matches (USER_DATA)
            tags:
                - Account
                - V3
    /api/v3/myTrades:
        get:
            description: Get trades for a specific account and symbol.
            operationId: SpotGetMyTradesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: This can only be used in combination with `symbol`.
                  in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: TradeId to fetch from. Default gets most recent trades.
                  in: query
                  name: fromId
                  schema:
                    format: int64
                    type: integer
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                example: '[  {    "symbol": "BNBBTC",    "id": 28457,    "orderId": 100234,    "orderListId": -1,    "price": "4.00000100",    "qty": "12.00000000",    "quoteQty": "48.000012",    "commission": "10.10000000",    "commissionAsset": "BNB",    "time": 1499865549590,    "isBuyer": true,    "isMaker": false,    "isBestMatch": true  }]'
                                items:
                                    $ref: '#/components/schemas/SpotGetMyTradesV3RespItem'
                                type: array
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Account trade list (USER_DATA)
            tags:
                - Account
                - V3
    /api/v3/openOrderList:
        get:
            operationId: SpotGetOpenOrderListV3
            parameters:
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                example: '[  {    "orderListId": 31,    "contingencyType": "OCO",    "listStatusType": "EXEC_STARTED",    "listOrderStatus": "EXECUTING",    "listClientOrderId": "wuB13fmulKj3YjdqWEcsnp",    "transactionTime": 1565246080644,    "symbol": "LTCBTC",    "orders": [      {        "symbol": "LTCBTC",        "orderId": 4,        "clientOrderId": "r3EH2N76dHfLoSZWIUw1bT"      },      {        "symbol": "LTCBTC",        "orderId": 5,        "clientOrderId": "Cv1SnyPD3qhqpbjpYEHbd2"      }    ]  }]'
                                items:
                                    $ref: '#/components/schemas/SpotGetOpenOrderListV3RespItem'
                                type: array
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Open Order lists (USER_DATA)
            tags:
                - Trading
                - V3
    /api/v3/openOrders:
        delete:
            description: |-
                Cancels all active orders on a symbol.
                This includes orders that are part of an order list.
            operationId: SpotDeleteOpenOrdersV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                example: '[  {    "symbol": "BTCUSDT",    "origClientOrderId": "E6APeyTJvkMvLMYMqu1KQ4",    "orderId": 11,    "orderListId": -1,    "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx",    "transactTime": 1684804350068,    "price": "0.089853",    "origQty": "0.178622",    "executedQty": "0.000000",    "cummulativeQuoteQty": "0.000000",    "status": "CANCELED",    "timeInForce": "GTC",    "type": "LIMIT",    "side": "BUY",    "selfTradePreventionMode": "NONE"  },  {    "symbol": "BTCUSDT",    "origClientOrderId": "A3EF2HCwxgZPFMrfwbgrhv",    "orderId": 13,    "orderListId": -1,    "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx",    "transactTime": 1684804350069,    "price": "0.090430",    "origQty": "0.178622",    "executedQty": "0.000000",    "cummulativeQuoteQty": "0.000000",    "status": "CANCELED",    "timeInForce": "GTC",    "type": "LIMIT",    "side": "BUY",    "selfTradePreventionMode": "NONE"  },  {    "orderListId": 1929,    "contingencyType": "OCO",    "listStatusType": "ALL_DONE",    "listOrderStatus": "ALL_DONE",    "listClientOrderId": "2inzWQdDvZLHbbAmAozX2N",    "transactionTime": 1585230948299,    "symbol": "BTCUSDT",    "orders": [      {        "symbol": "BTCUSDT",        "orderId": 20,        "clientOrderId": "CwOOIPHSmYywx6jZX77TdL"      },      {        "symbol": "BTCUSDT",        "orderId": 21,        "clientOrderId": "461cPg51vQjV3zIMOXNz39"      }    ],    "orderReports": [      {        "symbol": "BTCUSDT",        "origClientOrderId": "CwOOIPHSmYywx6jZX77TdL",        "orderId": 20,        "orderListId": 1929,        "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx",        "transactTime": 1688005070874,        "price": "0.668611",        "origQty": "0.690354",        "executedQty": "0.000000",        "cummulativeQuoteQty": "0.000000",        "status": "CANCELED",        "timeInForce": "GTC",        "type": "STOP_LOSS_LIMIT",        "side": "BUY",        "stopPrice": "0.378131",        "icebergQty": "0.017083",        "selfTradePreventionMode": "NONE"      },      {        "symbol": "BTCUSDT",        "origClientOrderId": "461cPg51vQjV3zIMOXNz39",        "orderId": 21,        "orderListId": 1929,        "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx",        "transactTime": 1688005070874,        "price": "0.008791",        "origQty": "0.690354",        "executedQty": "0.000000",        "cummulativeQuoteQty": "0.000000",        "status": "CANCELED",        "timeInForce": "GTC",        "type": "LIMIT_MAKER",        "side": "BUY",        "icebergQty": "0.639962",        "selfTradePreventionMode": "NONE"      }    ]  }]'
                                items:
                                    $ref: '#/components/schemas/SpotDeleteOpenOrdersV3RespItem'
                                type: array
                    description: Successful operation
            summary: Cancel All Open Orders on a Symbol (TRADE)
            tags:
                - Trading
                - V3
        get:
            description: |-
                Get all open orders on a symbol. Careful when accessing this with no symbol.
                Weight:
                6 for a single symbol; 80 when the symbol parameter is omitted
            operationId: SpotGetOpenOrdersV3
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/SpotGetOpenOrdersV3RespItem'
                                type: array
                    description: Successful operation
            summary: Current open orders (USER_DATA)
            tags:
                - Trading
                - V3
    /api/v3/order:
        delete:
            description: Cancel an active order.
            operationId: SpotDeleteOrderV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: origClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: Used to uniquely identify this cancel. Automatically generated by default.
                  in: query
                  name: newClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: 'Supported values: <br/>`ONLY_NEW` - Cancel will succeed if the order status is `NEW`.<br/> `ONLY_PARTIALLY_FILLED ` - Cancel will succeed if order status is `PARTIALLY_FILLED`.'
                  in: query
                  name: cancelRestrictions
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`.
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotDeleteOrderV3Resp'
                    description: Successful operation
            summary: Cancel order (TRADE)
            tags:
                - Trading
                - V3
        get:
            description: Check an order's status.
            operationId: SpotGetOrderV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: origClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    maximum: 60000
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetOrderV3Resp'
                    description: Successful operation
            summary: Query order (USER_DATA)
            tags:
                - Trading
                - V3
        post:
            description: Send in a new order.
            operationId: SpotCreateOrderV3
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SpotCreateOrderV3Req'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateOrderV3Resp'
                    description: Successful operation
            summary: New order (TRADE)
            tags:
                - Trading
                - V3
    /api/v3/order/cancelReplace:
        post:
            description: |-
                Cancels an existing order and places a new order on the same symbol.
                Filters and Order Count are evaluated before the processing of the cancellation and order placement occurs.
                A new order that was not attempted (i.e. when newOrderResult: NOT_ATTEMPTED ), will still increase the order count by 1.
            operationId: SpotCreateOrderCancelReplaceV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/SpotCreateOrderCancelReplaceV3Req'
                description: The request body for SpotCreateOrderCancelReplaceV3
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateOrderCancelReplaceV3Resp'
                    description: Successful operation
            summary: Cancel an Existing Order and Send a New Order (TRADE)
            tags:
                - Trading
                - V3
    /api/v3/order/oco:
        post:
            description: |-
                Send in a new OCO.
                - Price Restrictions:

                SELL: Limit Price > Last Price > Stop Price
                BUY: Limit Price < Last Price < Stop Price
                - Quantity Restrictions:

                Both legs must have the same quantity.
                ICEBERG quantities however do not have to be the same
                - OCO adds 2 orders to the unfilled order count, EXCHANGE_MAX_ORDERS filter and the MAX_NUM_ORDERS filter.
            operationId: SpotCreateOrderOcoV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/SpotCreateOrderOcoV3Req'
                description: The request body for SpotCreateOrderOcoV3
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateOrderOcoV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: New OCO - Deprecated (TRADE)
            tags:
                - Trading
                - V3
    /api/v3/order/test:
        post:
            description: |-
                Test new order creation and signature/recvWindow long.
                Creates and validates a new order but does not send it into the matching engine.
            operationId: SpotCreateOrderTestV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/SpotCreateOrderTestV3Req'
                description: The request body for SpotCreateOrderTestV3
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateOrderTestV3Resp'
                    description: Successful operation
            summary: Test new order (TRADE)
            tags:
                - Trading
                - V3
    /api/v3/orderList:
        delete:
            description: Cancel an entire Order list
            operationId: SpotDeleteOrderListV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Either `orderListId` or `listClientOrderId` must be provided
                  in: query
                  name: orderListId
                  schema:
                    format: int64
                    type: integer
                - description: Either `orderListId` or `listClientOrderId` must be provided
                  in: query
                  name: listClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: Used to uniquely identify this cancel. Automatically generated by default
                  in: query
                  name: newClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotDeleteOrderListV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Cancel Order list (TRADE)
            tags:
                - Trading
                - V3
        get:
            description: Retrieves a specific order list based on provided optional parameters.
            operationId: SpotGetOrderListV3
            parameters:
                - description: Either `orderListId` or `listClientOrderId` must be provided
                  in: query
                  name: orderListId
                  schema:
                    format: int64
                    type: integer
                - description: Either `orderListId` or `listClientOrderId` must be provided
                  in: query
                  name: origClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetOrderListV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Order list (USER_DATA)
            tags:
                - Trading
                - V3
    /api/v3/orderList/oco:
        post:
            description: |-
                Send in an one-cancels-the-other (OCO) pair, where activation of one order immediately cancels the other.
                - An OCO has 2 orders called the above order and below order.
                - One of the orders must be a LIMIT_MAKER/TAKE_PROFIT/TAKE_PROFIT_LIMIT order and the other must be STOP_LOSS or STOP_LOSS_LIMIT order.
                - Price restrictions

                If the OCO is on the SELL side:

                LIMIT_MAKER/TAKE_PROFIT_LIMIT price > Last Traded Price >  STOP_LOSS/STOP_LOSS_LIMIT stopPrice
                TAKE_PROFIT stopPrice > Last Traded Price > STOP_LOSS/STOP_LOSS_LIMIT stopPrice


                If the OCO is on the BUY side:

                LIMIT_MAKER/TAKE_PROFIT_LIMIT price < Last Traded Price < stopPrice
                TAKE_PROFIT stopPrice < Last Traded Price < STOP_LOSS/STOP_LOSS_LIMIT stopPrice
                - OCOs add 2 orders to the unfilled order count, EXCHANGE_MAX_ORDERS filter, and the MAX_NUM_ORDERS filter.
            operationId: SpotCreateOrderListOcoV3
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SpotCreateOrderListOcoV3Req'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateOrderListOcoV3Resp'
                    description: Successful operation
            summary: New Order list - OCO (TRADE)
            tags:
                - Trading
                - V3
    /api/v3/orderList/oto:
        post:
            description: |-
                Places an OTO.
                - An OTO (One-Triggers-the-Other) is an order list comprised of 2 orders.
                - The first order is called the working order and must be LIMIT or LIMIT_MAKER. Initially, only the working order goes on the order book.
                - The second order is called the pending order. It can be any order type except for MARKET orders using parameter quoteOrderQty. The pending order is only placed on the order book when the working order gets fully filled.
                - If either the working order or the pending order is cancelled individually, the other order in the order list will also be canceled or expired.
                - When the order list is placed, if the working order gets immediately fully filled, the placement response will show the working order as FILLED but the pending order will still appear as PENDING_NEW. You need to query the status of the pending order again to see its updated status.
                - OTOs add 2 orders to the unfilled order count, EXCHANGE_MAX_NUM_ORDERS filter and MAX_NUM_ORDERS filter.
            operationId: SpotCreateOrderListOtoV3
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SpotCreateOrderListOtoV3Req'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateOrderListOtoV3Resp'
                    description: Successful operation
            summary: New Order list - OTO (TRADE)
            tags:
                - Trading
                - V3
    /api/v3/orderList/otoco:
        post:
            description: |-
                Place an OTOCO.
                - An OTOCO (One-Triggers-One-Cancels-the-Other) is an order list comprised of 3 orders.
                - The first order is called the working order and must be LIMIT or LIMIT_MAKER. Initially, only the working order goes on the order book.

                The behavior of the working order is the same as the OTO.
                - OTOCO has 2 pending orders (pending above and pending below), forming an OCO pair. The pending orders are only placed on the order book when the working order gets fully filled.

                The rules of the pending above and pending below follow the same rules as the Order list OCO.
                - OTOCOs add 3 orders against the unfilled order count, EXCHANGE_MAX_NUM_ORDERS filter, and MAX_NUM_ORDERS filter.
            operationId: SpotCreateOrderListOtocoV3
            requestBody:
                content:
                    application/www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/SpotCreateOrderListOtocoV3Req'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateOrderListOtocoV3Resp'
                    description: Successful operation
            summary: New Order list - OTOCO (TRADE)
            tags:
                - Trading
                - V3
    /api/v3/ping:
        get:
            description: Test connectivity to the Rest API.
            operationId: SpotGetPingV3
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetPingV3Resp'
                    description: Successful operation
            summary: Test connectivity
            tags:
                - General
                - V3
    /api/v3/rateLimit/order:
        get:
            description: Displays the user's unfilled order count for all intervals.
            operationId: SpotGetRateLimitOrderV3
            parameters:
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                example: '[  {    "rateLimitType": "ORDERS",    "interval": "SECOND",    "intervalNum": 10,    "limit": 50,    "count": 0  },  {    "rateLimitType": "ORDERS",    "interval": "DAY",    "intervalNum": 1,    "limit": 160000,    "count": 0  }]'
                                items:
                                    $ref: '#/components/schemas/SpotGetRateLimitOrderV3RespItem'
                                type: array
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Unfilled Order Count (USER_DATA)
            tags:
                - Account
                - V3
    /api/v3/sor/order:
        post:
            description: Places an order using smart order routing (SOR).
            operationId: SpotCreateSorOrderV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/SpotCreateSorOrderV3Req'
                description: The request body for SpotCreateSorOrderV3
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateSorOrderV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: New order using SOR (TRADE)
            tags:
                - Trading
                - V3
    /api/v3/sor/order/test:
        post:
            description: |-
                Test new order creation and signature/recvWindow using smart order routing (SOR).
                Creates and validates a new order but does not send it into the matching engine.
            operationId: SpotCreateSorOrderTestV3
            requestBody:
                content:
                    application/www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/SpotCreateSorOrderTestV3Req'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateSorOrderTestV3Resp'
                    description: Successful operation
            summary: Test new order using SOR (TRADE)
            tags:
                - Trading
                - V3
    /api/v3/ticker:
        get:
            description: |-
                Note: This endpoint is different from the GET /api/v3/ticker/24hr endpoint.
                The window used to compute statistics will be no more than 59999ms from the requested windowSize.
                openTime for /api/v3/ticker always starts on a minute, while the closeTime is the current time of the request.
                As such, the effective window will be up to 59999ms wider than windowSize.
                E.g. If the closeTime is 1641287867099 (January 04, 2022 09:17:47:099 UTC) , and the windowSize is 1d. the openTime will be: 1641201420000 (January 3, 2022, 09:17:00)
                Weight:
                4 for each requested symbol regardless of windowSize.  The weight for this request will cap at 200 once the number of symbols in the request is more than 50.
            operationId: SpotGetTickerV3
            parameters:
                - description: 'Either `symbol` or `symbols` must be provided <br/><br/> Examples of accepted format for the `symbols` parameter: <br/> [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>or <br/>%5B%22BTCUSDT%22,%22BNBUSDT%22%5D <br/><br/> The maximum number of `symbols` allowed in a request is 100.'
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: 'Either `symbol` or `symbols` must be provided <br/><br/> Examples of accepted format for the `symbols` parameter: <br/> [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>or <br/>%5B%22BTCUSDT%22,%22BNBUSDT%22%5D <br/><br/> The maximum number of `symbols` allowed in a request is 100.'
                  in: query
                  name: symbols
                  schema:
                    default: ""
                    type: string
                - description: 'Defaults to `1d` if no parameter provided <br/> Supported `windowSize` values: <br/> `1m`,`2m`....`59m` for minutes <br/> `1h`, `2h`....`23h` - for hours <br/> `1d`...`7d` - for days <br/><br/> Units cannot be combined (e.g. `1d2h` is not allowed)'
                  in: query
                  name: windowSize
                  schema:
                    default: ""
                    type: string
                - description: 'Supported values: `FULL` or `MINI`. <br/>If none provided, the default is `FULL`'
                  in: query
                  name: type
                  schema:
                    default: FULL
                    enum:
                        - FULL
                        - MINI
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - items:
                                        $ref: '#/components/schemas/SpotGetTickerV3RespItem'
                                      type: array
                                    - $ref: '#/components/schemas/SpotGetTickerV3RespItem'
                    description: Successful operation
            summary: Rolling window price change statistics
            tags:
                - Market Data
                - V3
    /api/v3/ticker/24hr:
        get:
            description: |-
                24 hour rolling window price change statistics. Careful when accessing this with no symbol.
                Weight:
            operationId: SpotGetTicker24hrV3
            parameters:
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, tickers for all symbols will be returned in an array. <br/><br/>
                             Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, tickers for all symbols will be returned in an array. <br/><br/>
                             Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbols
                  schema:
                    default: ""
                    type: string
                - description: 'Supported values: `FULL` or `MINI`. <br/>If none provided, the default is `FULL`'
                  in: query
                  name: type
                  schema:
                    default: FULL
                    enum:
                        - FULL
                        - MINI
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - items:
                                        $ref: '#/components/schemas/SpotGetTicker24hrV3RespItem'
                                      type: array
                                    - $ref: '#/components/schemas/SpotGetTicker24hrV3RespItem'
                    description: Successful operation
            summary: 24hr ticker price change statistics
            tags:
                - Market Data
                - V3
    /api/v3/ticker/bookTicker:
        get:
            description: |-
                Best price/qty on the order book for a symbol or symbols.
                Weight:
            operationId: SpotGetTickerBookTickerV3
            parameters:
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, bookTickers for all symbols will be returned in an array.
                             <br/><br/>
                            Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, bookTickers for all symbols will be returned in an array.
                             <br/><br/>
                            Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbols
                  schema:
                    default: ""
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - items:
                                        $ref: '#/components/schemas/SpotGetTickerBookTickerV3RespItem'
                                      type: array
                                    - $ref: '#/components/schemas/SpotGetTickerBookTickerV3RespItem'
                    description: Successful operation
            summary: Symbol order book ticker
            tags:
                - Market Data
                - V3
    /api/v3/ticker/price:
        get:
            description: |-
                Latest price for a symbol or symbols.
                Weight:
            operationId: SpotGetTickerPriceV3
            parameters:
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, prices for all symbols will be returned in an array. <br/><br/>
                            Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, prices for all symbols will be returned in an array. <br/><br/>
                            Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbols
                  schema:
                    default: ""
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - items:
                                        $ref: '#/components/schemas/SpotGetTickerPriceV3RespItem'
                                      type: array
                                    - $ref: '#/components/schemas/SpotGetTickerPriceV3RespItem'
                    description: Successful operation
            summary: Symbol price ticker
            tags:
                - Market Data
                - V3
    /api/v3/ticker/tradingDay:
        get:
            description: |-
                Price change statistics for a trading day.
                Weight:
                4 for each requested symbol.  The weight for this request will cap at 200 once the number of symbols in the request is more than 50.
            operationId: SpotGetTickerTradingDayV3
            parameters:
                - description: 'Either `symbol` or `symbols` must be provided <br/><br/> Examples of accepted format for the `symbols` parameter: <br/> [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>or <br/>%5B%22BTCUSDT%22,%22BNBUSDT%22%5D <br/><br/> The maximum number of `symbols` allowed in a request is 100.'
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: 'Either `symbol` or `symbols` must be provided <br/><br/> Examples of accepted format for the `symbols` parameter: <br/> [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>or <br/>%5B%22BTCUSDT%22,%22BNBUSDT%22%5D <br/><br/> The maximum number of `symbols` allowed in a request is 100.'
                  in: query
                  name: symbols
                  schema:
                    default: ""
                    type: string
                - description: 'Default: 0 (UTC)'
                  in: query
                  name: timeZone
                  schema:
                    default: 0
                    type: string
                - description: 'Supported values: `FULL` or `MINI`. <br/>If none provided, the default is `FULL`'
                  in: query
                  name: type
                  schema:
                    default: FULL
                    enum:
                        - FULL
                        - MINI
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - items:
                                        $ref: '#/components/schemas/SpotGetTickerTradingDayV3RespItem'
                                      type: array
                                    - $ref: '#/components/schemas/SpotGetTickerTradingDayV3RespItem'
                    description: Successful operation
            summary: Trading Day Ticker
            tags:
                - Market Data
                - V3
    /api/v3/time:
        get:
            description: Test connectivity to the Rest API and get the current server time.
            operationId: SpotGetTimeV3
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetTimeV3Resp'
                    description: Successful operation
            summary: Check server time
            tags:
                - General
                - V3
    /api/v3/trades:
        get:
            description: Get recent trades.
            operationId: SpotGetTradesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                example: '[  {    "id": 28457,    "price": "4.00000100",    "qty": "12.00000000",    "quoteQty": "48.000012",    "time": 1499865549590,    "isBuyerMaker": true,    "isBestMatch": true  }]'
                                items:
                                    $ref: '#/components/schemas/SpotGetTradesV3RespItem'
                                type: array
                    description: Successful operation
            summary: Recent trades list
            tags:
                - Market Data
                - V3
    /api/v3/uiKlines:
        get:
            description: |-
                The request is similar to klines having the same parameters and response.
                uiKlines return modified kline data, optimized for presentation of candlestick charts.
            operationId: SpotGetUiKlinesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: See <a href="/docs/binance-spot-api-docs/rest-api/market-data-endpoints#kline-intervals">`klines`</a>
                  in: query
                  name: interval
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default: 0 (UTC)'
                  in: query
                  name: timeZone
                  schema:
                    default: 0
                    type: string
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                items:
                                    $ref: '#/components/schemas/SpotGetUiKlinesV3RespItem'
                                type: array
                    description: Successful operation
            summary: UIKlines
            tags:
                - Market Data
                - V3
    /api/v3/userDataStream:
        delete:
            description: Close out a user data stream.
            operationId: SpotDeleteUserDataStreamV3
            parameters:
                - in: query
                  name: listenKey
                  required: true
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotDeleteUserDataStreamV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Close user data stream (USER_STREAM)
            tags:
                - User data stream
                - V3
        post:
            description: Start a new user data stream. The stream will close after 60 minutes unless a keepalive is sent.
            operationId: SpotCreateUserDataStreamV3
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateUserDataStreamV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Start user data stream (USER_STREAM)
            tags:
                - User data stream
                - V3
        put:
            description: Keepalive a user data stream to prevent a time out. User data streams will close after 60 minutes. It's recommended to send a ping about every 30 minutes.
            operationId: SpotUpdateUserDataStreamV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/SpotUpdateUserDataStreamV3Req'
                description: The request body for SpotUpdateUserDataStreamV3
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotUpdateUserDataStreamV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Keepalive user data stream (USER_STREAM)
            tags:
                - User data stream
                - V3
servers:
    - description: Binance Spot API Server
      url: https://api.binance.com
    - description: Binance Spot API Server
      url: https://api-gcp.binance.com
    - description: Binance Spot API Server
      url: https://api1.binance.com
    - description: Binance Spot API Server
      url: https://api2.binance.com
    - description: Binance Spot API Server
      url: https://api3.binance.com
    - description: Binance Spot API Server
      url: https://api4.binance.com

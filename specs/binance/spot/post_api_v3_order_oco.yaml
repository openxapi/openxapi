components:
    schemas:
        SpotCreateOrderOcoV3Resp:
            example: '{  "orderListId": 0,  "contingencyType": "OCO",  "listStatusType": "EXEC_STARTED",  "listOrderStatus": "EXECUTING",  "listClientOrderId": "JYVpp3F0f5CAG15DhtrqLp",  "transactionTime": 1563417480525,  "symbol": "LTCBTC",  "orders": [    {      "symbol": "LTCBTC",      "orderId": 2,      "clientOrderId": "Kk7sqHb9J6mJWTMDVW7Vos"    },    {      "symbol": "LTCBTC",      "orderId": 3,      "clientOrderId": "xTXKaGYd4bluPVp78IVRvl"    }  ],  "orderReports": [    {      "symbol": "LTCBTC",      "orderId": 2,      "orderListId": 0,      "clientOrderId": "Kk7sqHb9J6mJWTMDVW7Vos",      "transactTime": 1563417480525,      "price": "0.000000",      "origQty": "0.624363",      "executedQty": "0.000000",      "origQuoteOrderQty": "0.000000",      "cummulativeQuoteQty": "0.000000",      "status": "NEW",      "timeInForce": "GTC",      "type": "STOP_LOSS",      "side": "BUY",      "stopPrice": "0.960664",      "workingTime": -1,      "selfTradePreventionMode": "NONE"    },    {      "symbol": "LTCBTC",      "orderId": 3,      "orderListId": 0,      "clientOrderId": "xTXKaGYd4bluPVp78IVRvl",      "transactTime": 1563417480525,      "price": "0.036435",      "origQty": "0.624363",      "executedQty": "0.000000",      "origQuoteOrderQty": "0.000000",      "cummulativeQuoteQty": "0.000000",      "status": "NEW",      "timeInForce": "GTC",      "type": "LIMIT_MAKER",      "side": "BUY",      "workingTime": 1563417480525,      "selfTradePreventionMode": "NONE"    }  ]}'
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    type: number
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            orderId:
                                type: number
                            orderListId:
                                type: number
                            origQty:
                                type: string
                            origQuoteOrderQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            stopPrice:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                type: number
                            type:
                                type: string
                            workingTime:
                                type: number
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                type: number
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    type: number
            type: object
info:
    title: ""
    version: ""
openapi: ""
paths:
    /api/v3/order/oco:
        post:
            description: |-
                Send in a new OCO.
                - Price Restrictions:

                SELL: Limit Price > Last Price > Stop Price
                BUY: Limit Price < Last Price < Stop Price
                - Quantity Restrictions:

                Both legs must have the same quantity.
                ICEBERG quantities however do not have to be the same
                - OCO adds 2 orders to the unfilled order count, EXCHANGE_MAX_ORDERS filter and the MAX_NUM_ORDERS filter.
            operationId: SpotCreateOrderOcoV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: A unique Id for the entire orderList
                  in: query
                  name: listClientOrderId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: side
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: quantity
                  required: true
                  schema:
                    type: number
                - description: A unique Id for the limit order
                  in: query
                  name: limitClientOrderId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: price
                  required: true
                  schema:
                    type: number
                - in: query
                  name: limitStrategyId
                  schema:
                    type: integer
                - description: The value cannot be less than `1000000`.
                  in: query
                  name: limitStrategyType
                  schema:
                    type: integer
                - description: Used to make the `LIMIT_MAKER` leg an iceberg order.
                  in: query
                  name: limitIcebergQty
                  schema:
                    type: number
                - in: query
                  name: trailingDelta
                  schema:
                    type: integer
                - description: A unique Id for the stop loss/stop loss limit leg
                  in: query
                  name: stopClientOrderId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: stopPrice
                  required: true
                  schema:
                    type: number
                - in: query
                  name: stopStrategyId
                  schema:
                    type: integer
                - description: The value cannot be less than `1000000`.
                  in: query
                  name: stopStrategyType
                  schema:
                    type: integer
                - description: If provided, `stopLimitTimeInForce` is required.
                  in: query
                  name: stopLimitPrice
                  schema:
                    type: number
                - description: Used with `STOP_LOSS_LIMIT` leg to make an iceberg order.
                  in: query
                  name: stopIcebergQty
                  schema:
                    type: number
                - description: Valid values are `GTC`/`FOK`/`IOC`
                  in: query
                  name: stopLimitTimeInForce
                  schema:
                    default: ""
                    type: string
                - description: Set the response JSON.
                  in: query
                  name: newOrderRespType
                  schema:
                    default: ""
                    type: string
                - description: 'The allowed enums is dependent on what is configured on the symbol. The possible supported values are: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#stpmodes">STP Modes</a>.'
                  in: query
                  name: selfTradePreventionMode
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    type: integer
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateOrderOcoV3Resp'
                    description: Successful operation
            summary: New OCO - Deprecated (TRADE)
            tags:
                - Trading
                - V3

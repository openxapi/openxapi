components:
    schemas:
        APIError:
            description: binance API error
            properties:
                code:
                    type: integer
                msg:
                    type: string
            type: object
        SpotCreateOrderListOtoV3Req:
            properties:
                listClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                pendingClientOrderId:
                    default: ""
                    type: string
                pendingIcebergQty:
                    default: ""
                    type: string
                pendingPrice:
                    default: ""
                    type: string
                pendingQuantity:
                    default: ""
                    type: string
                pendingSide:
                    default: ""
                    type: string
                pendingStopPrice:
                    default: ""
                    type: string
                pendingStrategyId:
                    format: int64
                    type: integer
                pendingStrategyType:
                    type: integer
                pendingTimeInForce:
                    default: ""
                    type: string
                pendingTrailingDelta:
                    default: ""
                    type: string
                pendingType:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                workingClientOrderId:
                    default: ""
                    type: string
                workingIcebergQty:
                    default: ""
                    type: string
                workingPrice:
                    default: ""
                    type: string
                workingQuantity:
                    default: ""
                    type: string
                workingSide:
                    default: ""
                    type: string
                workingStrategyId:
                    format: int64
                    type: integer
                workingStrategyType:
                    type: integer
                workingTimeInForce:
                    default: ""
                    type: string
                workingType:
                    default: ""
                    enum:
                        - LIMIT
                        - LIMIT_MAKER
                    type: string
            required:
                - symbol
                - workingType
                - workingSide
                - workingPrice
                - workingQuantity
                - pendingType
                - pendingSide
                - pendingQuantity
                - timestamp
            type: object
        SpotCreateOrderListOtoV3Resp:
            example: '{ "orderListId": 0, "contingencyType": "OTO", "listStatusType": "EXEC_STARTED", "listOrderStatus": "EXECUTING", "listClientOrderId": "yl2ERtcar1o25zcWtqVBTC", "transactionTime": 1712289389158, "symbol": "ABCDEF", "orders": [ { "symbol": "LTCBTC", "orderId": 4, "clientOrderId": "Bq17mn9fP6vyCn75Jw1xya" }, { "symbol": "LTCBTC", "orderId": 5, "clientOrderId": "arLFo0zGJVDE69cvGBaU0d" } ], "orderReports": [ { "symbol": "LTCBTC", "orderId": 4, "orderListId": 0, "clientOrderId": "Bq17mn9fP6vyCn75Jw1xya", "transactTime": 1712289389158, "price": "1.00000000", "origQty": "1.00000000", "executedQty": "0.00000000", "origQuoteOrderQty": "0.000000", "cummulativeQuoteQty": "0.00000000", "status": "NEW", "timeInForce": "GTC", "type": "LIMIT", "side": "SELL", "workingTime": 1712289389158, "selfTradePreventionMode": "NONE" }, { "symbol": "LTCBTC", "orderId": 5, "orderListId": 0, "clientOrderId": "arLFo0zGJVDE69cvGBaU0d", "transactTime": 1712289389158, "price": "0.00000000", "origQty": "5.00000000", "executedQty": "0.00000000", "origQuoteOrderQty": "0.000000", "cummulativeQuoteQty": "0.00000000", "status": "PENDING_NEW", "timeInForce": "GTC", "type": "MARKET", "side": "BUY", "workingTime": -1, "selfTradePreventionMode": "NONE" } ] }'
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            orderListId:
                                format: int64
                                type: integer
                            origQty:
                                type: string
                            origQuoteOrderQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                format: int64
                                type: integer
                            type:
                                type: string
                            workingTime:
                                format: int64
                                type: integer
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
    securitySchemes:
        ApiKey:
            in: header
            name: X-MBX-APIKEY
            type: apiKey
info:
    title: ""
    version: ""
openapi: ""
paths:
    /api/v3/orderList/oto:
        post:
            description: |-
                Places an OTO.
                - An OTO (One-Triggers-the-Other) is an order list comprised of 2 orders.
                - The first order is called the working order and must be LIMIT or LIMIT_MAKER. Initially, only the working order goes on the order book.
                - The second order is called the pending order. It can be any order type except for MARKET orders using parameter quoteOrderQty. The pending order is only placed on the order book when the working order gets fully filled.
                - If either the working order or the pending order is cancelled individually, the other order in the order list will also be canceled or expired.
                - When the order list is placed, if the working order gets immediately fully filled, the placement response will show the working order as FILLED but the pending order will still appear as PENDING_NEW. You need to query the status of the pending order again to see its updated status.
                - OTOs add 2 orders to the unfilled order count, EXCHANGE_MAX_NUM_ORDERS filter and MAX_NUM_ORDERS filter.
            operationId: SpotCreateOrderListOtoV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/SpotCreateOrderListOtoV3Req'
                description: The request body for SpotCreateOrderListOtoV3
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateOrderListOtoV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: New Order list - OTO (TRADE)
            tags:
                - Trading
                - V3

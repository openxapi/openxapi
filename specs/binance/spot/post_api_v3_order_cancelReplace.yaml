components: {}
info:
    title: ""
    version: ""
openapi: ""
paths:
    /api/v3/order/cancelReplace:
        post:
            description: |-
                Cancels an existing order and places a new order on the same symbol.
                Filters and Order Count are evaluated before the processing of the cancellation and order placement occurs.
                A new order that was not attempted (i.e. when newOrderResult: NOT_ATTEMPTED ), will still increase the order count by 1.
            operationId: SpotCreateOrderCancelReplaceV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: side
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: type
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: 'The allowed values are: <br/> `STOP_ON_FAILURE` - If the cancel request fails, the new order placement will not be attempted. <br/> `ALLOW_FAILURE` - new order placement will be attempted even if cancel request fails.'
                  in: query
                  name: cancelReplaceMode
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: timeInForce
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: quantity
                  schema:
                    type: number
                - in: query
                  name: quoteOrderQty
                  schema:
                    type: number
                - in: query
                  name: price
                  schema:
                    type: number
                - description: Used to uniquely identify this cancel. Automatically generated by default.
                  in: query
                  name: cancelNewClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: Either the `cancelOrigClientOrderId` or `cancelOrderId` must be provided. If both are provided, `cancelOrderId` takes precedence.
                  in: query
                  name: cancelOrigClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: Either the `cancelOrigClientOrderId` or `cancelOrderId` must be provided. If both are provided, `cancelOrderId` takes precedence.
                  in: query
                  name: cancelOrderId
                  schema:
                    type: integer
                - description: Used to identify the new order.
                  in: query
                  name: newClientOrderId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: strategyId
                  schema:
                    type: integer
                - description: The value cannot be less than `1000000`.
                  in: query
                  name: strategyType
                  schema:
                    type: integer
                - in: query
                  name: stopPrice
                  schema:
                    type: number
                - in: query
                  name: trailingDelta
                  schema:
                    type: integer
                - in: query
                  name: icebergQty
                  schema:
                    type: number
                - description: 'Allowed values: <br/> `ACK`, `RESULT`, `FULL` <br/> `MARKET` and `LIMIT` orders types default to `FULL`; all other orders default to `ACK`'
                  in: query
                  name: newOrderRespType
                  schema:
                    default: ""
                    type: string
                - description: 'The allowed enums is dependent on what is configured on the symbol. The possible supported values are: <a href="/docs/binance-spot-api-docs/rest-api/enums.md#stpmodes">STP Modes</a>.'
                  in: query
                  name: selfTradePreventionMode
                  schema:
                    default: ""
                    type: string
                - description: 'Supported values: <br/>`ONLY_NEW` - Cancel will succeed if the order status is `NEW`.<br/> `ONLY_PARTIALLY_FILLED ` - Cancel will succeed if order status is `PARTIALLY_FILLED`. For more information please refer to <a href="/docs/binance-spot-api-docs/rest-api/trading-endpoints#regarding-cancelrestrictions">Regarding `cancelRestrictions`</a>'
                  in: query
                  name: cancelRestrictions
                  schema:
                    default: ""
                    type: string
                - description: 'Supported values: <br/> `DO_NOTHING` (default)- will only attempt to cancel the order if account has not exceeded the unfilled order rate limit<br/> `CANCEL_ONLY` - will always cancel the order'
                  in: query
                  name: orderRateLimitExceededMode
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    type: integer
            responses: {}
            summary: Cancel an Existing Order and Send a New Order (TRADE)
            tags:
                - Trading endpoints
                - V3 APIs

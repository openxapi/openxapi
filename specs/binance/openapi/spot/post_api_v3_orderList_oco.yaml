components:
    schemas:
        APIError:
            description: binance API error
            properties:
                code:
                    type: integer
                msg:
                    type: string
            type: object
        CreateOrderListOcoV3Req:
            properties:
                aboveClientOrderId:
                    default: ""
                    type: string
                aboveIcebergQty:
                    format: int64
                    type: integer
                abovePrice:
                    default: ""
                    type: string
                aboveStopPrice:
                    default: ""
                    type: string
                aboveStrategyId:
                    format: int64
                    type: integer
                aboveStrategyType:
                    type: integer
                aboveTimeInForce:
                    default: ""
                    type: string
                aboveTrailingDelta:
                    format: int64
                    type: integer
                aboveType:
                    default: ""
                    enum:
                        - STOP_LOSS_LIMIT
                        - STOP_LOSS
                        - LIMIT_MAKER
                        - TAKE_PROFIT
                        - TAKE_PROFIT_LIMIT
                    type: string
                belowClientOrderId:
                    default: ""
                    type: string
                belowIcebergQty:
                    format: int64
                    type: integer
                belowPrice:
                    default: ""
                    type: string
                belowStopPrice:
                    default: ""
                    type: string
                belowStrategyId:
                    format: int64
                    type: integer
                belowStrategyType:
                    type: integer
                belowTimeInForce:
                    default: ""
                    type: string
                belowTrailingDelta:
                    format: int64
                    type: integer
                belowType:
                    default: ""
                    enum:
                        - STOP_LOSS
                        - STOP_LOSS_LIMIT
                        - TAKE_PROFIT
                        - TAKE_PROFIT_LIMIT
                    type: string
                listClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    enum:
                        - ACK
                        - RESULT
                        - FULL
                    type: string
                quantity:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - symbol
                - side
                - quantity
                - aboveType
                - belowType
                - timestamp
            type: object
        CreateOrderListOcoV3Resp:
            example: '{ "orderListId": 1, "contingencyType": "OCO", "listStatusType": "EXEC_STARTED", "listOrderStatus": "EXECUTING", "listClientOrderId": "lH1YDkuQKWiXVXHPSKYEIp", "transactionTime": 1710485608839, "symbol": "LTCBTC", "orders": [ { "symbol": "LTCBTC", "orderId": 10, "clientOrderId": "44nZvqpemY7sVYgPYbvPih" }, { "symbol": "LTCBTC", "orderId": 11, "clientOrderId": "NuMp0nVYnciDiFmVqfpBqK" } ], "orderReports": [ { "symbol": "LTCBTC", "orderId": 10, "orderListId": 1, "clientOrderId": "44nZvqpemY7sVYgPYbvPih", "transactTime": 1710485608839, "price": "1.00000000", "origQty": "5.00000000", "executedQty": "0.00000000", "origQuoteOrderQty": "0.000000", "cummulativeQuoteQty": "0.00000000", "status": "NEW", "timeInForce": "GTC", "type": "STOP_LOSS_LIMIT", "side": "SELL", "stopPrice": "1.00000000", "workingTime": -1, "icebergQty": "1.00000000", "selfTradePreventionMode": "NONE" }, { "symbol": "LTCBTC", "orderId": 11, "orderListId": 1, "clientOrderId": "NuMp0nVYnciDiFmVqfpBqK", "transactTime": 1710485608839, "price": "3.00000000", "origQty": "5.00000000", "executedQty": "0.00000000", "origQuoteOrderQty": "0.000000", "cummulativeQuoteQty": "0.00000000", "status": "NEW", "timeInForce": "GTC", "type": "LIMIT_MAKER", "side": "SELL", "workingTime": 1710485608839, "selfTradePreventionMode": "NONE" } ] }'
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            icebergQty:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            orderListId:
                                format: int64
                                type: integer
                            origQty:
                                type: string
                            origQuoteOrderQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            stopPrice:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                format: int64
                                type: integer
                            type:
                                type: string
                            workingTime:
                                format: int64
                                type: integer
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
    securitySchemes:
        ApiKey:
            in: header
            name: X-MBX-APIKEY
            type: apiKey
info:
    title: ""
    version: ""
openapi: ""
paths:
    /api/v3/orderList/oco:
        post:
            description: |-
                Send in an one-cancels-the-other (OCO) pair, where activation of one order immediately cancels the other.
                - An OCO has 2 orders called the above order and below order.
                - One of the orders must be a LIMIT_MAKER/TAKE_PROFIT/TAKE_PROFIT_LIMIT order and the other must be STOP_LOSS or STOP_LOSS_LIMIT order.
                - Price restrictions

                If the OCO is on the SELL side:

                LIMIT_MAKER/TAKE_PROFIT_LIMIT price > Last Traded Price >  STOP_LOSS/STOP_LOSS_LIMIT stopPrice
                TAKE_PROFIT stopPrice > Last Traded Price > STOP_LOSS/STOP_LOSS_LIMIT stopPrice


                If the OCO is on the BUY side:

                LIMIT_MAKER/TAKE_PROFIT_LIMIT price < Last Traded Price < stopPrice
                TAKE_PROFIT stopPrice < Last Traded Price < STOP_LOSS/STOP_LOSS_LIMIT stopPrice
                - OCOs add 2 orders to the unfilled order count, EXCHANGE_MAX_ORDERS filter, and the MAX_NUM_ORDERS filter.
            operationId: CreateOrderListOcoV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateOrderListOcoV3Req'
                description: The request body for CreateOrderListOcoV3
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateOrderListOcoV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: New Order list - OCO (TRADE)
            tags:
                - Spot Trading

components:
    schemas:
        APIError:
            description: binance API error
            properties:
                code:
                    type: integer
                msg:
                    type: string
            type: object
        CreateAccountDisableFastWithdrawSwitchV1Req:
            properties:
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - timestamp
            type: object
        CreateAccountDisableFastWithdrawSwitchV1Resp:
            example: '{}'
            type: object
        CreateAccountEnableFastWithdrawSwitchV1Req:
            properties:
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - timestamp
            type: object
        CreateAccountEnableFastWithdrawSwitchV1Resp:
            example: '{}'
            type: object
        CreateAlgoFuturesNewOrderTwapV1Req:
            properties:
                clientAlgoId:
                    default: ""
                    type: string
                duration:
                    format: int64
                    type: integer
                limitPrice:
                    default: ""
                    type: string
                positionSide:
                    default: ""
                    type: string
                quantity:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                reduceOnly:
                    type: boolean
                side:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - symbol
                - side
                - quantity
                - duration
                - timestamp
            type: object
        CreateAlgoFuturesNewOrderTwapV1Resp:
            example: '{ "clientAlgoId": "65ce1630101a480b85915d7e11fd5078", "success": true, "code": 0, "msg": "OK" }'
            properties:
                clientAlgoId:
                    type: string
                code:
                    type: integer
                msg:
                    type: string
                success:
                    type: boolean
            type: object
        CreateAlgoFuturesNewOrderVpV1Req:
            properties:
                clientAlgoId:
                    default: ""
                    type: string
                limitPrice:
                    default: ""
                    type: string
                positionSide:
                    default: ""
                    type: string
                quantity:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                reduceOnly:
                    type: boolean
                side:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                urgency:
                    default: ""
                    type: string
            required:
                - symbol
                - side
                - quantity
                - urgency
                - timestamp
            type: object
        CreateAlgoFuturesNewOrderVpV1Resp:
            example: '{ "clientAlgoId": "00358ce6a268403398bd34eaa36dffe7", "success": true, "code": 0, "msg": "OK" }'
            properties:
                clientAlgoId:
                    type: string
                code:
                    type: integer
                msg:
                    type: string
                success:
                    type: boolean
            type: object
        CreateAlgoSpotNewOrderTwapV1Req:
            properties:
                clientAlgoId:
                    default: ""
                    type: string
                duration:
                    format: int64
                    type: integer
                limitPrice:
                    default: ""
                    type: string
                quantity:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - symbol
                - side
                - quantity
                - duration
                - timestamp
            type: object
        CreateAlgoSpotNewOrderTwapV1Resp:
            example: '{ "clientAlgoId": "65ce1630101a480b85915d7e11fd5078", "success": true, "code": 0, "msg": "OK" }'
            properties:
                clientAlgoId:
                    type: string
                code:
                    type: integer
                msg:
                    type: string
                success:
                    type: boolean
            type: object
        CreateApiReferralCustomizationV1Req:
            properties:
                customerId:
                    default: ""
                    type: string
                email:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - customerId
                - email
                - timestamp
            type: object
        CreateApiReferralCustomizationV1Resp:
            example: '{ "customerId": "abc123", "email": "test12345@126.com" }'
            properties:
                customerId:
                    type: string
                email:
                    type: string
            type: object
        CreateApiReferralUserCustomizationV1Req:
            properties:
                apiAgentCode:
                    default: ""
                    type: string
                customerId:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - customerId
                - apiAgentCode
                - timestamp
            type: object
        CreateApiReferralUserCustomizationV1Resp:
            example: '{ "customerId": "abc123" }'
            properties:
                customerId:
                    type: string
            type: object
        CreateAssetDustBtcV1Req:
            properties:
                accountType:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - timestamp
            type: object
        CreateAssetDustBtcV1Resp:
            example: '{ "details": [ { "asset": "ADA", "assetFullName": "ADA", "amountFree": "6.21",    "toBTC": "0.00016848",   "toBNB": "0.01777302",   "toBNBOffExchange": "0.01741756",  "exchange": "0.00035546"  } ], "totalTransferBtc": "0.00016848", "totalTransferBNB": "0.01777302", "dribbletPercentage": "0.02"      }'
            properties:
                details:
                    items:
                        properties:
                            amountFree:
                                type: string
                            asset:
                                type: string
                            assetFullName:
                                type: string
                            exchange:
                                type: string
                            toBNB:
                                type: string
                            toBNBOffExchange:
                                type: string
                            toBTC:
                                type: string
                        type: object
                    type: array
                dribbletPercentage:
                    type: string
                totalTransferBNB:
                    type: string
                totalTransferBtc:
                    type: string
            type: object
        CreateAssetDustV1Req:
            properties:
                accountType:
                    default: ""
                    type: string
                asset:
                    items:
                        type: string
                    type: array
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - asset
                - timestamp
            type: object
        CreateAssetDustV1Resp:
            example: '{ "totalServiceCharge":"0.02102542", "totalTransfered":"1.05127099", "transferResult":[ { "amount":"0.03000000", "fromAsset":"ETH", "operateTime":1563368549307, "serviceChargeAmount":"0.00500000", "tranId":2970932918, "transferedAmount":"0.25000000" }, { "amount":"0.09000000", "fromAsset":"LTC", "operateTime":1563368549404, "serviceChargeAmount":"0.01548000", "tranId":2970932918, "transferedAmount":"0.77400000" }, { "amount":"248.61878453", "fromAsset":"TRX", "operateTime":1563368549489, "serviceChargeAmount":"0.00054542", "tranId":2970932918, "transferedAmount":"0.02727099" } ] }'
            properties:
                totalServiceCharge:
                    type: string
                totalTransfered:
                    type: string
                transferResult:
                    items:
                        properties:
                            amount:
                                type: string
                            fromAsset:
                                type: string
                            operateTime:
                                format: int64
                                type: integer
                            serviceChargeAmount:
                                type: string
                            tranId:
                                format: int64
                                type: integer
                            transferedAmount:
                                type: string
                        type: object
                    type: array
            type: object
        CreateAssetGetFundingAssetV1Req:
            properties:
                asset:
                    default: ""
                    type: string
                needBtcValuation:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - timestamp
            type: object
        CreateAssetGetFundingAssetV1Resp:
            example: '[ { "asset": "USDT", "free": "1",     "locked": "0",   "freeze": "0",   "withdrawing": "0", "btcValuation": "0.00000091" } ]'
            items:
                $ref: '#/components/schemas/CreateAssetGetFundingAssetV1RespItem'
            type: array
        CreateAssetGetFundingAssetV1RespItem:
            properties:
                asset:
                    type: string
                btcValuation:
                    type: string
                free:
                    type: string
                freeze:
                    type: string
                locked:
                    type: string
                withdrawing:
                    type: string
            type: object
        CreateAssetGetUserAssetV3Req:
            properties:
                asset:
                    default: ""
                    type: string
                needBtcValuation:
                    type: boolean
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - timestamp
            type: object
        CreateAssetGetUserAssetV3Resp:
            example: '[ { "asset": "AVAX", "free": "1", "locked": "0", "freeze": "0", "withdrawing": "0", "ipoable": "0", "btcValuation": "0" }, { "asset": "BCH", "free": "0.9", "locked": "0", "freeze": "0", "withdrawing": "0", "ipoable": "0", "btcValuation": "0" }, { "asset": "BNB", "free": "887.47061626", "locked": "0", "freeze": "10.52", "withdrawing": "0.1", "ipoable": "0", "btcValuation": "0" }, { "asset": "BUSD", "free": "9999.7", "locked": "0", "freeze": "0", "withdrawing": "0", "ipoable": "0", "btcValuation": "0" }, { "asset": "SHIB", "free": "532.32", "locked": "0", "freeze": "0", "withdrawing": "0", "ipoable": "0", "btcValuation": "0" }, { "asset": "USDT", "free": "50300000001.44911105", "locked": "0", "freeze": "0", "withdrawing": "0", "ipoable": "0", "btcValuation": "0" }, { "asset": "WRZ", "free": "1", "locked": "0", "freeze": "0", "withdrawing": "0", "ipoable": "0", "btcValuation": "0" } ]'
            items:
                $ref: '#/components/schemas/CreateAssetGetUserAssetV3RespItem'
            type: array
        CreateAssetGetUserAssetV3RespItem:
            properties:
                asset:
                    type: string
                btcValuation:
                    type: string
                free:
                    type: string
                freeze:
                    type: string
                ipoable:
                    type: string
                locked:
                    type: string
                withdrawing:
                    type: string
            type: object
        CreateAssetTransferV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                asset:
                    default: ""
                    type: string
                fromSymbol:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                toSymbol:
                    default: ""
                    type: string
                type:
                    default: ""
                    type: string
            required:
                - type
                - asset
                - amount
                - timestamp
            type: object
        CreateAssetTransferV1Resp:
            example: '{ "tranId":13526853623 }'
            properties:
                tranId:
                    format: int64
                    type: integer
            type: object
        CreateBnbBurnV1Req:
            properties:
                interestBNBBurn:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                spotBNBBurn:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - timestamp
            type: object
        CreateBnbBurnV1Resp:
            example: '{ "spotBNBBurn":true, "interestBNBBurn": false }'
            properties:
                interestBNBBurn:
                    type: boolean
                spotBNBBurn:
                    type: boolean
            type: object
        CreateBrokerSubAccountApiCommissionCoinFuturesV1Req:
            properties:
                makerAdjustment:
                    type: integer
                pair:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                subAccountId:
                    default: ""
                    type: string
                takerAdjustment:
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - subAccountId
                - pair
                - makerAdjustment
                - takerAdjustment
                - timestamp
            type: object
        CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp:
            example: '{ "subAccountId": 1, "pair": "BTCUSD", "makerAdjustment": 150,  "takerAdjustment": 150,  "makerCommission": 450,  "takerCommission": 550  }'
            properties:
                makerAdjustment:
                    type: integer
                makerCommission:
                    type: integer
                pair:
                    type: string
                subAccountId:
                    format: int64
                    type: integer
                takerAdjustment:
                    type: integer
                takerCommission:
                    type: integer
            type: object
        CreateBrokerSubAccountApiCommissionFuturesV1Req:
            properties:
                makerAdjustment:
                    type: integer
                recvWindow:
                    format: int64
                    type: integer
                subAccountId:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
                takerAdjustment:
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - subAccountId
                - symbol
                - makerAdjustment
                - takerAdjustment
                - timestamp
            type: object
        CreateBrokerSubAccountApiCommissionFuturesV1Resp:
            example: '{ "subAccountId": 1, "symbol": "BTCUSDT", "makerAdjustment": 150,  "takerAdjustment": 150,  "makerCommission": 450,  "takerCommission": 550  }'
            properties:
                makerAdjustment:
                    type: integer
                makerCommission:
                    type: integer
                subAccountId:
                    format: int64
                    type: integer
                symbol:
                    type: string
                takerAdjustment:
                    type: integer
                takerCommission:
                    type: integer
            type: object
        CreateBrokerSubAccountApiCommissionV1Req:
            properties:
                makerCommission:
                    type: number
                marginMakerCommission:
                    type: number
                marginTakerCommission:
                    type: number
                recvWindow:
                    format: int64
                    type: integer
                subAccountId:
                    default: ""
                    type: string
                takerCommission:
                    type: number
                timestamp:
                    format: int64
                    type: integer
            required:
                - subAccountId
                - makerCommission
                - takerCommission
                - timestamp
            type: object
        CreateBrokerSubAccountApiCommissionV1Resp:
            example: '{ "subAccountId": "1", "makerCommission": 0.001, "takerCommission": 0.002, "marginMakerCommission": 0.001, "marginTakerCommission": 0.002 }'
            properties:
                makerCommission:
                    type: number
                marginMakerCommission:
                    type: number
                marginTakerCommission:
                    type: number
                subAccountId:
                    type: string
                takerCommission:
                    type: number
            type: object
        CreateBrokerSubAccountApiIpRestrictionV2Req:
            properties:
                ipAddress:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                status:
                    default: ""
                    type: string
                subAccountApiKey:
                    default: ""
                    type: string
                subAccountId:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - subAccountId
                - subAccountApiKey
                - status
                - timestamp
            type: object
        CreateBrokerSubAccountApiIpRestrictionV2Resp:
            example: '{ "status": "2", "ipList": [ "69.210.67.14", "8.34.21.10"   ], "updateTime": 1636371437000, "apiKey": "k5V49ldtn4tszj6W3hystegdfvmGbqDzjmkCtpTvC0G74WhK7yd4rfCTo4lShf" }'
            properties:
                apiKey:
                    type: string
                ipList:
                    items:
                        type: string
                    type: array
                status:
                    type: string
                updateTime:
                    format: int64
                    type: integer
            type: object
        CreateBrokerSubAccountApiPermissionUniversalTransferV1Req:
            properties:
                canUniversalTransfer:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                subAccountApiKey:
                    default: ""
                    type: string
                subAccountId:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - subAccountId
                - subAccountApiKey
                - canUniversalTransfer
                - timestamp
            type: object
        CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp:
            example: '{ "subaccountId": "1", "apikey": "vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A", "canUniversalTransfer":true }'
            properties:
                apikey:
                    type: string
                canUniversalTransfer:
                    type: boolean
                subaccountId:
                    type: string
            type: object
        CreateBrokerSubAccountApiPermissionV1Req:
            properties:
                canTrade:
                    default: ""
                    type: string
                futuresTrade:
                    default: ""
                    type: string
                marginTrade:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                subAccountApiKey:
                    default: ""
                    type: string
                subAccountId:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - subAccountId
                - subAccountApiKey
                - canTrade
                - marginTrade
                - futuresTrade
                - timestamp
            type: object
        CreateBrokerSubAccountApiPermissionV1Resp:
            example: '{ "subaccountId": "1", "apikey":"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A", "canTrade": true, "marginTrade": true, "futuresTrade": true }'
            properties:
                apikey:
                    type: string
                canTrade:
                    type: boolean
                futuresTrade:
                    type: boolean
                marginTrade:
                    type: boolean
                subaccountId:
                    type: string
            type: object
        CreateBrokerSubAccountApiV1Req:
            properties:
                canTrade:
                    default: ""
                    type: string
                futuresTrade:
                    default: ""
                    type: string
                marginTrade:
                    default: ""
                    type: string
                publicKey:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                subAccountId:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - subAccountId
                - canTrade
                - timestamp
            type: object
        CreateBrokerSubAccountApiV1Resp:
            example: '{ "subaccountId": "1", "apiKey":"vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A", "secretKey":"NhqPtmdSJYdKjVHjA7PZj4Mge3R5YNiP1e3UZjInClVN65XAbvqqM6A7H5fATj0", "canTrade": true, "marginTrade": false, "futuresTrade": false }'
            properties:
                apiKey:
                    type: string
                canTrade:
                    type: boolean
                futuresTrade:
                    type: boolean
                marginTrade:
                    type: boolean
                secretKey:
                    type: string
                subaccountId:
                    type: string
            type: object
        CreateBrokerSubAccountBnbBurnMarginInterestV1Req:
            properties:
                interestBNBBurn:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                subAccountId:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - subAccountId
                - interestBNBBurn
                - timestamp
            type: object
        CreateBrokerSubAccountBnbBurnMarginInterestV1Resp:
            example: '{ "subAccountId":1, "interestBNBBurn":true }'
            properties:
                interestBNBBurn:
                    type: boolean
                subAccountId:
                    format: int64
                    type: integer
            type: object
        CreateBrokerSubAccountBnbBurnSpotV1Req:
            properties:
                recvWindow:
                    format: int64
                    type: integer
                spotBNBBurn:
                    default: ""
                    type: string
                subAccountId:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - subAccountId
                - spotBNBBurn
                - timestamp
            type: object
        CreateBrokerSubAccountBnbBurnSpotV1Resp:
            example: '{ "subAccountId":1, "spotBNBBurn":true }'
            properties:
                spotBNBBurn:
                    type: boolean
                subAccountId:
                    format: int64
                    type: integer
            type: object
        CreateBrokerSubAccountFuturesV1Req:
            properties:
                futures:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                subAccountId:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - subAccountId
                - futures
                - timestamp
            type: object
        CreateBrokerSubAccountFuturesV1Resp:
            example: '{ "subaccountId": "1", "enableFutures": true, "updateTime":1570801523523 }'
            properties:
                enableFutures:
                    type: boolean
                subaccountId:
                    type: string
                updateTime:
                    format: int64
                    type: integer
            type: object
        CreateBrokerSubAccountV1Req:
            properties:
                recvWindow:
                    format: int64
                    type: integer
                tag:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - timestamp
            type: object
        CreateBrokerSubAccountV1Resp:
            example: '{ "subaccountId": "1", "email": "vai_42038996_47411276_brokersubuser@lac.info", "tag":"bob123d" }'
            properties:
                email:
                    type: string
                subaccountId:
                    type: string
                tag:
                    type: string
            type: object
        CreateBrokerTransferFuturesV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                asset:
                    default: ""
                    type: string
                clientTranId:
                    default: ""
                    type: string
                fromId:
                    default: ""
                    type: string
                futuresType:
                    format: int64
                    type: integer
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                toId:
                    default: ""
                    type: string
            required:
                - futuresType
                - asset
                - amount
                - timestamp
            type: object
        CreateBrokerTransferFuturesV1Resp:
            example: '{ "success":true, "txnId":"2966662589", "clientTranId":"a123" }'
            properties:
                clientTranId:
                    type: string
                success:
                    type: boolean
                txnId:
                    type: string
            type: object
        CreateBrokerTransferV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                asset:
                    default: ""
                    type: string
                clientTranId:
                    default: ""
                    type: string
                fromId:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                toId:
                    default: ""
                    type: string
            required:
                - asset
                - amount
                - timestamp
            type: object
        CreateBrokerTransferV1Resp:
            example: '{ "txnId":"2966662589", "clientTranId":"abc" }'
            properties:
                clientTranId:
                    type: string
                txnId:
                    type: string
            type: object
        CreateBrokerUniversalTransferV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                asset:
                    default: ""
                    type: string
                clientTranId:
                    default: ""
                    type: string
                fromAccountType:
                    default: ""
                    type: string
                fromId:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                toAccountType:
                    default: ""
                    type: string
                toId:
                    default: ""
                    type: string
            required:
                - fromAccountType
                - toAccountType
                - asset
                - amount
                - timestamp
            type: object
        CreateBrokerUniversalTransferV1Resp:
            example: '{ "txnId":12831061179, "clientTranId":"abc" }'
            properties:
                clientTranId:
                    type: string
                txnId:
                    format: int64
                    type: integer
            type: object
        CreateCapitalDepositCreditApplyV1Req:
            properties:
                depositId:
                    format: int64
                    type: integer
                subAccountId:
                    format: int64
                    type: integer
                subUserId:
                    format: int64
                    type: integer
                txId:
                    default: ""
                    type: string
            type: object
        CreateCapitalDepositCreditApplyV1Resp:
            example: '{ "code": "000000", "message": "success", "data":true, "success": true }'
            properties:
                code:
                    type: string
                data:
                    type: boolean
                message:
                    type: string
                success:
                    type: boolean
            type: object
        CreateCapitalWithdrawApplyV1Req:
            properties:
                address:
                    default: ""
                    type: string
                addressTag:
                    default: ""
                    type: string
                amount:
                    default: ""
                    type: string
                coin:
                    default: ""
                    type: string
                name:
                    default: ""
                    type: string
                network:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                transactionFeeFlag:
                    default: false
                    type: boolean
                walletType:
                    type: integer
                withdrawOrderId:
                    default: ""
                    type: string
            required:
                - coin
                - address
                - amount
                - timestamp
            type: object
        CreateCapitalWithdrawApplyV1Resp:
            example: '{ "id":"7213fea8e94b4a5593d507237e5a555b" }'
            properties:
                id:
                    type: string
            type: object
        CreateConvertAcceptQuoteV1Req:
            properties:
                quoteId:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - quoteId
                - timestamp
            type: object
        CreateConvertAcceptQuoteV1Resp:
            example: '{ "orderId":"933256278426274426", "createTime":1623381330472, "orderStatus":"PROCESS"  }'
            properties:
                createTime:
                    format: int64
                    type: integer
                orderId:
                    type: string
                orderStatus:
                    type: string
            type: object
        CreateConvertGetQuoteV1Req:
            properties:
                fromAmount:
                    default: ""
                    type: string
                fromAsset:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                toAmount:
                    default: ""
                    type: string
                toAsset:
                    default: ""
                    type: string
                validTime:
                    default: "10"
                    type: string
                walletType:
                    default: ""
                    type: string
            required:
                - fromAsset
                - toAsset
                - timestamp
            type: object
        CreateConvertGetQuoteV1Resp:
            example: '{ "quoteId":"12415572564", "ratio":"38163.7", "inverseRatio":"0.0000262", "validTimestamp":1623319461670, "toAmount":"3816.37", "fromAmount":"0.1" }'
            properties:
                fromAmount:
                    type: string
                inverseRatio:
                    type: string
                quoteId:
                    type: string
                ratio:
                    type: string
                toAmount:
                    type: string
                validTimestamp:
                    format: int64
                    type: integer
            type: object
        CreateConvertLimitCancelOrderV1Req:
            properties:
                orderId:
                    format: int64
                    type: integer
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - orderId
                - timestamp
            type: object
        CreateConvertLimitCancelOrderV1Resp:
            example: '{ "orderId": 1603680255057330400, "status": "CANCELED" }'
            properties:
                orderId:
                    format: int64
                    type: integer
                status:
                    type: string
            type: object
        CreateConvertLimitPlaceOrderV1Req:
            properties:
                baseAmount:
                    default: ""
                    type: string
                baseAsset:
                    default: ""
                    type: string
                expiredType:
                    default: ""
                    type: string
                limitPrice:
                    default: ""
                    type: string
                quoteAmount:
                    default: ""
                    type: string
                quoteAsset:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                side:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                walletType:
                    default: ""
                    type: string
            required:
                - baseAsset
                - quoteAsset
                - limitPrice
                - side
                - expiredType
                - timestamp
            type: object
        CreateConvertLimitPlaceOrderV1Resp:
            example: '{ "quoteId":"12415572564", "ratio":"38163.7", "inverseRatio":"0.0000262", "validTimestamp":1623319461670, "toAmount":"3816.37", "fromAmount":"0.1" }'
            properties:
                fromAmount:
                    type: string
                inverseRatio:
                    type: string
                quoteId:
                    type: string
                ratio:
                    type: string
                toAmount:
                    type: string
                validTimestamp:
                    format: int64
                    type: integer
            type: object
        CreateConvertLimitQueryOpenOrdersV1Req:
            properties:
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - timestamp
            type: object
        CreateConvertLimitQueryOpenOrdersV1Resp:
            example: '{ "list": [ { "quoteId": "18sdf87kh9df", "orderId": 1150901289839, "orderStatus": "SUCCESS", "fromAsset": "BNB", "fromAmount": "10", "toAsset": "USDT", "toAmount": "2317.89", "ratio": "231.789", "inverseRatio": "0.00431427", "createTime": 1614089498000, "expiredTimestamp": 1614099498000 } ] }'
            properties:
                list:
                    items:
                        properties:
                            createTime:
                                format: int64
                                type: integer
                            expiredTimestamp:
                                format: int64
                                type: integer
                            fromAmount:
                                type: string
                            fromAsset:
                                type: string
                            inverseRatio:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            orderStatus:
                                type: string
                            quoteId:
                                type: string
                            ratio:
                                type: string
                            toAmount:
                                type: string
                            toAsset:
                                type: string
                        type: object
                    type: array
            type: object
        CreateDciProductAuto_compoundEditStatusV1Req:
            properties:
                AutoCompoundPlan:
                    default: ""
                    type: string
                positionId:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - positionId
                - timestamp
            type: object
        CreateDciProductAuto_compoundEditStatusV1Resp:
            example: '{ "positionId":"123456789", "autoCompoundPlan":"ADVANCED"  }'
            properties:
                autoCompoundPlan:
                    type: string
                positionId:
                    type: string
            type: object
        CreateDciProductSubscribeV1Req:
            properties:
                autoCompoundPlan:
                    default: ""
                    type: string
                depositAmount:
                    default: ""
                    type: string
                id:
                    default: ""
                    type: string
                orderId:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - id
                - orderId
                - depositAmount
                - autoCompoundPlan
                - timestamp
            type: object
        CreateDciProductSubscribeV1Resp:
            example: '{ "positionId": 10208824, "investCoin": "BNB", "exercisedCoin": "USDT", "subscriptionAmount": "0.002", "duration": 4, "autoCompoundPlan": "STANDARD",  "strikePrice": "380", "settleDate": 1709020800000, "purchaseStatus": "PURCHASE_SUCCESS", "apr": "0.7397", "orderId": 8259117597, "purchaseTime": 1708677583874, "optionType": "CALL" }'
            properties:
                apr:
                    type: string
                autoCompoundPlan:
                    type: string
                duration:
                    type: integer
                exercisedCoin:
                    type: string
                investCoin:
                    type: string
                optionType:
                    type: string
                orderId:
                    format: int64
                    type: integer
                positionId:
                    format: int64
                    type: integer
                purchaseStatus:
                    type: string
                purchaseTime:
                    format: int64
                    type: integer
                settleDate:
                    type: integer
                strikePrice:
                    type: string
                subscriptionAmount:
                    type: string
            type: object
        CreateEthStakingEthRedeemV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                asset:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - amount
                - timestamp
            type: object
        CreateEthStakingEthRedeemV1Resp:
            example: '{ "success": true, "ethAmount":"0.23092091", "conversionRatio": "1.00121234", "arrivalTime": 1575018510000 }'
            properties:
                arrivalTime:
                    format: int64
                    type: integer
                conversionRatio:
                    type: string
                ethAmount:
                    type: string
                success:
                    type: boolean
            type: object
        CreateEthStakingEthStakeV2Req:
            properties:
                amount:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - amount
                - timestamp
            type: object
        CreateEthStakingEthStakeV2Resp:
            example: '{ "success": true, "wbethAmount":"0.23092091", "conversionRatio": "1.001212342342"   }'
            properties:
                conversionRatio:
                    type: string
                success:
                    type: boolean
                wbethAmount:
                    type: string
            type: object
        CreateEthStakingWbethWrapV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - amount
                - timestamp
            type: object
        CreateEthStakingWbethWrapV1Resp:
            example: '{ "success": true, "wbethAmount": "0.23092091", "exchangeRate": "1.001212343432" }'
            properties:
                exchangeRate:
                    type: string
                success:
                    type: boolean
                wbethAmount:
                    type: string
            type: object
        CreateLoanFlexibleAdjustLtvV2Req:
            properties:
                adjustmentAmount:
                    default: ""
                    type: string
                collateralCoin:
                    default: ""
                    type: string
                direction:
                    default: ""
                    type: string
                loanCoin:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - loanCoin
                - collateralCoin
                - adjustmentAmount
                - direction
                - timestamp
            type: object
        CreateLoanFlexibleAdjustLtvV2Resp:
            example: '{ "loanCoin": "BUSD", "collateralCoin": "BNB", "direction": "ADDITIONAL", "adjustmentAmount": "5.235", "currentLTV": "0.52", "status": "Succeeds"  }'
            properties:
                adjustmentAmount:
                    type: string
                collateralCoin:
                    type: string
                currentLTV:
                    type: string
                direction:
                    type: string
                loanCoin:
                    type: string
                status:
                    type: string
            type: object
        CreateLoanFlexibleBorrowV2Req:
            properties:
                collateralAmount:
                    default: ""
                    type: string
                collateralCoin:
                    default: ""
                    type: string
                loanAmount:
                    default: ""
                    type: string
                loanCoin:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - loanCoin
                - collateralCoin
                - timestamp
            type: object
        CreateLoanFlexibleBorrowV2Resp:
            example: '{ "loanCoin": "BUSD", "loanAmount": "100.5", "collateralCoin": "BNB", "collateralAmount": "50.5", "status": "Succeeds"  }'
            properties:
                collateralAmount:
                    type: string
                collateralCoin:
                    type: string
                loanAmount:
                    type: string
                loanCoin:
                    type: string
                status:
                    type: string
            type: object
        CreateLoanFlexibleRepayCollateralV2Resp:
            example: '{ "loanCoin":"BUSD", "collateralCoin":"BNB", "remainingDebt":"100.5", "remainingCollateral":"5.253", "fullRepayment":false, "currentLTV":"0.25", "repayStatus":"Repaid" }'
            properties:
                collateralCoin:
                    type: string
                currentLTV:
                    type: string
                fullRepayment:
                    type: boolean
                loanCoin:
                    type: string
                remainingCollateral:
                    type: string
                remainingDebt:
                    type: string
                repayStatus:
                    type: string
            type: object
        CreateLoanFlexibleRepayV2Req:
            properties:
                collateralCoin:
                    default: ""
                    type: string
                collateralReturn:
                    type: boolean
                fullRepayment:
                    type: boolean
                loanCoin:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                repayAmount:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - loanCoin
                - collateralCoin
                - repayAmount
                - timestamp
            type: object
        CreateLoanFlexibleRepayV2Resp:
            example: '{ "loanCoin": "BUSD", "collateralCoin": "BNB", "remainingDebt": "100.5", "remainingCollateral": "5.253", "fullRepayment": false, "currentLTV": "0.25", "repayStatus": "Repaid"  }'
            properties:
                collateralCoin:
                    type: string
                currentLTV:
                    type: string
                fullRepayment:
                    type: boolean
                loanCoin:
                    type: string
                remainingCollateral:
                    type: string
                remainingDebt:
                    type: string
                repayStatus:
                    type: string
            type: object
        CreateLoanVipBorrowV1Resp:
            example: '{ "loanAccountId": "12345678",  "requestId": "12345678", "loanCoin": "BTC", "isFlexibleRate": "No", "loanAmount": "100.55", "collateralAccountId": "12345678,12345678,12345678", "collateralCoin": "BUSD,USDT,ETH", "loanTerm": "30" }'
            properties:
                collateralAccountId:
                    type: string
                collateralCoin:
                    type: string
                isFlexibleRate:
                    type: string
                loanAccountId:
                    type: string
                loanAmount:
                    type: string
                loanCoin:
                    type: string
                loanTerm:
                    type: string
                requestId:
                    type: string
            type: object
        CreateLoanVipRenewV1Req:
            properties:
                loanTerm:
                    type: integer
                orderId:
                    format: int64
                    type: integer
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - orderId
                - loanTerm
                - timestamp
            type: object
        CreateLoanVipRenewV1Resp:
            example: '{ "loanAccountId": "12345678",  "loanCoin": "BTC", "loanAmount": "100.55", "collateralAccountId": "12345677,12345678,12345679", "collateralCoin": "BUSD,USDT,ETH", "loanTerm": "30" }'
            properties:
                collateralAccountId:
                    type: string
                collateralCoin:
                    type: string
                loanAccountId:
                    type: string
                loanAmount:
                    type: string
                loanCoin:
                    type: string
                loanTerm:
                    type: string
            type: object
        CreateLoanVipRepayV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                orderId:
                    format: int64
                    type: integer
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - orderId
                - amount
                - timestamp
            type: object
        CreateLoanVipRepayV1Resp:
            example: '{ "loanCoin": "BUSD", "repayAmount": "200.5", "remainingPrincipal": "100.5", "remainingInterest": "0", "collateralCoin": "BNB,BTC,ETH", "currentLTV": "0.25", "repayStatus": "Repaid"  }'
            properties:
                collateralCoin:
                    type: string
                currentLTV:
                    type: string
                loanCoin:
                    type: string
                remainingInterest:
                    type: string
                remainingPrincipal:
                    type: string
                repayAmount:
                    type: string
                repayStatus:
                    type: string
            type: object
        CreateLocalentityBrokerWithdrawApplyV1Req:
            properties:
                address:
                    default: ""
                    type: string
                addressName:
                    default: ""
                    type: string
                addressTag:
                    default: ""
                    type: string
                amount:
                    default: ""
                    type: string
                coin:
                    default: ""
                    type: string
                network:
                    default: ""
                    type: string
                originatorPii:
                    default: ""
                    type: string
                questionnaire:
                    default: ""
                    type: string
                signature:
                    default: ""
                    type: string
                subAccountId:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                transactionFeeFlag:
                    default: false
                    type: boolean
                walletType:
                    type: integer
                withdrawOrderId:
                    default: ""
                    type: string
            required:
                - subAccountId
                - address
                - coin
                - amount
                - withdrawOrderId
                - questionnaire
                - originatorPii
                - timestamp
                - signature
            type: object
        CreateLocalentityBrokerWithdrawApplyV1Resp:
            example: '{ "trId": 123456,  "accpted": true,  "info": "Withdraw request accepted"  }'
            properties:
                accpted:
                    type: boolean
                info:
                    type: string
                trId:
                    format: int64
                    type: integer
            type: object
        CreateLocalentityWithdrawApplyV1Req:
            properties:
                address:
                    default: ""
                    type: string
                addressTag:
                    default: ""
                    type: string
                amount:
                    default: ""
                    type: string
                coin:
                    default: ""
                    type: string
                name:
                    default: ""
                    type: string
                network:
                    default: ""
                    type: string
                questionnaire:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                transactionFeeFlag:
                    default: false
                    type: boolean
                walletType:
                    type: integer
                withdrawOrderId:
                    default: ""
                    type: string
            required:
                - coin
                - address
                - amount
                - timestamp
                - questionnaire
            type: object
        CreateLocalentityWithdrawApplyV1Resp:
            example: '{ "trId": 123456,  "accpted": true,  "info": "Withdraw request accepted"  }'
            properties:
                accpted:
                    type: boolean
                info:
                    type: string
                trId:
                    format: int64
                    type: integer
            type: object
        CreateManagedSubaccountDepositV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                asset:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                toEmail:
                    default: ""
                    type: string
            required:
                - toEmail
                - asset
                - amount
                - timestamp
            type: object
        CreateManagedSubaccountDepositV1Resp:
            example: '{ "tranId":66157362489 }'
            properties:
                tranId:
                    format: int64
                    type: integer
            type: object
        CreateManagedSubaccountWithdrawV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                asset:
                    default: ""
                    type: string
                fromEmail:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                transferDate:
                    format: int64
                    type: integer
            required:
                - fromEmail
                - asset
                - amount
                - timestamp
            type: object
        CreateManagedSubaccountWithdrawV1Resp:
            example: '{ "tranId":66157362489 }'
            properties:
                tranId:
                    format: int64
                    type: integer
            type: object
        CreateMarginApiKeyV1Req:
            properties:
                apiName:
                    default: ""
                    type: string
                ip:
                    default: ""
                    type: string
                permissionMode:
                    default: ""
                    type: string
                publicKey:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - apiName
                - timestamp
            type: object
        CreateMarginApiKeyV1Resp:
            example: '{ "apiKey":"npOzOAeLVgr2TuxWfNo43AaPWpBbJEoKezh1o8mSQb6ryE2odE11A4AoVlJbQoGx", "secretKey":"87ssWB7azoy6ACRfyp6OVOL5U3rtZptX31QWw2kWjl1jHEYRbyM1pd6qykRBQw8p",  "type": "HMAC_SHA256"    }'
            properties:
                apiKey:
                    type: string
                secretKey:
                    type: string
                type:
                    type: string
            type: object
        CreateMarginBorrowRepayV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                asset:
                    default: ""
                    type: string
                isIsolated:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                type:
                    default: ""
                    type: string
            required:
                - asset
                - isIsolated
                - symbol
                - amount
                - type
                - timestamp
            type: object
        CreateMarginBorrowRepayV1Resp:
            example: '{ "tranId": 100000001 }'
            properties:
                tranId:
                    format: int64
                    type: integer
            type: object
        CreateMarginIsolatedAccountV1Req:
            properties:
                recvWindow:
                    format: int64
                    type: integer
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - symbol
                - timestamp
            type: object
        CreateMarginIsolatedAccountV1Resp:
            example: '{ "success": true, "symbol": "BTCUSDT" }'
            properties:
                success:
                    type: boolean
                symbol:
                    type: string
            type: object
        CreateMarginListenKeyV1Resp:
            example: '{ "listenKey": "T3ee22BIYuWqmvne0HNq2A2WsFlEtLhvWCtItw6ffhhd" }'
            properties:
                listenKey:
                    type: string
            type: object
        CreateMarginManualLiquidationV1Req:
            properties:
                recvWindow:
                    format: int64
                    type: integer
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                type:
                    default: ""
                    type: string
            required:
                - type
                - timestamp
            type: object
        CreateMarginManualLiquidationV1Resp:
            example: '{ "asset": "ETH", "interest": "0.00083334", "principal": "0.001", "liabilityAsset": "USDT", "liabilityQty": 0.3552 }'
            properties:
                asset:
                    type: string
                interest:
                    type: string
                liabilityAsset:
                    type: string
                liabilityQty:
                    type: number
                principal:
                    type: string
            type: object
        CreateMarginMaxLeverageV1Req:
            properties:
                maxLeverage:
                    type: integer
            required:
                - maxLeverage
            type: object
        CreateMarginMaxLeverageV1Resp:
            example: '{ "success": true }'
            properties:
                success:
                    type: boolean
            type: object
        CreateMarginOrderOcoV1Req:
            properties:
                autoRepayAtCancel:
                    type: boolean
                isIsolated:
                    default: ""
                    type: string
                limitClientOrderId:
                    default: ""
                    type: string
                limitIcebergQty:
                    default: ""
                    type: string
                listClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                price:
                    default: ""
                    type: string
                quantity:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                sideEffectType:
                    default: ""
                    type: string
                stopClientOrderId:
                    default: ""
                    type: string
                stopIcebergQty:
                    default: ""
                    type: string
                stopLimitPrice:
                    default: ""
                    type: string
                stopLimitTimeInForce:
                    default: ""
                    type: string
                stopPrice:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - symbol
                - side
                - quantity
                - price
                - stopPrice
                - timestamp
            type: object
        CreateMarginOrderOcoV1Resp:
            example: '{ "orderListId": 0, "contingencyType": "OCO", "listStatusType": "EXEC_STARTED", "listOrderStatus": "EXECUTING", "listClientOrderId": "JYVpp3F0f5CAG15DhtrqLp", "transactionTime": 1563417480525, "symbol": "LTCBTC", "marginBuyBorrowAmount": "5",        "marginBuyBorrowAsset": "BTC",     "isIsolated": false,        "orders": [ { "symbol": "LTCBTC", "orderId": 2, "clientOrderId": "Kk7sqHb9J6mJWTMDVW7Vos" }, { "symbol": "LTCBTC", "orderId": 3, "clientOrderId": "xTXKaGYd4bluPVp78IVRvl" } ], "orderReports": [ { "symbol": "LTCBTC", "orderId": 2, "orderListId": 0, "clientOrderId": "Kk7sqHb9J6mJWTMDVW7Vos", "transactTime": 1563417480525, "price": "0.000000", "origQty": "0.624363", "executedQty": "0.000000", "cummulativeQuoteQty": "0.000000", "status": "NEW", "timeInForce": "GTC", "type": "STOP_LOSS", "side": "BUY", "stopPrice": "0.960664", "selfTradePreventionMode": "NONE" }, { "symbol": "LTCBTC", "orderId": 3, "orderListId": 0, "clientOrderId": "xTXKaGYd4bluPVp78IVRvl", "transactTime": 1563417480525, "price": "0.036435", "origQty": "0.624363", "executedQty": "0.000000", "cummulativeQuoteQty": "0.000000", "status": "NEW", "timeInForce": "GTC", "type": "LIMIT_MAKER", "side": "BUY", "selfTradePreventionMode": "NONE" } ] }'
            properties:
                contingencyType:
                    type: string
                isIsolated:
                    type: boolean
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                marginBuyBorrowAmount:
                    type: string
                marginBuyBorrowAsset:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            orderListId:
                                format: int64
                                type: integer
                            origQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            stopPrice:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                format: int64
                                type: integer
                            type:
                                type: string
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
        CreateMarginOrderOtoV1Req:
            properties:
                autoRepayAtCancel:
                    type: boolean
                isIsolated:
                    default: ""
                    type: string
                listClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                pendingClientOrderId:
                    default: ""
                    type: string
                pendingIcebergQty:
                    default: ""
                    type: string
                pendingPrice:
                    default: ""
                    type: string
                pendingQuantity:
                    default: ""
                    type: string
                pendingSide:
                    default: ""
                    type: string
                pendingStopPrice:
                    default: ""
                    type: string
                pendingTimeInForce:
                    default: ""
                    type: string
                pendingTrailingDelta:
                    default: ""
                    type: string
                pendingType:
                    default: ""
                    type: string
                selfTradePreventionMode:
                    default: ""
                    type: string
                sideEffectType:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
                workingClientOrderId:
                    default: ""
                    type: string
                workingIcebergQty:
                    default: ""
                    type: string
                workingPrice:
                    default: ""
                    type: string
                workingQuantity:
                    default: ""
                    type: string
                workingSide:
                    default: ""
                    type: string
                workingTimeInForce:
                    default: ""
                    type: string
                workingType:
                    default: ""
                    enum:
                        - LIMIT
                        - LIMIT_MAKER
                    type: string
            required:
                - symbol
                - workingType
                - workingSide
                - workingPrice
                - workingQuantity
                - workingIcebergQty
                - pendingType
                - pendingSide
                - pendingQuantity
            type: object
        CreateMarginOrderOtoV1Resp:
            example: '{ "orderListId": 13551, "contingencyType": "OTO", "listStatusType": "EXEC_STARTED", "listOrderStatus": "EXECUTING", "listClientOrderId": "JDuOrsu0Ge8GTyvx8J7VTD", "transactionTime": 1725521998054, "symbol": "BTCUSDT", "isIsolated": false, "orders": [ { "symbol": "BTCUSDT", "orderId": 29896699, "clientOrderId": "y8RB6tQEMuHUXybqbtzTxk" }, { "symbol": "BTCUSDT", "orderId": 29896700, "clientOrderId": "dKQEdh5HhXb7Lpp85jz1dQ" } ], "orderReports": [ { "symbol": "BTCUSDT", "orderId": 29896699, "orderListId": 13551, "clientOrderId": "y8RB6tQEMuHUXybqbtzTxk", "transactTime": 1725521998054, "price": "80000.00000000", "origQty": "0.02000000", "executedQty": "0", "cummulativeQuoteQty": "0", "status": "NEW", "timeInForce": "GTC", "type": "LIMIT", "side": "SELL", "selfTradePreventionMode": "NONE" }, { "symbol": "BTCUSDT", "orderId": 29896700, "orderListId": 13551, "clientOrderId": "dKQEdh5HhXb7Lpp85jz1dQ", "transactTime": 1725521998054, "price": "50000.00000000", "origQty": "0.02000000", "executedQty": "0", "cummulativeQuoteQty": "0", "status": "PENDING_NEW", "timeInForce": "GTC", "type": "LIMIT", "side": "BUY", "selfTradePreventionMode": "NONE" } ] }'
            properties:
                contingencyType:
                    type: string
                isIsolated:
                    type: boolean
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            orderListId:
                                format: int64
                                type: integer
                            origQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                format: int64
                                type: integer
                            type:
                                type: string
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
        CreateMarginOrderOtocoV1Req:
            properties:
                autoRepayAtCancel:
                    type: boolean
                isIsolated:
                    default: ""
                    type: string
                listClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                pendingAboveClientOrderId:
                    default: ""
                    type: string
                pendingAboveIcebergQty:
                    default: ""
                    type: string
                pendingAbovePrice:
                    default: ""
                    type: string
                pendingAboveStopPrice:
                    default: ""
                    type: string
                pendingAboveTimeInForce:
                    default: ""
                    type: string
                pendingAboveTrailingDelta:
                    default: ""
                    type: string
                pendingAboveType:
                    default: ""
                    enum:
                        - LIMIT_MAKER
                        - STOP_LOSS
                        - and `STOP_LOSS_LIMIT
                    type: string
                pendingBelowClientOrderId:
                    default: ""
                    type: string
                pendingBelowIcebergQty:
                    default: ""
                    type: string
                pendingBelowPrice:
                    default: ""
                    type: string
                pendingBelowStopPrice:
                    default: ""
                    type: string
                pendingBelowTimeInForce:
                    default: ""
                    type: string
                pendingBelowTrailingDelta:
                    default: ""
                    type: string
                pendingBelowType:
                    default: ""
                    enum:
                        - LIMIT_MAKER
                        - STOP_LOSS
                        - and `STOP_LOSS_LIMIT
                    type: string
                pendingQuantity:
                    default: ""
                    type: string
                pendingSide:
                    default: ""
                    type: string
                selfTradePreventionMode:
                    default: ""
                    type: string
                sideEffectType:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
                workingClientOrderId:
                    default: ""
                    type: string
                workingIcebergQty:
                    default: ""
                    type: string
                workingPrice:
                    default: ""
                    type: string
                workingQuantity:
                    default: ""
                    type: string
                workingSide:
                    default: ""
                    type: string
                workingTimeInForce:
                    default: ""
                    type: string
                workingType:
                    default: ""
                    enum:
                        - LIMIT
                        - LIMIT_MAKER
                    type: string
            required:
                - symbol
                - workingType
                - workingSide
                - workingPrice
                - workingQuantity
                - pendingSide
                - pendingQuantity
                - pendingAboveType
            type: object
        CreateMarginOrderOtocoV1Resp:
            example: '{ "orderListId": 13509, "contingencyType": "OTO", "listStatusType": "EXEC_STARTED", "listOrderStatus": "EXECUTING", "listClientOrderId": "u2AUo48LLef5qVenRtwJZy", "transactionTime": 1725521881300, "symbol": "BNBUSDT", "isIsolated": false, "orders": [ { "symbol": "BNBUSDT", "orderId": 28282534, "clientOrderId": "IfYDxvrZI4kiyqYpRH13iI" }, { "symbol": "BNBUSDT", "orderId": 28282535, "clientOrderId": "0HCSsPRxVfW8BkTUy9z4np" }, { "symbol": "BNBUSDT", "orderId": 28282536, "clientOrderId": "dypsgdxWnLY75kwT930cbD" } ], "orderReports": [ { "symbol": "BNBUSDT", "orderId": 28282534, "orderListId": 13509, "clientOrderId": "IfYDxvrZI4kiyqYpRH13iI", "transactTime": 1725521881300, "price": "300.00000000", "origQty": "1.00000000", "executedQty": "0", "cummulativeQuoteQty": "0", "status": "NEW", "timeInForce": "GTC", "type": "LIMIT", "side": "BUY", "selfTradePreventionMode": "NONE" }, { "symbol": "BNBUSDT", "orderId": 28282535, "orderListId": 13509, "clientOrderId": "0HCSsPRxVfW8BkTUy9z4np", "transactTime": 1725521881300, "price": "0E-8", "origQty": "1.00000000", "executedQty": "0", "cummulativeQuoteQty": "0", "status": "PENDING_NEW", "timeInForce": "GTC", "type": "STOP_LOSS", "side": "SELL", "stopPrice": "299.00000000", "selfTradePreventionMode": "NONE" }, { "symbol": "BNBUSDT", "orderId": 28282536, "orderListId": 13509, "clientOrderId": "dypsgdxWnLY75kwT930cbD", "transactTime": 1725521881300, "price": "301.00000000", "origQty": "1.00000000", "executedQty": "0", "cummulativeQuoteQty": "0", "status": "PENDING_NEW", "timeInForce": "GTC", "type": "LIMIT_MAKER", "side": "SELL", "selfTradePreventionMode": "NONE" } ] }'
            properties:
                contingencyType:
                    type: string
                isIsolated:
                    type: boolean
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            orderListId:
                                format: int64
                                type: integer
                            origQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                format: int64
                                type: integer
                            type:
                                type: string
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
        CreateMiningHashTransferConfigCancelV1Req:
            properties:
                configId:
                    type: integer
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                userName:
                    default: ""
                    type: string
            required:
                - configId
                - userName
                - timestamp
            type: object
        CreateMiningHashTransferConfigCancelV1Resp:
            example: '{ "code": 0, "msg": "", "data": true }'
            properties:
                code:
                    type: integer
                data:
                    type: boolean
                msg:
                    type: string
            type: object
        CreateMiningHashTransferConfigV1Req:
            properties:
                algo:
                    default: ""
                    type: string
                endDate:
                    format: int64
                    type: integer
                hashRate:
                    format: int64
                    type: integer
                recvWindow:
                    format: int64
                    type: integer
                startDate:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                toPoolUser:
                    default: ""
                    type: string
                userName:
                    default: ""
                    type: string
            required:
                - userName
                - algo
                - endDate
                - startDate
                - toPoolUser
                - hashRate
                - timestamp
            type: object
        CreateMiningHashTransferConfigV1Resp:
            example: '{ "code": 0, "msg": "", "data": 171   }'
            properties:
                code:
                    type: integer
                data:
                    type: integer
                msg:
                    type: string
            type: object
        CreateOrderListOcoV3Req:
            properties:
                aboveClientOrderId:
                    default: ""
                    type: string
                aboveIcebergQty:
                    format: int64
                    type: integer
                abovePrice:
                    default: ""
                    type: string
                aboveStopPrice:
                    default: ""
                    type: string
                aboveStrategyId:
                    format: int64
                    type: integer
                aboveStrategyType:
                    type: integer
                aboveTimeInForce:
                    default: ""
                    type: string
                aboveTrailingDelta:
                    format: int64
                    type: integer
                aboveType:
                    default: ""
                    enum:
                        - STOP_LOSS_LIMIT
                        - STOP_LOSS
                        - LIMIT_MAKER
                        - TAKE_PROFIT
                        - TAKE_PROFIT_LIMIT
                    type: string
                belowClientOrderId:
                    default: ""
                    type: string
                belowIcebergQty:
                    format: int64
                    type: integer
                belowPrice:
                    default: ""
                    type: string
                belowStopPrice:
                    default: ""
                    type: string
                belowStrategyId:
                    format: int64
                    type: integer
                belowStrategyType:
                    type: integer
                belowTimeInForce:
                    default: ""
                    type: string
                belowTrailingDelta:
                    format: int64
                    type: integer
                belowType:
                    default: ""
                    enum:
                        - STOP_LOSS
                        - STOP_LOSS_LIMIT
                        - TAKE_PROFIT
                        - TAKE_PROFIT_LIMIT
                    type: string
                listClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    enum:
                        - ACK
                        - RESULT
                        - FULL
                    type: string
                quantity:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - symbol
                - side
                - quantity
                - aboveType
                - belowType
                - timestamp
            type: object
        CreateOrderListOcoV3Resp:
            example: '{ "orderListId": 1, "contingencyType": "OCO", "listStatusType": "EXEC_STARTED", "listOrderStatus": "EXECUTING", "listClientOrderId": "lH1YDkuQKWiXVXHPSKYEIp", "transactionTime": 1710485608839, "symbol": "LTCBTC", "orders": [ { "symbol": "LTCBTC", "orderId": 10, "clientOrderId": "44nZvqpemY7sVYgPYbvPih" }, { "symbol": "LTCBTC", "orderId": 11, "clientOrderId": "NuMp0nVYnciDiFmVqfpBqK" } ], "orderReports": [ { "symbol": "LTCBTC", "orderId": 10, "orderListId": 1, "clientOrderId": "44nZvqpemY7sVYgPYbvPih", "transactTime": 1710485608839, "price": "1.00000000", "origQty": "5.00000000", "executedQty": "0.00000000", "origQuoteOrderQty": "0.000000", "cummulativeQuoteQty": "0.00000000", "status": "NEW", "timeInForce": "GTC", "type": "STOP_LOSS_LIMIT", "side": "SELL", "stopPrice": "1.00000000", "workingTime": -1, "icebergQty": "1.00000000", "selfTradePreventionMode": "NONE" }, { "symbol": "LTCBTC", "orderId": 11, "orderListId": 1, "clientOrderId": "NuMp0nVYnciDiFmVqfpBqK", "transactTime": 1710485608839, "price": "3.00000000", "origQty": "5.00000000", "executedQty": "0.00000000", "origQuoteOrderQty": "0.000000", "cummulativeQuoteQty": "0.00000000", "status": "NEW", "timeInForce": "GTC", "type": "LIMIT_MAKER", "side": "SELL", "workingTime": 1710485608839, "selfTradePreventionMode": "NONE" } ] }'
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            icebergQty:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            orderListId:
                                format: int64
                                type: integer
                            origQty:
                                type: string
                            origQuoteOrderQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            stopPrice:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                format: int64
                                type: integer
                            type:
                                type: string
                            workingTime:
                                format: int64
                                type: integer
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
        CreateOrderListOtoV3Req:
            properties:
                listClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                pendingClientOrderId:
                    default: ""
                    type: string
                pendingIcebergQty:
                    default: ""
                    type: string
                pendingPrice:
                    default: ""
                    type: string
                pendingQuantity:
                    default: ""
                    type: string
                pendingSide:
                    default: ""
                    type: string
                pendingStopPrice:
                    default: ""
                    type: string
                pendingStrategyId:
                    format: int64
                    type: integer
                pendingStrategyType:
                    type: integer
                pendingTimeInForce:
                    default: ""
                    type: string
                pendingTrailingDelta:
                    default: ""
                    type: string
                pendingType:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                workingClientOrderId:
                    default: ""
                    type: string
                workingIcebergQty:
                    default: ""
                    type: string
                workingPrice:
                    default: ""
                    type: string
                workingQuantity:
                    default: ""
                    type: string
                workingSide:
                    default: ""
                    type: string
                workingStrategyId:
                    format: int64
                    type: integer
                workingStrategyType:
                    type: integer
                workingTimeInForce:
                    default: ""
                    type: string
                workingType:
                    default: ""
                    enum:
                        - LIMIT
                        - LIMIT_MAKER
                    type: string
            required:
                - symbol
                - workingType
                - workingSide
                - workingPrice
                - workingQuantity
                - pendingType
                - pendingSide
                - pendingQuantity
                - timestamp
            type: object
        CreateOrderListOtoV3Resp:
            example: '{ "orderListId": 0, "contingencyType": "OTO", "listStatusType": "EXEC_STARTED", "listOrderStatus": "EXECUTING", "listClientOrderId": "yl2ERtcar1o25zcWtqVBTC", "transactionTime": 1712289389158, "symbol": "ABCDEF", "orders": [ { "symbol": "LTCBTC", "orderId": 4, "clientOrderId": "Bq17mn9fP6vyCn75Jw1xya" }, { "symbol": "LTCBTC", "orderId": 5, "clientOrderId": "arLFo0zGJVDE69cvGBaU0d" } ], "orderReports": [ { "symbol": "LTCBTC", "orderId": 4, "orderListId": 0, "clientOrderId": "Bq17mn9fP6vyCn75Jw1xya", "transactTime": 1712289389158, "price": "1.00000000", "origQty": "1.00000000", "executedQty": "0.00000000", "origQuoteOrderQty": "0.000000", "cummulativeQuoteQty": "0.00000000", "status": "NEW", "timeInForce": "GTC", "type": "LIMIT", "side": "SELL", "workingTime": 1712289389158, "selfTradePreventionMode": "NONE" }, { "symbol": "LTCBTC", "orderId": 5, "orderListId": 0, "clientOrderId": "arLFo0zGJVDE69cvGBaU0d", "transactTime": 1712289389158, "price": "0.00000000", "origQty": "5.00000000", "executedQty": "0.00000000", "origQuoteOrderQty": "0.000000", "cummulativeQuoteQty": "0.00000000", "status": "PENDING_NEW", "timeInForce": "GTC", "type": "MARKET", "side": "BUY", "workingTime": -1, "selfTradePreventionMode": "NONE" } ] }'
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            orderListId:
                                format: int64
                                type: integer
                            origQty:
                                type: string
                            origQuoteOrderQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                format: int64
                                type: integer
                            type:
                                type: string
                            workingTime:
                                format: int64
                                type: integer
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
        CreateOrderListOtocoV3Req:
            properties:
                listClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                pendingAboveClientOrderId:
                    default: ""
                    type: string
                pendingAboveIcebergQty:
                    default: ""
                    type: string
                pendingAbovePrice:
                    default: ""
                    type: string
                pendingAboveStopPrice:
                    default: ""
                    type: string
                pendingAboveStrategyId:
                    format: int64
                    type: integer
                pendingAboveStrategyType:
                    type: integer
                pendingAboveTimeInForce:
                    default: ""
                    type: string
                pendingAboveTrailingDelta:
                    default: ""
                    type: string
                pendingAboveType:
                    default: ""
                    enum:
                        - STOP_LOSS_LIMIT
                        - STOP_LOSS
                        - LIMIT_MAKER
                        - TAKE_PROFIT
                        - TAKE_PROFIT_LIMIT
                    type: string
                pendingBelowClientOrderId:
                    default: ""
                    type: string
                pendingBelowIcebergQty:
                    default: ""
                    type: string
                pendingBelowPrice:
                    default: ""
                    type: string
                pendingBelowStopPrice:
                    default: ""
                    type: string
                pendingBelowStrategyId:
                    format: int64
                    type: integer
                pendingBelowStrategyType:
                    type: integer
                pendingBelowTimeInForce:
                    default: ""
                    type: string
                pendingBelowTrailingDelta:
                    default: ""
                    type: string
                pendingBelowType:
                    default: ""
                    enum:
                        - STOP_LOSS
                        - STOP_LOSS_LIMIT
                        - TAKE_PROFIT
                        - TAKE_PROFIT_LIMIT
                    type: string
                pendingQuantity:
                    default: ""
                    type: string
                pendingSide:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                workingClientOrderId:
                    default: ""
                    type: string
                workingIcebergQty:
                    default: ""
                    type: string
                workingPrice:
                    default: ""
                    type: string
                workingQuantity:
                    default: ""
                    type: string
                workingSide:
                    default: ""
                    type: string
                workingStrategyId:
                    format: int64
                    type: integer
                workingStrategyType:
                    type: integer
                workingTimeInForce:
                    default: ""
                    type: string
                workingType:
                    default: ""
                    enum:
                        - LIMIT
                        - LIMIT_MAKER
                    type: string
            required:
                - symbol
                - workingType
                - workingSide
                - workingPrice
                - workingQuantity
                - pendingSide
                - pendingQuantity
                - pendingAboveType
                - timestamp
            type: object
        CreateOrderListOtocoV3Resp:
            example: '{ "orderListId": 1, "contingencyType": "OTO", "listStatusType": "EXEC_STARTED", "listOrderStatus": "EXECUTING", "listClientOrderId": "RumwQpBaDctlUu5jyG5rs0", "transactionTime": 1712291372842, "symbol": "ABCDEF", "orders": [ { "symbol": "LTCBTC", "orderId": 6, "clientOrderId": "fM9Y4m23IFJVCQmIrlUmMK" }, { "symbol": "LTCBTC", "orderId": 7, "clientOrderId": "6pcQbFIzTXGZQ1e2MkGDq4" }, { "symbol": "LTCBTC", "orderId": 8, "clientOrderId": "r4JMv9cwAYYUwwBZfbussx" } ], "orderReports": [ { "symbol": "LTCBTC", "orderId": 6, "orderListId": 1, "clientOrderId": "fM9Y4m23IFJVCQmIrlUmMK", "transactTime": 1712291372842, "price": "1.00000000", "origQty": "1.00000000", "executedQty": "0.00000000", "origQuoteOrderQty": "0.000000", "cummulativeQuoteQty": "0.00000000", "status": "NEW", "timeInForce": "GTC", "type": "LIMIT", "side": "SELL", "workingTime": 1712291372842, "selfTradePreventionMode": "NONE" }, { "symbol": "LTCBTC", "orderId": 7, "orderListId": 1, "clientOrderId": "6pcQbFIzTXGZQ1e2MkGDq4", "transactTime": 1712291372842, "price": "1.00000000", "origQty": "5.00000000", "executedQty": "0.00000000", "origQuoteOrderQty": "0.000000", "cummulativeQuoteQty": "0.00000000", "status": "PENDING_NEW", "timeInForce": "IOC", "type": "STOP_LOSS_LIMIT", "side": "BUY", "stopPrice": "6.00000000", "workingTime": -1, "selfTradePreventionMode": "NONE" }, { "symbol": "LTCBTC", "orderId": 8, "orderListId": 1, "clientOrderId": "r4JMv9cwAYYUwwBZfbussx", "transactTime": 1712291372842, "price": "3.00000000", "origQty": "5.00000000", "executedQty": "0.00000000", "origQuoteOrderQty": "0.000000", "cummulativeQuoteQty": "0.00000000", "status": "PENDING_NEW", "timeInForce": "GTC", "type": "LIMIT_MAKER", "side": "BUY", "workingTime": -1, "selfTradePreventionMode": "NONE" } ] }'
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            orderListId:
                                format: int64
                                type: integer
                            origQty:
                                type: string
                            origQuoteOrderQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                format: int64
                                type: integer
                            type:
                                type: string
                            workingTime:
                                format: int64
                                type: integer
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
        CreateOrderOcoV3Req:
            properties:
                limitClientOrderId:
                    default: ""
                    type: string
                limitIcebergQty:
                    default: ""
                    type: string
                limitStrategyId:
                    format: int64
                    type: integer
                limitStrategyType:
                    type: integer
                listClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                price:
                    default: ""
                    type: string
                quantity:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                stopClientOrderId:
                    default: ""
                    type: string
                stopIcebergQty:
                    default: ""
                    type: string
                stopLimitPrice:
                    default: ""
                    type: string
                stopLimitTimeInForce:
                    default: ""
                    type: string
                stopPrice:
                    default: ""
                    type: string
                stopStrategyId:
                    format: int64
                    type: integer
                stopStrategyType:
                    type: integer
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                trailingDelta:
                    format: int64
                    type: integer
            required:
                - symbol
                - side
                - quantity
                - price
                - stopPrice
                - timestamp
            type: object
        CreateOrderOcoV3Resp:
            example: '{ "orderListId": 0, "contingencyType": "OCO", "listStatusType": "EXEC_STARTED", "listOrderStatus": "EXECUTING", "listClientOrderId": "JYVpp3F0f5CAG15DhtrqLp", "transactionTime": 1563417480525, "symbol": "LTCBTC", "orders": [ { "symbol": "LTCBTC", "orderId": 2, "clientOrderId": "Kk7sqHb9J6mJWTMDVW7Vos" }, { "symbol": "LTCBTC", "orderId": 3, "clientOrderId": "xTXKaGYd4bluPVp78IVRvl" } ], "orderReports": [ { "symbol": "LTCBTC", "orderId": 2, "orderListId": 0, "clientOrderId": "Kk7sqHb9J6mJWTMDVW7Vos", "transactTime": 1563417480525, "price": "0.000000", "origQty": "0.624363", "executedQty": "0.000000", "origQuoteOrderQty": "0.000000", "cummulativeQuoteQty": "0.000000", "status": "NEW", "timeInForce": "GTC", "type": "STOP_LOSS", "side": "BUY", "stopPrice": "0.960664", "workingTime": -1, "selfTradePreventionMode": "NONE" }, { "symbol": "LTCBTC", "orderId": 3, "orderListId": 0, "clientOrderId": "xTXKaGYd4bluPVp78IVRvl", "transactTime": 1563417480525, "price": "0.036435", "origQty": "0.624363", "executedQty": "0.000000", "origQuoteOrderQty": "0.000000", "cummulativeQuoteQty": "0.000000", "status": "NEW", "timeInForce": "GTC", "type": "LIMIT_MAKER", "side": "BUY", "workingTime": 1563417480525, "selfTradePreventionMode": "NONE" } ] }'
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            orderListId:
                                format: int64
                                type: integer
                            origQty:
                                type: string
                            origQuoteOrderQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            stopPrice:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                format: int64
                                type: integer
                            type:
                                type: string
                            workingTime:
                                format: int64
                                type: integer
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
        CreatePortfolioAssetCollectionV1Req:
            properties:
                asset:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - asset
                - timestamp
            type: object
        CreatePortfolioAssetCollectionV1Resp:
            example: '{ "msg": "success" }'
            properties:
                msg:
                    type: string
            type: object
        CreatePortfolioAutoCollectionV1Req:
            properties:
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - timestamp
            type: object
        CreatePortfolioAutoCollectionV1Resp:
            example: '{ "msg": "success" }'
            properties:
                msg:
                    type: string
            type: object
        CreatePortfolioBnbTransferV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                transferSide:
                    default: ""
                    type: string
            required:
                - amount
                - transferSide
                - timestamp
            type: object
        CreatePortfolioBnbTransferV1Resp:
            example: '{ "tranId": 100000001 }'
            properties:
                tranId:
                    format: int64
                    type: integer
            type: object
        CreatePortfolioMintV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                fromAsset:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                targetAsset:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - fromAsset
                - targetAsset
                - amount
                - timestamp
            type: object
        CreatePortfolioMintV1Resp:
            example: '{ "fromAsset":"USDT", "targetAsset": "BFUSD", "fromAssetQty": 10, "targetAssetQty": 9.9980, "rate": 0.9998   }'
            properties:
                fromAsset:
                    type: string
                fromAssetQty:
                    type: integer
                rate:
                    type: number
                targetAsset:
                    type: string
                targetAssetQty:
                    type: number
            type: object
        CreatePortfolioRedeemV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                fromAsset:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                targetAsset:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - fromAsset
                - targetAsset
                - amount
                - timestamp
            type: object
        CreatePortfolioRedeemV1Resp:
            example: '{ "fromAsset": "BFUSD", "targetAsset": "USDT", "fromAssetQty": 9.99800001, "targetAssetQty": 9.996000409998, "rate": 0.9998    }'
            properties:
                fromAsset:
                    type: string
                fromAssetQty:
                    type: number
                rate:
                    type: number
                targetAsset:
                    type: string
                targetAssetQty:
                    type: number
            type: object
        CreatePortfolioRepayFuturesNegativeBalanceV1Req:
            properties:
                from:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - timestamp
            type: object
        CreatePortfolioRepayFuturesNegativeBalanceV1Resp:
            example: '{ "msg": "success" }'
            properties:
                msg:
                    type: string
            type: object
        CreatePortfolioRepayFuturesSwitchV1Req:
            properties:
                autoRepay:
                    default: "true"
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - autoRepay
                - timestamp
            type: object
        CreatePortfolioRepayFuturesSwitchV1Resp:
            example: '{ "msg": "success" }'
            properties:
                msg:
                    type: string
            type: object
        CreatePortfolioRepayV1Req:
            properties:
                from:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - timestamp
            type: object
        CreatePortfolioRepayV1Resp:
            example: '{ "tranId": 58203331886213504 }'
            properties:
                tranId:
                    format: int64
                    type: integer
            type: object
        CreateSolStakingSolClaimV1Req:
            properties:
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - timestamp
            type: object
        CreateSolStakingSolClaimV1Resp:
            example: '{ "success": true }'
            properties:
                success:
                    type: boolean
            type: object
        CreateSolStakingSolRedeemV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - amount
                - timestamp
            type: object
        CreateSolStakingSolRedeemV1Resp:
            example: '{ "success": true, "solAmount":"0.23092091", "exchangeRate": "1.00121234", "arrivalTime": 1575018510000 }'
            properties:
                arrivalTime:
                    format: int64
                    type: integer
                exchangeRate:
                    type: string
                solAmount:
                    type: string
                success:
                    type: boolean
            type: object
        CreateSolStakingSolStakeV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - amount
                - timestamp
            type: object
        CreateSolStakingSolStakeV1Resp:
            example: '{ "success": true, "bnsolAmount":"0.23092091", "exchangeRate": "1.001212342342"   }'
            properties:
                bnsolAmount:
                    type: string
                exchangeRate:
                    type: string
                success:
                    type: boolean
            type: object
        CreateSorOrderV3Req:
            properties:
                icebergQty:
                    default: ""
                    type: string
                newClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                price:
                    default: ""
                    type: string
                quantity:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                strategyId:
                    format: int64
                    type: integer
                strategyType:
                    type: integer
                symbol:
                    default: ""
                    type: string
                timeInForce:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                type:
                    default: ""
                    type: string
            required:
                - symbol
                - side
                - type
                - quantity
                - timestamp
            type: object
        CreateSorOrderV3Resp:
            example: '{ "symbol": "BTCUSDT", "orderId": 2, "orderListId": -1, "clientOrderId": "sBI1KM6nNtOfj5tccZSKly", "transactTime": 1689149087774, "price": "31000.00000000", "origQty": "0.50000000", "executedQty": "0.50000000", "origQuoteOrderQty": "0.000000", "cummulativeQuoteQty": "14000.00000000", "status": "FILLED", "timeInForce": "GTC", "type": "LIMIT", "side": "BUY", "workingTime": 1689149087774, "fills": [ { "matchType": "ONE_PARTY_TRADE_REPORT", "price": "28000.00000000", "qty": "0.50000000", "commission": "0.00000000", "commissionAsset": "BTC", "tradeId": -1, "allocId": 0 } ], "workingFloor": "SOR", "selfTradePreventionMode": "NONE", "usedSor": true }'
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                fills:
                    items:
                        properties:
                            allocId:
                                format: int64
                                type: integer
                            commission:
                                type: string
                            commissionAsset:
                                type: string
                            matchType:
                                type: string
                            price:
                                type: string
                            qty:
                                type: string
                            tradeId:
                                format: int64
                                type: integer
                        type: object
                    type: array
                orderId:
                    format: int64
                    type: integer
                orderListId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origQuoteOrderQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                transactTime:
                    format: int64
                    type: integer
                type:
                    type: string
                usedSor:
                    type: boolean
                workingFloor:
                    type: string
                workingTime:
                    format: int64
                    type: integer
            type: object
        CreateSubAccountBlvtEnableV1Req:
            properties:
                email:
                    default: ""
                    type: string
                enableBlvt:
                    type: boolean
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - email
                - enableBlvt
                - timestamp
            type: object
        CreateSubAccountBlvtEnableV1Resp:
            example: '{ "email":"123@test.com", "enableBlvt":true }'
            properties:
                email:
                    type: string
                enableBlvt:
                    type: boolean
            type: object
        CreateSubAccountEoptionsEnableV1Req:
            properties:
                email:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - email
                - timestamp
            type: object
        CreateSubAccountEoptionsEnableV1Resp:
            example: '{ "email":"123@test.com", "isEOptionsEnabled": true   }'
            properties:
                email:
                    type: string
                isEOptionsEnabled:
                    type: boolean
            type: object
        CreateSubAccountFuturesEnableV1Req:
            properties:
                email:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - email
                - timestamp
            type: object
        CreateSubAccountFuturesEnableV1Resp:
            example: '{ "email":"123@test.com", "isFuturesEnabled": true   }'
            properties:
                email:
                    type: string
                isFuturesEnabled:
                    type: boolean
            type: object
        CreateSubAccountFuturesInternalTransferV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                asset:
                    default: ""
                    type: string
                fromEmail:
                    default: ""
                    type: string
                futuresType:
                    format: int64
                    type: integer
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                toEmail:
                    default: ""
                    type: string
            required:
                - fromEmail
                - toEmail
                - futuresType
                - asset
                - amount
                - timestamp
            type: object
        CreateSubAccountFuturesInternalTransferV1Resp:
            example: '{ "success":true, "txnId":"2934662589" }'
            properties:
                success:
                    type: boolean
                txnId:
                    type: string
            type: object
        CreateSubAccountFuturesMovePositionV1Req:
            properties:
                fromUserEmail:
                    default: ""
                    type: string
                orderArgs:
                    items:
                        type: object
                    type: array
                productType:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                toUserEmail:
                    default: ""
                    type: string
            required:
                - fromUserEmail
                - toUserEmail
                - productType
                - orderArgs
                - timestamp
            type: object
        CreateSubAccountFuturesMovePositionV1Resp:
            example: '{ "movePositionOrders": [{ "fromUserEmail": "testFrom@google.com", "toUserEmail": "testTo@google.com", "productType": "UM", "symbol": "BTCUSDT", "priceType": "MARK_PRICE", "price": "97139.00000000", "quantity": "0.001", "positionSide": "BOTH", "side": "BUY", "success": true }, { "fromUserEmail": "testFrom1@google.com", "toUserEmail": "1testTo@google.com", "productType": "UM", "symbol": "BTCUSDT", "priceType": "MARK_PRICE", "price": "97139.00000000", "quantity": "0.0011", "positionSide": "BOTH", "side": "BUY", "success": true }] }'
            properties:
                movePositionOrders:
                    items:
                        properties:
                            fromUserEmail:
                                type: string
                            positionSide:
                                type: string
                            price:
                                type: string
                            priceType:
                                type: string
                            productType:
                                type: string
                            quantity:
                                type: string
                            side:
                                type: string
                            success:
                                type: boolean
                            symbol:
                                type: string
                            toUserEmail:
                                type: string
                        type: object
                    type: array
            type: object
        CreateSubAccountFuturesTransferV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                asset:
                    default: ""
                    type: string
                email:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                type:
                    type: integer
            required:
                - email
                - asset
                - amount
                - type
                - timestamp
            type: object
        CreateSubAccountFuturesTransferV1Resp:
            example: '{ "txnId":"2966662589" }'
            properties:
                txnId:
                    type: string
            type: object
        CreateSubAccountMarginEnableV1Req:
            properties:
                email:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - email
                - timestamp
            type: object
        CreateSubAccountMarginEnableV1Resp:
            example: '{ "email":"123@test.com", "isMarginEnabled": true }'
            properties:
                email:
                    type: string
                isMarginEnabled:
                    type: boolean
            type: object
        CreateSubAccountMarginTransferV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                asset:
                    default: ""
                    type: string
                email:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                type:
                    type: integer
            required:
                - email
                - asset
                - amount
                - type
                - timestamp
            type: object
        CreateSubAccountMarginTransferV1Resp:
            example: '{ "txnId":"2966662589" }'
            properties:
                txnId:
                    type: string
            type: object
        CreateSubAccountSubAccountApiIpRestrictionV2Req:
            properties:
                email:
                    default: ""
                    type: string
                ipAddress:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                status:
                    default: ""
                    type: string
                subAccountApiKey:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - email
                - subAccountApiKey
                - status
                - timestamp
            type: object
        CreateSubAccountSubAccountApiIpRestrictionV2Resp:
            example: '{ "status": "2", "ipList": [ "69.210.67.14", "8.34.21.10"   ], "updateTime": 1636371437000, "apiKey": "k5V49ldtn4tszj6W3hystegdfvmGbqDzjmkCtpTvC0G74WhK7yd4rfCTo4lShf" }'
            properties:
                apiKey:
                    type: string
                ipList:
                    items:
                        type: string
                    type: array
                status:
                    type: string
                updateTime:
                    format: int64
                    type: integer
            type: object
        CreateSubAccountTransferSubToMasterV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                asset:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - asset
                - amount
                - timestamp
            type: object
        CreateSubAccountTransferSubToMasterV1Resp:
            example: '{ "txnId":"2966662589" }'
            properties:
                txnId:
                    type: string
            type: object
        CreateSubAccountTransferSubToSubV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                asset:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                toEmail:
                    default: ""
                    type: string
            required:
                - toEmail
                - asset
                - amount
                - timestamp
            type: object
        CreateSubAccountTransferSubToSubV1Resp:
            example: '{ "txnId":"2966662589" }'
            properties:
                txnId:
                    type: string
            type: object
        CreateSubAccountUniversalTransferV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                asset:
                    default: ""
                    type: string
                clientTranId:
                    default: ""
                    type: string
                fromAccountType:
                    default: ""
                    type: string
                fromEmail:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                toAccountType:
                    default: ""
                    type: string
                toEmail:
                    default: ""
                    type: string
            required:
                - fromAccountType
                - toAccountType
                - asset
                - amount
                - timestamp
            type: object
        CreateSubAccountUniversalTransferV1Resp:
            example: '{ "tranId":11945860693, "clientTranId":"test" }'
            properties:
                clientTranId:
                    type: string
                tranId:
                    format: int64
                    type: integer
            type: object
        CreateSubAccountVirtualSubAccountV1Req:
            properties:
                recvWindow:
                    format: int64
                    type: integer
                subAccountString:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - subAccountString
                - timestamp
            type: object
        CreateSubAccountVirtualSubAccountV1Resp:
            example: '{ "email":"addsdd_virtual@aasaixwqnoemail.com" }'
            properties:
                email:
                    type: string
            type: object
        CreateUserDataStreamIsolatedV1Req:
            properties:
                symbol:
                    default: ""
                    type: string
            required:
                - symbol
            type: object
        CreateUserDataStreamIsolatedV1Resp:
            example: '{ "listenKey": "T3ee22BIYuWqmvne0HNq2A2WsFlEtLhvWCtItw6ffhhdmjifQ2tRbuKkTHhr" }'
            properties:
                listenKey:
                    type: string
            type: object
        CreateUserDataStreamV1Resp:
            example: '{ "listenKey": "T3ee22BIYuWqmvne0HNq2A2WsFlEtLhvWCtItw6ffhhdmjifQ2tRbuKkTHhr" }'
            properties:
                listenKey:
                    type: string
            type: object
        CreateUserDataStreamV3Resp:
            example: '{ "listenKey": "pqia91ma19a5s61cv6a81va65sdf19v8a65a1a5s61cv6a81va65sdf19v8a65a1" }'
            properties:
                listenKey:
                    type: string
            type: object
        DeleteAlgoFuturesOrderV1Resp:
            example: '{ "algoId": 14511, "success": true, "code": 0, "msg": "OK" }'
            properties:
                algoId:
                    format: int64
                    type: integer
                code:
                    type: integer
                msg:
                    type: string
                success:
                    type: boolean
            type: object
        DeleteAlgoSpotOrderV1Resp:
            example: '{ "algoId": 14511, "success": true, "code": 0, "msg": "OK" }'
            properties:
                algoId:
                    format: int64
                    type: integer
                code:
                    type: integer
                msg:
                    type: string
                success:
                    type: boolean
            type: object
        DeleteBrokerSubAccountApiIpRestrictionIpListV1Resp:
            example: '{ "subaccountId": "1", "apikey": "vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A", "ipList": [ "54.128.193.28" ], "updateTime": 1544433328000 }'
            properties:
                apikey:
                    type: string
                ipList:
                    items:
                        type: string
                    type: array
                subaccountId:
                    type: string
                updateTime:
                    format: int64
                    type: integer
            type: object
        DeleteBrokerSubAccountApiV1Resp:
            example: '{}'
            type: object
        DeleteBrokerSubAccountV1Resp:
            example: '{}'
            type: object
        DeleteMarginApiKeyV1Resp:
            example: '{ }'
            type: object
        DeleteMarginIsolatedAccountV1Resp:
            example: '{ "success": true, "symbol": "BTCUSDT" }'
            properties:
                success:
                    type: boolean
                symbol:
                    type: string
            type: object
        DeleteMarginListenKeyV1Resp:
            example: '{}'
            type: object
        DeleteMarginOpenOrdersV1Resp:
            example: '[ { "symbol": "BTCUSDT", "isIsolated": true,        "origClientOrderId": "E6APeyTJvkMvLMYMqu1KQ4", "orderId": 11, "orderListId": -1, "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx", "price": "0.089853", "origQty": "0.178622", "executedQty": "0.000000", "cummulativeQuoteQty": "0.000000", "status": "CANCELED", "timeInForce": "GTC", "type": "LIMIT", "side": "BUY", "selfTradePreventionMode": "NONE" }, { "symbol": "BTCUSDT", "isIsolated": false,        "origClientOrderId": "A3EF2HCwxgZPFMrfwbgrhv", "orderId": 13, "orderListId": -1, "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx", "price": "0.090430", "origQty": "0.178622", "executedQty": "0.000000", "cummulativeQuoteQty": "0.000000", "status": "CANCELED", "timeInForce": "GTC", "type": "LIMIT", "side": "BUY", "selfTradePreventionMode": "NONE" }, { "orderListId": 1929, "contingencyType": "OCO", "listStatusType": "ALL_DONE", "listOrderStatus": "ALL_DONE", "listClientOrderId": "2inzWQdDvZLHbbAmAozX2N", "transactionTime": 1585230948299, "symbol": "BTCUSDT", "isIsolated": true,        "orders": [ { "symbol": "BTCUSDT", "orderId": 20, "clientOrderId": "CwOOIPHSmYywx6jZX77TdL" }, { "symbol": "BTCUSDT", "orderId": 21, "clientOrderId": "461cPg51vQjV3zIMOXNz39" } ], "orderReports": [ { "symbol": "BTCUSDT", "origClientOrderId": "CwOOIPHSmYywx6jZX77TdL", "orderId": 20, "orderListId": 1929, "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx", "price": "0.668611", "origQty": "0.690354", "executedQty": "0.000000", "cummulativeQuoteQty": "0.000000", "status": "CANCELED", "timeInForce": "GTC", "type": "STOP_LOSS_LIMIT", "side": "BUY", "stopPrice": "0.378131", "icebergQty": "0.017083" }, { "symbol": "BTCUSDT", "origClientOrderId": "461cPg51vQjV3zIMOXNz39", "orderId": 21, "orderListId": 1929, "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx", "price": "0.008791", "origQty": "0.690354", "executedQty": "0.000000", "cummulativeQuoteQty": "0.000000", "status": "CANCELED", "timeInForce": "GTC", "type": "LIMIT_MAKER", "side": "BUY", "icebergQty": "0.639962" } ] } ]'
            items:
                $ref: '#/components/schemas/DeleteMarginOpenOrdersV1RespItem'
            type: array
        DeleteMarginOpenOrdersV1RespItem:
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                isIsolated:
                    type: boolean
                orderId:
                    format: int64
                    type: integer
                orderListId:
                    format: int64
                    type: integer
                origClientOrderId:
                    type: string
                origQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                type:
                    type: string
            type: object
        DeleteMarginOrderListV1Resp:
            example: '{ "orderListId": 0, "contingencyType": "OCO", "listStatusType": "ALL_DONE", "listOrderStatus": "ALL_DONE", "listClientOrderId": "C3wyj4WVEktd7u9aVBRXcN", "transactionTime": 1574040868128, "symbol": "LTCBTC", "isIsolated": false,        "orders": [ { "symbol": "LTCBTC", "orderId": 2, "clientOrderId": "pO9ufTiFGg3nw2fOdgeOXa" }, { "symbol": "LTCBTC", "orderId": 3, "clientOrderId": "TXOvglzXuaubXAaENpaRCB" } ], "orderReports": [ { "symbol": "LTCBTC", "origClientOrderId": "pO9ufTiFGg3nw2fOdgeOXa", "orderId": 2, "orderListId": 0, "clientOrderId": "unfWT8ig8i0uj6lPuYLez6", "price": "1.00000000", "origQty": "10.00000000", "executedQty": "0.00000000", "cummulativeQuoteQty": "0.00000000", "status": "CANCELED", "timeInForce": "GTC", "type": "STOP_LOSS_LIMIT", "side": "SELL", "stopPrice": "1.00000000", "selfTradePreventionMode": "NONE" }, { "symbol": "LTCBTC", "origClientOrderId": "TXOvglzXuaubXAaENpaRCB", "orderId": 3, "orderListId": 0, "clientOrderId": "unfWT8ig8i0uj6lPuYLez6", "price": "3.00000000", "origQty": "10.00000000", "executedQty": "0.00000000", "cummulativeQuoteQty": "0.00000000", "status": "CANCELED", "timeInForce": "GTC", "type": "LIMIT_MAKER", "side": "SELL", "selfTradePreventionMode": "NONE" } ] }'
            properties:
                contingencyType:
                    type: string
                isIsolated:
                    type: boolean
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            orderListId:
                                format: int64
                                type: integer
                            origClientOrderId:
                                type: string
                            origQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            stopPrice:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            type:
                                type: string
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
        DeleteMarginOrderV1Resp:
            example: '{ "symbol": "LTCBTC", "isIsolated": true,        "orderId": "28", "origClientOrderId": "myOrder1", "clientOrderId": "cancelMyOrder1", "price": "1.00000000", "origQty": "10.00000000", "executedQty": "8.00000000", "cummulativeQuoteQty": "8.00000000", "status": "CANCELED", "timeInForce": "GTC", "type": "LIMIT", "side": "SELL" }'
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                isIsolated:
                    type: boolean
                orderId:
                    type: string
                origClientOrderId:
                    type: string
                origQty:
                    type: string
                price:
                    type: string
                side:
                    type: string
                status:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                type:
                    type: string
            type: object
        DeleteOrderListV3Resp:
            example: '{ "orderListId": 0, "contingencyType": "OCO", "listStatusType": "ALL_DONE", "listOrderStatus": "ALL_DONE", "listClientOrderId": "C3wyj4WVEktd7u9aVBRXcN", "transactionTime": 1574040868128, "symbol": "LTCBTC", "orders": [ { "symbol": "LTCBTC", "orderId": 2, "clientOrderId": "pO9ufTiFGg3nw2fOdgeOXa" }, { "symbol": "LTCBTC", "orderId": 3, "clientOrderId": "TXOvglzXuaubXAaENpaRCB" } ], "orderReports": [ { "symbol": "LTCBTC", "origClientOrderId": "pO9ufTiFGg3nw2fOdgeOXa", "orderId": 2, "orderListId": 0, "clientOrderId": "unfWT8ig8i0uj6lPuYLez6", "transactTime": 1688005070874, "price": "1.00000000", "origQty": "10.00000000", "executedQty": "0.00000000", "origQuoteOrderQty": "0.000000", "cummulativeQuoteQty": "0.00000000", "status": "CANCELED", "timeInForce": "GTC", "type": "STOP_LOSS_LIMIT", "side": "SELL", "stopPrice": "1.00000000", "selfTradePreventionMode": "NONE" }, { "symbol": "LTCBTC", "origClientOrderId": "TXOvglzXuaubXAaENpaRCB", "orderId": 3, "orderListId": 0, "clientOrderId": "unfWT8ig8i0uj6lPuYLez6", "transactTime": 1688005070874, "price": "3.00000000", "origQty": "10.00000000", "executedQty": "0.00000000", "origQuoteOrderQty": "0.000000", "cummulativeQuoteQty": "0.00000000", "status": "CANCELED", "timeInForce": "GTC", "type": "LIMIT_MAKER", "side": "SELL", "selfTradePreventionMode": "NONE" } ] }'
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orderReports:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            cummulativeQuoteQty:
                                type: string
                            executedQty:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            orderListId:
                                format: int64
                                type: integer
                            origClientOrderId:
                                type: string
                            origQty:
                                type: string
                            origQuoteOrderQty:
                                type: string
                            price:
                                type: string
                            selfTradePreventionMode:
                                type: string
                            side:
                                type: string
                            status:
                                type: string
                            stopPrice:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            transactTime:
                                format: int64
                                type: integer
                            type:
                                type: string
                        type: object
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
        DeleteOrderV3Resp:
            example: '{ "symbol": "LTCBTC", "origClientOrderId": "myOrder1", "orderId": 4, "orderListId": -1,  "clientOrderId": "cancelMyOrder1", "transactTime": 1684804350068, "price": "2.00000000", "origQty": "1.00000000", "executedQty": "0.00000000", "cummulativeQuoteQty": "0.00000000", "status": "CANCELED", "timeInForce": "GTC", "type": "LIMIT", "side": "BUY", "selfTradePreventionMode": "NONE" }'
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                orderId:
                    format: int64
                    type: integer
                orderListId:
                    format: int64
                    type: integer
                origClientOrderId:
                    type: string
                origQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                transactTime:
                    format: int64
                    type: integer
                type:
                    type: string
            type: object
        DeleteSubAccountSubAccountApiIpRestrictionIpListV1Resp:
            example: '{ "ipRestrict": "true", "ipList": [ "69.210.67.14", "8.34.21.10" ], "updateTime": 1636371437000, "apiKey": "k5V49ldtn4tszj6W3hystegdfvmGbqDzjmkCtpTvC0G74WhK7yd4rfCTo4lShf" }'
            properties:
                apiKey:
                    type: string
                ipList:
                    items:
                        type: string
                    type: array
                ipRestrict:
                    type: string
                updateTime:
                    format: int64
                    type: integer
            type: object
        DeleteUserDataStreamIsolatedV1Resp:
            example: '{}'
            type: object
        DeleteUserDataStreamV1Resp:
            example: '{}'
            type: object
        DeleteUserDataStreamV3Resp:
            example: '{}'
            type: object
        ExchangelinkGetBrokerSubAccountFuturesSummaryV3Resp:
            properties:
                data:
                    items:
                        properties:
                            asset:
                                type: string
                            futuresEnable:
                                type: boolean
                            subAccountId:
                                type: string
                            totalInitialMargin:
                                type: string
                            totalMaintenanceMargin:
                                type: string
                            totalMarginBalance:
                                type: string
                            totalMarginBalanceOfUsdt:
                                type: string
                            totalOpenOrderInitialMargin:
                                type: string
                            totalPositionInitialMargin:
                                type: string
                            totalUnrealizedProfit:
                                type: string
                            totalUnrealizedProfitOfUsdt:
                                type: string
                            totalWalletBalance:
                                type: string
                            totalWalletBalanceOfUsdt:
                                type: string
                        type: object
                    type: array
                timestamp:
                    format: int64
                    type: integer
            type: object
        GetAccountApiRestrictionsV1Resp:
            example: '{ "ipRestrict":false, "createTime":1698645219000, "enableReading":true, "enableWithdrawals":false,  "enableInternalTransfer":false,   "enableMargin":false,   "enableFutures":false,    "permitsUniversalTransfer":false,  "enableVanillaOptions":false,   "enableFixApiTrade": false,    "enableFixReadOnly": true, "enableSpotAndMarginTrading":false,  "enablePortfolioMarginTrading":true   }'
            properties:
                createTime:
                    format: int64
                    type: integer
                enableFixApiTrade:
                    type: boolean
                enableFixReadOnly:
                    type: boolean
                enableFutures:
                    type: boolean
                enableInternalTransfer:
                    type: boolean
                enableMargin:
                    type: boolean
                enablePortfolioMarginTrading:
                    type: boolean
                enableReading:
                    type: boolean
                enableSpotAndMarginTrading:
                    type: boolean
                enableVanillaOptions:
                    type: boolean
                enableWithdrawals:
                    type: boolean
                ipRestrict:
                    type: boolean
                permitsUniversalTransfer:
                    type: boolean
            type: object
        GetAccountApiTradingStatusV1Resp:
            example: '{ "data": {           "isLocked": false,    "plannedRecoverTime": 0,   "triggerCondition": { "GCR": 150,   "IFER": 150,  "UFR": 300    }, "updateTime": 1547630471725 } }'
            properties:
                data:
                    properties:
                        isLocked:
                            type: boolean
                        plannedRecoverTime:
                            format: int64
                            type: integer
                        triggerCondition:
                            properties:
                                GCR:
                                    type: integer
                                IFER:
                                    type: integer
                                UFR:
                                    type: integer
                            type: object
                        updateTime:
                            format: int64
                            type: integer
                    type: object
            type: object
        GetAccountCommissionV3Resp:
            example: '{ "symbol": "BTCUSDT", "standardCommission": {          "maker": "0.00000010", "taker": "0.00000020", "buyer": "0.00000030", "seller": "0.00000040" }, "taxCommission": {               "maker": "0.00000112", "taker": "0.00000114", "buyer": "0.00000118", "seller": "0.00000116" }, "discount": {                    "enabledForAccount": true, "enabledForSymbol": true, "discountAsset": "BNB", "discount": "0.75000000"       } }'
            properties:
                discount:
                    properties:
                        discount:
                            type: string
                        discountAsset:
                            type: string
                        enabledForAccount:
                            type: boolean
                        enabledForSymbol:
                            type: boolean
                    type: object
                standardCommission:
                    properties:
                        buyer:
                            type: string
                        maker:
                            type: string
                        seller:
                            type: string
                        taker:
                            type: string
                    type: object
                symbol:
                    type: string
                taxCommission:
                    properties:
                        buyer:
                            type: string
                        maker:
                            type: string
                        seller:
                            type: string
                        taker:
                            type: string
                    type: object
            type: object
        GetAccountInfoV1Resp:
            example: '{ "vipLevel": 0, "isMarginEnabled": true,      "isFutureEnabled": true,       "isOptionsEnabled":true,       "isPortfolioMarginRetailEnabled":true       }'
            properties:
                isFutureEnabled:
                    type: boolean
                isMarginEnabled:
                    type: boolean
                isOptionsEnabled:
                    type: boolean
                isPortfolioMarginRetailEnabled:
                    type: boolean
                vipLevel:
                    type: integer
            type: object
        GetAccountSnapshotV1Resp:
            example: '{ "code":200,  "msg":"",  "snapshotVos":[ { "data":{ "balances":[ { "asset":"BTC", "free":"0.09905021", "locked":"0.00000000" }, { "asset":"USDT", "free":"1.89109409", "locked":"0.00000000" } ], "totalAssetOfBtc":"0.09942700" }, "type":"spot", "updateTime":1576281599000 } ] }'
            properties:
                code:
                    type: integer
                msg:
                    type: string
                snapshotVos:
                    items:
                        properties:
                            data:
                                properties:
                                    balances:
                                        items:
                                            properties:
                                                asset:
                                                    type: string
                                                free:
                                                    type: string
                                                locked:
                                                    type: string
                                            type: object
                                        type: array
                                    totalAssetOfBtc:
                                        type: string
                                type: object
                            type:
                                type: string
                            updateTime:
                                format: int64
                                type: integer
                        type: object
                    type: array
            type: object
        GetAccountStatusV1Resp:
            example: '{ "data": "Normal" }'
            properties:
                data:
                    type: string
            type: object
        GetAccountV3Resp:
            example: '{ "makerCommission": 15, "takerCommission": 15, "buyerCommission": 0, "sellerCommission": 0, "commissionRates": { "maker": "0.00150000", "taker": "0.00150000", "buyer": "0.00000000", "seller": "0.00000000" }, "canTrade": true, "canWithdraw": true, "canDeposit": true, "brokered": false, "requireSelfTradePrevention": false, "preventSor": false, "updateTime": 123456789, "accountType": "SPOT", "balances": [ { "asset": "BTC", "free": "4723846.89208129", "locked": "0.00000000" }, { "asset": "LTC", "free": "4763368.68006011", "locked": "0.00000000" } ], "permissions": [ "SPOT" ], "uid": 354937868 }'
            properties:
                accountType:
                    type: string
                balances:
                    items:
                        properties:
                            asset:
                                type: string
                            free:
                                type: string
                            locked:
                                type: string
                        type: object
                    type: array
                brokered:
                    type: boolean
                buyerCommission:
                    type: integer
                canDeposit:
                    type: boolean
                canTrade:
                    type: boolean
                canWithdraw:
                    type: boolean
                commissionRates:
                    properties:
                        buyer:
                            type: string
                        maker:
                            type: string
                        seller:
                            type: string
                        taker:
                            type: string
                    type: object
                makerCommission:
                    type: integer
                permissions:
                    items:
                        type: string
                    type: array
                preventSor:
                    type: boolean
                requireSelfTradePrevention:
                    type: boolean
                sellerCommission:
                    type: integer
                takerCommission:
                    type: integer
                uid:
                    type: integer
                updateTime:
                    format: int64
                    type: integer
            type: object
        GetAlgoFuturesHistoricalOrdersV1Resp:
            example: '{ "total": 1, "orders": [ { "algoId": 14518, "symbol": "BNBUSDT", "side": "BUY", "positionSide": "BOTH", "totalQty": "100.00", "executedQty": "0.00", "executedAmt": "0.00000000", "avgPrice": "0.000", "clientAlgoId": "acacab56b3c44bef9f6a8f8ebd2a8408", "bookTime": 1649757019503, "endTime": 1649757088101, "algoStatus": "CANCELLED", "algoType": "VP", "urgency": "LOW" } ] }'
            properties:
                orders:
                    items:
                        properties:
                            algoId:
                                format: int64
                                type: integer
                            algoStatus:
                                type: string
                            algoType:
                                type: string
                            avgPrice:
                                type: string
                            bookTime:
                                format: int64
                                type: integer
                            clientAlgoId:
                                type: string
                            endTime:
                                format: int64
                                type: integer
                            executedAmt:
                                type: string
                            executedQty:
                                type: string
                            positionSide:
                                type: string
                            side:
                                type: string
                            symbol:
                                type: string
                            totalQty:
                                type: string
                            urgency:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetAlgoFuturesOpenOrdersV1Resp:
            example: '{ "total": 1, "orders": [ { "algoId": 14517, "symbol": "ETHUSDT", "side": "SELL", "positionSide": "SHORT", "totalQty": "5.000", "executedQty": "0.000", "executedAmt": "0.00000000", "avgPrice": "0.00", "clientAlgoId": "d7096549481642f8a0bb69e9e2e31f2e", "bookTime": 1649756817004, "endTime": 0, "algoStatus": "WORKING", "algoType": "VP", "urgency": "LOW" } ] }'
            properties:
                orders:
                    items:
                        properties:
                            algoId:
                                format: int64
                                type: integer
                            algoStatus:
                                type: string
                            algoType:
                                type: string
                            avgPrice:
                                type: string
                            bookTime:
                                format: int64
                                type: integer
                            clientAlgoId:
                                type: string
                            endTime:
                                format: int64
                                type: integer
                            executedAmt:
                                type: string
                            executedQty:
                                type: string
                            positionSide:
                                type: string
                            side:
                                type: string
                            symbol:
                                type: string
                            totalQty:
                                type: string
                            urgency:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetAlgoFuturesSubOrdersV1Resp:
            example: '{ "total": 1, "executedQty": "1.000", "executedAmt": "3229.44000000", "subOrders": [ { "algoId": 13723, "orderId": 8389765519993908929, "orderStatus": "FILLED", "executedQty": "1.000", "executedAmt": "3229.44000000", "feeAmt": "-1.61471999", "feeAsset": "USDT", "bookTime": 1649319001964, "avgPrice": "3229.44", "side": "SELL", "symbol": "ETHUSDT", "subId": 1, "timeInForce": "IMMEDIATE_OR_CANCEL", "origQty": "1.000" } ] }'
            properties:
                executedAmt:
                    type: string
                executedQty:
                    type: string
                subOrders:
                    items:
                        properties:
                            algoId:
                                format: int64
                                type: integer
                            avgPrice:
                                type: string
                            bookTime:
                                format: int64
                                type: integer
                            executedAmt:
                                type: string
                            executedQty:
                                type: string
                            feeAmt:
                                type: string
                            feeAsset:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            orderStatus:
                                type: string
                            origQty:
                                type: string
                            side:
                                type: string
                            subId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetAlgoSpotHistoricalOrdersV1Resp:
            example: '{ "total": 1, "orders": [ { "algoId": 14518, "symbol": "BNBUSDT", "side": "BUY", "totalQty": "100.00", "executedQty": "0.00", "executedAmt": "0.00000000", "avgPrice": "0.000", "clientAlgoId": "acacab56b3c44bef9f6a8f8ebd2a8408", "bookTime": 1649757019503, "endTime": 1649757088101, "algoStatus": "CANCELLED", "algoType": "VP", "urgency": "LOW" } ] }'
            properties:
                orders:
                    items:
                        properties:
                            algoId:
                                format: int64
                                type: integer
                            algoStatus:
                                type: string
                            algoType:
                                type: string
                            avgPrice:
                                type: string
                            bookTime:
                                format: int64
                                type: integer
                            clientAlgoId:
                                type: string
                            endTime:
                                format: int64
                                type: integer
                            executedAmt:
                                type: string
                            executedQty:
                                type: string
                            side:
                                type: string
                            symbol:
                                type: string
                            totalQty:
                                type: string
                            urgency:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetAlgoSpotOpenOrdersV1Resp:
            example: '{ "total": 1, "orders": [ { "algoId": 14517, "symbol": "ETHUSDT", "side": "SELL", "totalQty": "5.000", "executedQty": "0.000", "executedAmt": "0.00000000", "avgPrice": "0.00", "clientAlgoId": "d7096549481642f8a0bb69e9e2e31f2e", "bookTime": 1649756817004, "endTime": 0, "algoStatus": "WORKING", "algoType": "TWAP", "urgency": "LOW" } ] }'
            properties:
                orders:
                    items:
                        properties:
                            algoId:
                                format: int64
                                type: integer
                            algoStatus:
                                type: string
                            algoType:
                                type: string
                            avgPrice:
                                type: string
                            bookTime:
                                format: int64
                                type: integer
                            clientAlgoId:
                                type: string
                            endTime:
                                format: int64
                                type: integer
                            executedAmt:
                                type: string
                            executedQty:
                                type: string
                            side:
                                type: string
                            symbol:
                                type: string
                            totalQty:
                                type: string
                            urgency:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetAlgoSpotSubOrdersV1Resp:
            example: '{ "total": 1, "executedQty": "1.000", "executedAmt": "3229.44000000", "subOrders": [ { "algoId": 13723, "orderId": 8389765519993908929, "orderStatus": "FILLED", "executedQty": "1.000", "executedAmt": "3229.44000000", "feeAmt": "-1.61471999", "feeAsset": "USDT", "bookTime": 1649319001964, "avgPrice": "3229.44", "side": "SELL", "symbol": "ETHUSDT", "subId": 1, "timeInForce": "IMMEDIATE_OR_CANCEL", "origQty": "1.000" } ] }'
            properties:
                executedAmt:
                    type: string
                executedQty:
                    type: string
                subOrders:
                    items:
                        properties:
                            algoId:
                                format: int64
                                type: integer
                            avgPrice:
                                type: string
                            bookTime:
                                format: int64
                                type: integer
                            executedAmt:
                                type: string
                            executedQty:
                                type: string
                            feeAmt:
                                type: string
                            feeAsset:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            orderStatus:
                                type: string
                            origQty:
                                type: string
                            side:
                                type: string
                            subId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetAllOrderListV3Resp:
            example: '[ { "orderListId": 29, "contingencyType": "OCO", "listStatusType": "EXEC_STARTED", "listOrderStatus": "EXECUTING", "listClientOrderId": "amEEAXryFzFwYF1FeRpUoZ", "transactionTime": 1565245913483, "symbol": "LTCBTC", "orders": [ { "symbol": "LTCBTC", "orderId": 4, "clientOrderId": "oD7aesZqjEGlZrbtRpy5zB" }, { "symbol": "LTCBTC", "orderId": 5, "clientOrderId": "Jr1h6xirOxgeJOUuYQS7V3" } ] }, { "orderListId": 28, "contingencyType": "OCO", "listStatusType": "EXEC_STARTED", "listOrderStatus": "EXECUTING", "listClientOrderId": "hG7hFNxJV6cZy3Ze4AUT4d", "transactionTime": 1565245913407, "symbol": "LTCBTC", "orders": [ { "symbol": "LTCBTC", "orderId": 2, "clientOrderId": "j6lFOfbmFMRjTYA7rRJ0LP" }, { "symbol": "LTCBTC", "orderId": 3, "clientOrderId": "z0KCjOdditiLS5ekAFtK81" } ] } ]'
            items:
                $ref: '#/components/schemas/GetAllOrderListV3RespItem'
            type: array
        GetAllOrderListV3RespItem:
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
        GetAllOrdersV3Resp:
            example: '[ { "symbol": "LTCBTC", "orderId": 1, "orderListId": -1,  "clientOrderId": "myOrder1", "price": "0.1", "origQty": "1.0", "executedQty": "0.0", "cummulativeQuoteQty": "0.0", "status": "NEW", "timeInForce": "GTC", "type": "LIMIT", "side": "BUY", "stopPrice": "0.0", "icebergQty": "0.0", "time": 1499827319559, "updateTime": 1499827319559, "isWorking": true, "origQuoteOrderQty": "0.000000", "workingTime": 1499827319559, "selfTradePreventionMode": "NONE" } ]'
            items:
                $ref: '#/components/schemas/GetAllOrdersV3RespItem'
            type: array
        GetAllOrdersV3RespItem:
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                icebergQty:
                    type: string
                isWorking:
                    type: boolean
                orderId:
                    format: int64
                    type: integer
                orderListId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origQuoteOrderQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
                workingTime:
                    format: int64
                    type: integer
            type: object
        GetApiReferralCustomizationV1Resp:
            example: '[ { "customerId":"abc123", "email":"testABCD@gmail.com" }, { "customerId":"abc345", "email":"testABCD@gmail.com" } ]'
            items:
                $ref: '#/components/schemas/GetApiReferralCustomizationV1RespItem'
            type: array
        GetApiReferralCustomizationV1RespItem:
            properties:
                customerId:
                    type: string
                email:
                    type: string
            type: object
        GetApiReferralIfNewUserV1Resp:
            example: '{ "apiAgentCode": "ABCD1234", "rebateWorking": false,  "ifNewUser":true,  "referrerId": 39472261 }'
            properties:
                apiAgentCode:
                    type: string
                ifNewUser:
                    type: boolean
                rebateWorking:
                    type: boolean
                referrerId:
                    format: int64
                    type: integer
            type: object
        GetApiReferralKickbackRecentRecordV1Resp:
            example: '[ { "income": "0.02063898", "asset":"BTC", "symbol": "ETHBTC", "time":1544433328000 }, { "income": "1.2063898", "asset":"USDT", "symbol": "BTCUSDT", "time":1581580800000 } ]'
            items:
                $ref: '#/components/schemas/GetApiReferralKickbackRecentRecordV1RespItem'
            type: array
        GetApiReferralKickbackRecentRecordV1RespItem:
            properties:
                asset:
                    type: string
                income:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        GetApiReferralRebateRecentRecordV1Resp:
            example: '[ { "customerId": "", "email": "test*****@126.com", "income": "0.02063898", "asset":"BTC", "symbol": "ETHBTC", "time":1544433328000, "orderId": 10491232, "tradeId": 611123 }, { "customerId": "abd433", "email": "abcd*****@gmail.com", "income": "1.2063898", "asset":"USDT", "symbol": "BTCUSDT", "time":1581580800000, "orderId": 10500242, "tradeId": 612323 } ]'
            items:
                $ref: '#/components/schemas/GetApiReferralRebateRecentRecordV1RespItem'
            type: array
        GetApiReferralRebateRecentRecordV1RespItem:
            properties:
                asset:
                    type: string
                customerId:
                    type: string
                email:
                    type: string
                income:
                    type: string
                orderId:
                    format: int64
                    type: integer
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
                tradeId:
                    format: int64
                    type: integer
            type: object
        GetApiReferralUserCustomizationV1Resp:
            example: '{ "customerId": "abc123" }'
            properties:
                customerId:
                    type: string
            type: object
        GetAssetAssetDividendV1Resp:
            example: '{ "rows":[ { "id":1637366104, "amount":"10.00000000", "asset":"BHFT", "divTime":1563189166000, "enInfo":"BHFT distribution", "tranId":2968885920 }, { "id":1631750237, "amount":"10.00000000", "asset":"BHFT", "divTime":1563189165000, "enInfo":"BHFT distribution", "tranId":2968885920 } ], "total":2 }'
            properties:
                rows:
                    items:
                        properties:
                            amount:
                                type: string
                            asset:
                                type: string
                            divTime:
                                format: int64
                                type: integer
                            enInfo:
                                type: string
                            id:
                                type: integer
                            tranId:
                                format: int64
                                type: integer
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetAssetCustodyTransferHistoryV1Resp:
            example: '{ "total": 3316, "rows": [ { "clientTranId": "293915932290879488", "transferType": "Undelegate", "asset": "ETH", "amount": "1", "time": 1695205406000 }, { "clientTranId": "293915892281413632", "transferType": "Delegate", "asset": "ETH", "amount": "1", "time": 1695205396000 } ] }'
            properties:
                rows:
                    items:
                        properties:
                            amount:
                                type: string
                            asset:
                                type: string
                            clientTranId:
                                type: string
                            time:
                                format: int64
                                type: integer
                            transferType:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetAssetDribbletV1Resp:
            example: '{ "total": 8,    "userAssetDribblets": [ { "operateTime": 1615985535000, "totalTransferedAmount": "0.00132256",    "totalServiceChargeAmount": "0.00002699",     "transId": 45178372831, "userAssetDribbletDetails": [            { "transId": 4359321, "serviceChargeAmount": "0.000009", "amount": "0.0009", "operateTime": 1615985535000, "transferedAmount": "0.000441", "fromAsset": "USDT" }, { "transId": 4359321, "serviceChargeAmount": "0.00001799", "amount": "0.0009", "operateTime": 1615985535000, "transferedAmount": "0.00088156", "fromAsset": "ETH" } ] }, { "operateTime":1616203180000, "totalTransferedAmount": "0.00058795", "totalServiceChargeAmount": "0.000012", "transId": 4357015, "userAssetDribbletDetails": [ { "transId": 4357015, "serviceChargeAmount": "0.00001", "amount": "0.001", "operateTime": 1616203180000, "transferedAmount": "0.00049", "fromAsset": "USDT" }, { "transId": 4357015, "serviceChargeAmount": "0.000002", "amount": "0.0001", "operateTime": 1616203180000, "transferedAmount": "0.00009795", "fromAsset": "ETH" } ] } ] }'
            properties:
                total:
                    type: integer
                userAssetDribblets:
                    items:
                        properties:
                            operateTime:
                                format: int64
                                type: integer
                            totalServiceChargeAmount:
                                type: string
                            totalTransferedAmount:
                                type: string
                            transId:
                                format: int64
                                type: integer
                            userAssetDribbletDetails:
                                items:
                                    properties:
                                        amount:
                                            type: string
                                        fromAsset:
                                            type: string
                                        operateTime:
                                            format: int64
                                            type: integer
                                        serviceChargeAmount:
                                            type: string
                                        transId:
                                            format: int64
                                            type: integer
                                        transferedAmount:
                                            type: string
                                    type: object
                                type: array
                        type: object
                    type: array
            type: object
        GetAssetLedgerTransferCloudMiningQueryByPageV1Resp:
            example: '{ "total":5, "rows":[ {"createTime":1667880112000,"tranId":121230610120,"type":248,"asset":"USDT","amount":"25.0068","status":"S"}, {"createTime":1666776366000,"tranId":119991507468,"type":249,"asset":"USDT","amount":"0.027","status":"S"}, {"createTime":1666764505000,"tranId":119977966327,"type":248,"asset":"USDT","amount":"0.027","status":"S"}, {"createTime":1666758189000,"tranId":119973601721,"type":248,"asset":"USDT","amount":"0.018","status":"S"}, {"createTime":1666757278000,"tranId":119973028551,"type":248,"asset":"USDT","amount":"0.018","status":"S"} ] }'
            properties:
                rows:
                    items:
                        properties:
                            amount:
                                type: string
                            asset:
                                type: string
                            createTime:
                                format: int64
                                type: integer
                            status:
                                type: string
                            tranId:
                                format: int64
                                type: integer
                            type:
                                type: integer
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetAssetTradeFeeV1Resp:
            example: '[ { "symbol": "ADABNB", "makerCommission": "0.001", "takerCommission": "0.001" }, { "symbol": "BNBBTC", "makerCommission": "0.001", "takerCommission": "0.001" } ]'
            items:
                $ref: '#/components/schemas/GetAssetTradeFeeV1RespItem'
            type: array
        GetAssetTradeFeeV1RespItem:
            properties:
                makerCommission:
                    type: string
                symbol:
                    type: string
                takerCommission:
                    type: string
            type: object
        GetAssetTransferV1Resp:
            example: '{ "total":2, "rows":[ { "asset":"USDT", "amount":"1", "type":"MAIN_UMFUTURE", "status": "CONFIRMED",  "tranId": 11415955596, "timestamp":1544433328000 }, { "asset":"USDT", "amount":"2", "type":"MAIN_UMFUTURE", "status": "CONFIRMED", "tranId": 11366865406, "timestamp":1544433328000 } ] }'
            properties:
                rows:
                    items:
                        properties:
                            amount:
                                type: string
                            asset:
                                type: string
                            status:
                                type: string
                            timestamp:
                                format: int64
                                type: integer
                            tranId:
                                format: int64
                                type: integer
                            type:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetAssetWalletBalanceV1Resp:
            example: '[ { "activate": true, "balance": "0", "walletName": "Spot" }, { "activate": true, "balance": "0", "walletName": "Funding" }, { "activate": true, "balance": "0", "walletName": "Cross Margin" }, { "activate": true, "balance": "0", "walletName": "Isolated Margin" }, { "activate": true, "balance": "0.71842752", "walletName": "USDⓈ-M Futures" }, { "activate": true, "balance": "0", "walletName": "COIN-M Futures" }, { "activate": true, "balance": "0", "walletName": "Earn" }, { "activate": false, "balance": "0", "walletName": "Options" }, { "activate": true, "balance": "0", "walletName": "Trading Bots" }, { "activate": true, "balance": "0", "walletName": "Copy Trading" } ]'
            items:
                $ref: '#/components/schemas/GetAssetWalletBalanceV1RespItem'
            type: array
        GetAssetWalletBalanceV1RespItem:
            properties:
                activate:
                    type: boolean
                balance:
                    type: string
                walletName:
                    type: string
            type: object
        GetAvgPriceV3Resp:
            example: '{ "mins": 5,                     "price": "9.35751834",         "closeTime": 1694061154503     }'
            properties:
                closeTime:
                    format: int64
                    type: integer
                mins:
                    type: integer
                price:
                    type: string
            type: object
        GetBnbBurnV1Resp:
            example: '{ "spotBNBBurn":true, "interestBNBBurn": false }'
            properties:
                interestBNBBurn:
                    type: boolean
                spotBNBBurn:
                    type: boolean
            type: object
        GetBrokerInfoV1Resp:
            example: '{ "maxMakerCommission":0.002, "minMakerCommission":0.001, "maxTakerCommission":0.002, "minTakerCommission":0.001, "subAccountQty":400, "maxSubAccountQty":1000 }'
            properties:
                maxMakerCommission:
                    type: number
                maxSubAccountQty:
                    type: integer
                maxTakerCommission:
                    type: number
                minMakerCommission:
                    type: number
                minTakerCommission:
                    type: number
                subAccountQty:
                    type: integer
            type: object
        GetBrokerRebateFuturesRecentRecordV1Resp:
            example: '[ { "subaccountId": "1", "income": "0.02063898", "asset": "USDT", "symbol": "ETHUSDT", "tradeId": 123456, "time": 1544433328000, "status": 1 }, { "subaccountId": "2", "income": "0.02060008", "asset": "USDT", "symbol": "BTCUSDT", "tradeId": 223456, "time": 1544433328000, "status": 1 } ]'
            items:
                $ref: '#/components/schemas/GetBrokerRebateFuturesRecentRecordV1RespItem'
            type: array
        GetBrokerRebateFuturesRecentRecordV1RespItem:
            properties:
                asset:
                    type: string
                income:
                    type: string
                status:
                    type: integer
                subaccountId:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
                tradeId:
                    format: int64
                    type: integer
            type: object
        GetBrokerRebateRecentRecordV1Resp:
            example: '[ { "subaccountId":"1", "income": "0.02063898", "asset":"BTC", "symbol": "ETHBTC", "tradeId": 123456, "time":1544433328000, "status": 1 }, { "subaccountId":"2", "income": "1.2063898", "asset":"USDT", "symbol": "BTCUSDT", "tradeId": 223456, "time":1581580800000, "status": 1 } ]'
            items:
                $ref: '#/components/schemas/GetBrokerRebateRecentRecordV1RespItem'
            type: array
        GetBrokerRebateRecentRecordV1RespItem:
            properties:
                asset:
                    type: string
                income:
                    type: string
                status:
                    type: integer
                subaccountId:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
                tradeId:
                    format: int64
                    type: integer
            type: object
        GetBrokerSubAccountApiCommissionCoinFuturesV1Resp:
            example: '[ { "subAccountId": 1, "pair": "BTCUSD", "makerCommission": 450,  "takerCommission": 550  }, { "subAccountId": 1, "pair": "ETHUSD", "makerCommission": 400, "takerCommission": 500 } ]'
            items:
                $ref: '#/components/schemas/GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem'
            type: array
        GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem:
            properties:
                makerCommission:
                    type: integer
                pair:
                    type: string
                subAccountId:
                    format: int64
                    type: integer
                takerCommission:
                    type: integer
            type: object
        GetBrokerSubAccountApiCommissionFuturesV1Resp:
            example: '[ { "subAccountId": 1, "symbol": "BTCUSDT", "makerCommission": 450,  "takerCommission": 550  }, { "subAccountId": 1, "symbol": "ETHUSDT", "makerCommission": 400, "takerCommission": 500 } ]'
            items:
                $ref: '#/components/schemas/GetBrokerSubAccountApiCommissionFuturesV1RespItem'
            type: array
        GetBrokerSubAccountApiCommissionFuturesV1RespItem:
            properties:
                makerCommission:
                    type: integer
                subAccountId:
                    format: int64
                    type: integer
                symbol:
                    type: string
                takerCommission:
                    type: integer
            type: object
        GetBrokerSubAccountApiIpRestrictionV1Resp:
            example: '{ "subaccountId": "1", "ipRestrict": true, "apikey": "vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A", "ipList": [ "54.128.193.23", "542.234.192.290" ], "updateTime": 1544433328000 }'
            properties:
                apikey:
                    type: string
                ipList:
                    items:
                        type: string
                    type: array
                ipRestrict:
                    type: boolean
                subaccountId:
                    type: string
                updateTime:
                    format: int64
                    type: integer
            type: object
        GetBrokerSubAccountApiV1Resp:
            example: '[ { "apikey":"vmP*************", "subaccountId": "1", "canTrade": true, "marginTrade": true, "futuresTrade": false }, { "apikey":"5VN*************", "subaccountId": "1", "canTrade": true, "marginTrade": false, "futuresTrade": false } ]'
            items:
                $ref: '#/components/schemas/GetBrokerSubAccountApiV1RespItem'
            type: array
        GetBrokerSubAccountApiV1RespItem:
            properties:
                apikey:
                    type: string
                canTrade:
                    type: boolean
                futuresTrade:
                    type: boolean
                marginTrade:
                    type: boolean
                subaccountId:
                    type: string
            type: object
        GetBrokerSubAccountBnbBurnStatusV1Resp:
            example: '{ "subAccountId": 1, "spotBNBBurn": true, "interestBNBBurn": true }'
            properties:
                interestBNBBurn:
                    type: boolean
                spotBNBBurn:
                    type: boolean
                subAccountId:
                    format: int64
                    type: integer
            type: object
        GetBrokerSubAccountDepositHistV1Resp:
            example: '[ { "depositId": 1234567890123, "subAccountId": "1", "address": "0xddc66e4313fd6c737b6cae67cad90bb4e0ac7092", "addressTag": "", "amount": "139.04370000", "coin": "USDT", "insertTime": 1566791463000, "transferType": 0, "network": "ETH", "status": 1, "txId": "0x5759dfe9983a4c7619bce9bc736bb6c26f804091753bf66fa91e7cd5cfeebafd", "sourceAddress": "xxxxxxxxxxxxxx", "confirmTimes": "12/12", "selfReturnStatus": 0, "travelRuleStatus": 0  }, { "depositId": 1234567890123, "subAccountId": "2", "address": "0xddc66e4313fd6c737b6cae67kld90bb4e0ac7092", "addressTag": "", "amount": "1589.12345678", "coin": "BTC", "insertTime": 1566791463000, "transferType": 1, "network": "BNB", "status": 1, "txId": "Off-chain transfer dbea58fa48ef4cc59393da4552ae77d7", "sourceAddress": "xxxxxxxxxxxxxx", "confirmTimes": "12/12", "selfReturnStatus": 0, "travelRuleStatus": 1  } ]'
            items:
                $ref: '#/components/schemas/GetBrokerSubAccountDepositHistV1RespItem'
            type: array
        GetBrokerSubAccountDepositHistV1RespItem:
            properties:
                address:
                    type: string
                addressTag:
                    type: string
                amount:
                    type: string
                coin:
                    type: string
                confirmTimes:
                    type: string
                depositId:
                    format: int64
                    type: integer
                insertTime:
                    format: int64
                    type: integer
                network:
                    type: string
                selfReturnStatus:
                    type: integer
                sourceAddress:
                    type: string
                status:
                    type: integer
                subAccountId:
                    type: string
                transferType:
                    type: integer
                travelRuleStatus:
                    type: integer
                txId:
                    type: string
            type: object
        GetBrokerSubAccountDepositHistV2Resp:
            example: '[ { "depositId": 1234567890123, "subAccountId": "1", "address": "0xddc66e4313fd6c737b6cae67cad90bb4e0ac7092", "addressTag": "", "amount": "139.04370000", "coin": "USDT", "insertTime": 1566791463000, "transferType": 0, "network": "ETH", "status": 3, "txId": "0x5759dfe9983a4c7619bce9bc736bb6c26f804091753bf66fa91e7cd5cfeebafd", "confirmTimes": "12/12", "selfReturnStatus": 0 , "travelRuleStatus": 0  } ]'
            items:
                $ref: '#/components/schemas/GetBrokerSubAccountDepositHistV2RespItem'
            type: array
        GetBrokerSubAccountDepositHistV2RespItem:
            properties:
                address:
                    type: string
                addressTag:
                    type: string
                amount:
                    type: string
                coin:
                    type: string
                confirmTimes:
                    type: string
                depositId:
                    format: int64
                    type: integer
                insertTime:
                    format: int64
                    type: integer
                network:
                    type: string
                selfReturnStatus:
                    type: integer
                status:
                    type: integer
                subAccountId:
                    type: string
                transferType:
                    type: integer
                travelRuleStatus:
                    type: integer
                txId:
                    type: string
            type: object
        GetBrokerSubAccountMarginSummaryV1Resp:
            example: '{ "data":[ { "marginEnable": true,  "subAccountId": "367537027503425913", "totalAssetOfBtc": "0.03558520",   "totalLiabilityOfBtc": "0.34585210",  "totalNetAssetOfBtc" :"0.23334213",  "marginLevel": "0.009"  }, { "marginEnable": false, "subAccountId": "367537027503435242" } ], "timestamp": 1583127900000 }'
            properties:
                data:
                    items:
                        properties:
                            marginEnable:
                                type: boolean
                            marginLevel:
                                type: string
                            subAccountId:
                                type: string
                            totalAssetOfBtc:
                                type: string
                            totalLiabilityOfBtc:
                                type: string
                            totalNetAssetOfBtc:
                                type: string
                        type: object
                    type: array
                timestamp:
                    format: int64
                    type: integer
            type: object
        GetBrokerSubAccountSpotSummaryV1Resp:
            example: '{ "data":[ { "subAccountId": "367537027503425913", "totalBalanceOfBtc": "0.0355852154360000"  }, { "subAccountId": "367537027503421232", "totalBalanceOfBtc": "0.0233852154360000" } ], "timestamp": 1583432900000 }'
            properties:
                data:
                    items:
                        properties:
                            subAccountId:
                                type: string
                            totalBalanceOfBtc:
                                type: string
                        type: object
                    type: array
                timestamp:
                    format: int64
                    type: integer
            type: object
        GetBrokerSubAccountV1Resp:
            example: '[ { "subaccountId": "1", "email": "vai_42038996_47411276_brokersubuser@lac.info", "tag":"bob123", "makerCommission": 0.001, "takerCommission": 0.001, "marginMakerCommission": -1,   "marginTakerCommission": -1,   "createTime":1544433328000 }, { "subaccountId": "2", "email":"123@abc.com", "tag":"bob123", "makerCommission":0.001, "takerCommission":0.001, "marginMakerCommission": 10, "marginTakerCommission": 10, "createTime":1544433328000 } ]'
            items:
                $ref: '#/components/schemas/GetBrokerSubAccountV1RespItem'
            type: array
        GetBrokerSubAccountV1RespItem:
            properties:
                createTime:
                    format: int64
                    type: integer
                email:
                    type: string
                makerCommission:
                    type: number
                marginMakerCommission:
                    type: integer
                marginTakerCommission:
                    type: integer
                subaccountId:
                    type: string
                tag:
                    type: string
                takerCommission:
                    type: number
            type: object
        GetBrokerTransferFuturesV1Resp:
            example: '{ "success": true, "futuresType": 2, "transfers":[ { "from":"",   "to":"2", "asset":"BTC", "qty":"1", "tranId": "12137888538", "clientTranId":"a123", "time":1544433328000 }, { "fromId":"1", "toId":"2", "asset":"ETH", "qty":"2", "tranId": "12137888538", "clientTranId":"", "time":1544433328000 } ] }'
            properties:
                futuresType:
                    type: integer
                success:
                    type: boolean
                transfers:
                    items:
                        properties:
                            asset:
                                type: string
                            clientTranId:
                                type: string
                            from:
                                type: string
                            qty:
                                type: string
                            time:
                                format: int64
                                type: integer
                            to:
                                type: string
                            tranId:
                                type: string
                        type: object
                    type: array
            type: object
        GetBrokerTransferV1Resp:
            example: '[ { "fromId":"1", "toId":"2", "asset":"BTC", "qty":"1", "time":1544433328000, "txnId":"2966662589", "clientTranId":"abc", "status": "SUCCESS"   }, { "fromId":"1", "toId":"2", "asset":"ETH", "qty":"2", "time":1544433328000, "txnId":"296666999", "clientTranId":"", "status": "SUCCESS" } ]'
            items:
                $ref: '#/components/schemas/GetBrokerTransferV1RespItem'
            type: array
        GetBrokerTransferV1RespItem:
            properties:
                asset:
                    type: string
                clientTranId:
                    type: string
                fromId:
                    type: string
                qty:
                    type: string
                status:
                    type: string
                time:
                    format: int64
                    type: integer
                toId:
                    type: string
                txnId:
                    type: string
            type: object
        GetBrokerUniversalTransferV1Resp:
            example: '[ { "toId":"444016824578949121", "asset":"BTC", "qty":"0.1", "time":1544433328000, "status":"SUCCESS", "txnId":"12831078279", "clientTranId":"abc", "fromAccountType": "SPOT", "toAccountType": "USDT_FUTURE" }, { "toId":"444016824578949121", "asset":"USDT", "qty":"2", "time":1544433328000, "status":"SUCCESS", "txnId":"296666999", "clientTranId":"", "fromAccountType": "SPOT", "toAccountType": "USDT_FUTURE" } ]'
            items:
                $ref: '#/components/schemas/GetBrokerUniversalTransferV1RespItem'
            type: array
        GetBrokerUniversalTransferV1RespItem:
            properties:
                asset:
                    type: string
                clientTranId:
                    type: string
                fromAccountType:
                    type: string
                qty:
                    type: string
                status:
                    type: string
                time:
                    format: int64
                    type: integer
                toAccountType:
                    type: string
                toId:
                    type: string
                txnId:
                    type: string
            type: object
        GetCapitalConfigGetallV1Resp:
            example: '[ { "coin": "BTC", "depositAllEnable": true, "free": "0.08074558", "freeze": "0.00000000", "ipoable": "0.00000000", "ipoing": "0.00000000", "isLegalMoney": false, "locked": "0.00000000", "name": "Bitcoin", "networkList": [ { "addressRegex": "^(bnb1)[0-9a-z]{38}$", "coin": "BTC", "depositDesc": "Wallet Maintenance, Deposit Suspended",  "depositEnable": false, "isDefault": false, "memoRegex": "^[0-9A-Za-z-_]{1,120}$", "minConfirm": 1,   "name": "BEP2", "network": "BNB", "specialTips": "Both a MEMO and an Address are required to successfully deposit your BEP2-BTCB tokens to Binance.", "unLockConfirm": 0,   "withdrawDesc": "Wallet Maintenance, Withdrawal Suspended",  "withdrawEnable": false, "withdrawFee": "0.00000220", "withdrawIntegerMultiple": "0.00000001", "withdrawMax": "9999999999.99999999", "withdrawMin": "0.00000440", "withdrawInternalMin": "0.00000440",   "sameAddress": true,   "estimatedArrivalTime": 25, "busy": false, "contractAddressUrl": "https://bscscan.com/token/", "contractAddress": "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c" }, { "addressRegex": "^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$|^(bc1)[0-9A-Za-z]{39,59}$", "coin": "BTC", "depositEnable": true, "isDefault": true, "memoRegex": "", "minConfirm": 1, "name": "BTC", "network": "BTC", "specialTips": "", "unLockConfirm": 2, "withdrawEnable": true, "withdrawFee": "0.00050000", "withdrawIntegerMultiple": "0.00000001", "withdrawMax": "750", "withdrawMin": "0.00100000", "withdrawInternalMin": "0.00100000", "sameAddress": false, "estimatedArrivalTime": 25, "busy": false, "contractAddressUrl": "", "contractAddress": "" }, { "coin": "1MBABYDOGE", "depositAllEnable": true, "withdrawAllEnable": true, "name": "1M x BABYDOGE", "free": "34941.1", "locked": "0", "freeze": "0", "withdrawing": "0", "ipoing": "0", "ipoable": "0", "storage": "0", "isLegalMoney": false, "trading": true, "networkList": [ { "network": "BSC", "coin": "1MBABYDOGE", "withdrawIntegerMultiple": "0.01", "isDefault": false, "depositEnable": true, "withdrawEnable": true, "depositDesc": "", "withdrawDesc": "", "specialTips": "", "specialWithdrawTips": "", "name": "BNB Smart Chain (BEP20)", "resetAddressStatus": false, "addressRegex": "^(0x)[0-9A-Fa-f]{40}$", "memoRegex": "", "withdrawFee": "404", "withdrawMin": "808", "withdrawMax": "9999999999", "withdrawInternalMin": "0.01", "depositDust": "0.01", "minConfirm": 15, "unLockConfirm": 0, "sameAddress": false, "estimatedArrivalTime": 1, "busy": false, "contractAddressUrl": "https://bscscan.com/token/", "contractAddress": "0xc748673057861a797275cd8a068abb95a902e8de", "denomination": 1000000    }, { "network": "ETH", "coin": "1MBABYDOGE", "withdrawIntegerMultiple": "0.01", "isDefault": true, "depositEnable": true, "withdrawEnable": true, "depositDesc": "", "withdrawDesc": "", "specialTips": "", "specialWithdrawTips": "", "name": "Ethereum (ERC20)", "resetAddressStatus": false, "addressRegex": "^(0x)[0-9A-Fa-f]{40}$", "memoRegex": "", "withdrawFee": "2313", "withdrawMin": "4626", "withdrawMax": "9999999999", "withdrawInternalMin": "0.01", "depositDust": "0.01", "minConfirm": 6, "unLockConfirm": 64, "sameAddress": false, "estimatedArrivalTime": 2, "busy": false, "contractAddressUrl": "https://etherscan.io/address/", "contractAddress": "0xac57de9c1a09fec648e93eb98875b212db0d460b", "denomination": 1000000   } ] } ], "storage": "0.00000000", "trading": true, "withdrawAllEnable": true, "withdrawing": "0.00000000" } ]'
            items:
                $ref: '#/components/schemas/GetCapitalConfigGetallV1RespItem'
            type: array
        GetCapitalConfigGetallV1RespItem:
            properties:
                coin:
                    type: string
                depositAllEnable:
                    type: boolean
                free:
                    type: string
                freeze:
                    type: string
                ipoable:
                    type: string
                ipoing:
                    type: string
                isLegalMoney:
                    type: boolean
                locked:
                    type: string
                name:
                    type: string
                networkList:
                    items:
                        properties:
                            addressRegex:
                                type: string
                            busy:
                                type: boolean
                            coin:
                                type: string
                            contractAddress:
                                type: string
                            contractAddressUrl:
                                type: string
                            depositDesc:
                                type: string
                            depositEnable:
                                type: boolean
                            estimatedArrivalTime:
                                format: int64
                                type: integer
                            isDefault:
                                type: boolean
                            memoRegex:
                                type: string
                            minConfirm:
                                type: integer
                            name:
                                type: string
                            network:
                                type: string
                            sameAddress:
                                type: boolean
                            specialTips:
                                type: string
                            unLockConfirm:
                                type: integer
                            withdrawDesc:
                                type: string
                            withdrawEnable:
                                type: boolean
                            withdrawFee:
                                type: string
                            withdrawIntegerMultiple:
                                type: string
                            withdrawInternalMin:
                                type: string
                            withdrawMax:
                                type: string
                            withdrawMin:
                                type: string
                        type: object
                    type: array
                storage:
                    type: string
                trading:
                    type: boolean
                withdrawAllEnable:
                    type: boolean
                withdrawing:
                    type: string
            type: object
        GetCapitalDepositAddressListV1Resp:
            example: '[ { "coin": "ETH", "address": "0xD316E95Fd9E8E237Cb11f8200Babbc5D8D177BA4", "tag":"", "isDefault": 0 }, { "coin": "ETH", "address": "0xD316E95Fd9E8E237Cb11f8200Babbc5D8D177BA4", "tag":"", "isDefault": 0 }, { "coin": "ETH", "address": "0x00003ada75e7da97ba0db2fcde72131f712455e2", "tag":"", "isDefault": 1   } ]'
            items:
                $ref: '#/components/schemas/GetCapitalDepositAddressListV1RespItem'
            type: array
        GetCapitalDepositAddressListV1RespItem:
            properties:
                address:
                    type: string
                coin:
                    type: string
                isDefault:
                    type: integer
                tag:
                    type: string
            type: object
        GetCapitalDepositAddressV1Resp:
            example: '{ "address": "1HPn8Rx2y6nNSfagQBKy27GB99Vbzg89wv", "coin": "BTC", "tag": "", "url": "https://btc.com/1HPn8Rx2y6nNSfagQBKy27GB99Vbzg89wv" }'
            properties:
                address:
                    type: string
                coin:
                    type: string
                tag:
                    type: string
                url:
                    type: string
            type: object
        GetCapitalDepositHisrecV1Resp:
            example: '[ { "id": "769800519366885376", "amount": "0.001", "coin": "BNB", "network": "BNB", "status": 1, "address": "bnb136ns6lfw4zs5hg4n85vdthaad7hq5m4gtkgf23", "addressTag": "101764890", "txId": "98A3EA560C6B3336D348B6C83F0F95ECE4F1F5919E94BD006E5BF3BF264FACFC", "insertTime": 1661493146000, "completeTime":1661493146000, "transferType": 0, "confirmTimes": "1/1", "unlockConfirm": 0, "walletType": 0 }, { "id": "769754833590042625", "amount":"0.50000000", "coin":"IOTA", "network":"IOTA", "status":1, "address":"SIZ9VLMHWATXKV99LH99CIGFJFUMLEHGWVZVNNZXRJJVWBPHYWPPBOSDORZ9EQSHCZAMPVAPGFYQAUUV9DROOXJLNW", "addressTag":"", "txId":"ESBFVQUTPIWQNJSPXFNHNYHSQNTGKRVKPRABQWTAXCDWOAKDKYWPTVG9BGXNVNKTLEJGESAVXIKIZ9999", "insertTime":1599620082000, "completeTime":1661493146000, "transferType":0, "confirmTimes": "1/1", "unlockConfirm": 0, "walletType": 0 } ]'
            items:
                $ref: '#/components/schemas/GetCapitalDepositHisrecV1RespItem'
            type: array
        GetCapitalDepositHisrecV1RespItem:
            properties:
                address:
                    type: string
                addressTag:
                    type: string
                amount:
                    type: string
                coin:
                    type: string
                completeTime:
                    format: int64
                    type: integer
                confirmTimes:
                    type: string
                id:
                    type: string
                insertTime:
                    format: int64
                    type: integer
                network:
                    type: string
                status:
                    type: integer
                transferType:
                    type: integer
                txId:
                    type: string
                unlockConfirm:
                    type: integer
                walletType:
                    type: integer
            type: object
        GetCapitalDepositSubAddressV1Resp:
            example: '{ "address":"TDunhSa7jkTNuKrusUTU1MUHtqXoBPKETV", "coin":"USDT", "tag":"", "url":"https://tronscan.org/#/address/TDunhSa7jkTNuKrusUTU1MUHtqXoBPKETV" }'
            properties:
                address:
                    type: string
                coin:
                    type: string
                tag:
                    type: string
                url:
                    type: string
            type: object
        GetCapitalDepositSubHisrecV1Resp:
            example: '[ { "id": "769800519366885376", "amount": "0.001", "coin": "BNB", "network": "BNB", "status": 0, "address": "bnb136ns6lfw4zs5hg4n85vdthaad7hq5m4gtkgf23", "addressTag": "101764890", "txId": "98A3EA560C6B3336D348B6C83F0F95ECE4F1F5919E94BD006E5BF3BF264FACFC", "insertTime": 1661493146000, "transferType": 0, "confirmTimes": "1/1", "unlockConfirm": 0, "walletType": 0 }, { "id": "769754833590042625", "amount":"0.50000000", "coin":"IOTA", "network":"IOTA", "status":1, "address":"SIZ9VLMHWATXKV99LH99CIGFJFUMLEHGWVZVNNZXRJJVWBPHYWPPBOSDORZ9EQSHCZAMPVAPGFYQAUUV9DROOXJLNW", "addressTag":"", "txId":"ESBFVQUTPIWQNJSPXFNHNYHSQNTGKRVKPRABQWTAXCDWOAKDKYWPTVG9BGXNVNKTLEJGESAVXIKIZ9999", "insertTime":1599620082000, "transferType":0, "confirmTimes": "1/1", "unlockConfirm": 0, "walletType": 0 } ]'
            items:
                $ref: '#/components/schemas/GetCapitalDepositSubHisrecV1RespItem'
            type: array
        GetCapitalDepositSubHisrecV1RespItem:
            properties:
                address:
                    type: string
                addressTag:
                    type: string
                amount:
                    type: string
                coin:
                    type: string
                confirmTimes:
                    type: string
                id:
                    type: string
                insertTime:
                    format: int64
                    type: integer
                network:
                    type: string
                status:
                    type: integer
                transferType:
                    type: integer
                txId:
                    type: string
                unlockConfirm:
                    type: integer
                walletType:
                    type: integer
            type: object
        GetCapitalWithdrawAddressListV1Resp:
            example: '[ { "address": "1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa", "addressTag": "", "coin": "BTC", "name": "Satoshi",         "network": "BTC", "origin": "bla",       "originType": "others",   "whiteStatus": true       } ]'
            items:
                $ref: '#/components/schemas/GetCapitalWithdrawAddressListV1RespItem'
            type: array
        GetCapitalWithdrawAddressListV1RespItem:
            properties:
                address:
                    type: string
                addressTag:
                    type: string
                coin:
                    type: string
                name:
                    type: string
                network:
                    type: string
                originType:
                    type: string
                whiteStatus:
                    type: boolean
            type: object
        GetCapitalWithdrawHistoryV1Resp:
            example: '[ { "id": "b6ae22b3aa844210a7041aee7589627c",   "amount": "8.91000000",    "transactionFee": "0.004",  "coin": "USDT", "status": 6, "address": "0x94df8b352de7f46f64b01d3666bf6e936e44ce60", "txId": "0xb5ef8c13b968a406cc62a93a8bd80f9e9a906ef1b3fcf20a2e48573c17659268",    "applyTime": "2019-10-12 11:12:02",   "network": "ETH", "transferType": 0,  "withdrawOrderId": "WITHDRAWtest123",  "info": "The address is not valid. Please confirm with the recipient",   "confirmNo":3,   "walletType": 1,   "txKey": "", "completeTime": "2023-03-23 16:52:41"  }, { "id": "156ec387f49b41df8724fa744fa82719", "amount": "0.00150000", "transactionFee": "0.004", "coin": "BTC", "status": 6, "address": "1FZdVHtiBqMrWdjPyRPULCUceZPJ2WLCsB", "txId": "60fd9007ebfddc753455f95fafa808c4302c836e4d1eebc5a132c36c1d8ac354", "applyTime": "2019-09-24 12:43:45", "network": "BTC", "transferType": 0, "info": "", "confirmNo": 2, "walletType": 1, "txKey": "", "completeTime": "2023-03-23 16:52:41" } ]'
            items:
                $ref: '#/components/schemas/GetCapitalWithdrawHistoryV1RespItem'
            type: array
        GetCapitalWithdrawHistoryV1RespItem:
            properties:
                address:
                    type: string
                amount:
                    type: string
                applyTime:
                    type: string
                coin:
                    type: string
                completeTime:
                    type: string
                confirmNo:
                    type: integer
                id:
                    type: string
                info:
                    type: string
                network:
                    type: string
                status:
                    type: integer
                transactionFee:
                    type: string
                transferType:
                    type: integer
                txId:
                    type: string
                txKey:
                    type: string
                walletType:
                    type: integer
                withdrawOrderId:
                    type: string
            type: object
        GetConvertAssetInfoV1Resp:
            example: '[ { "asset": "BTC", "fraction": 8 }, { "asset": "SHIB", "fraction": 2 } ]'
            items:
                $ref: '#/components/schemas/GetConvertAssetInfoV1RespItem'
            type: array
        GetConvertAssetInfoV1RespItem:
            properties:
                asset:
                    type: string
                fraction:
                    type: integer
            type: object
        GetConvertExchangeInfoV1Resp:
            example: '[ { "fromAsset":"BTC", "toAsset":"USDT", "fromAssetMinAmount":"0.0004", "fromAssetMaxAmount":"50", "toAssetMinAmount":"20", "toAssetMaxAmount":"2500000" } ]'
            items:
                $ref: '#/components/schemas/GetConvertExchangeInfoV1RespItem'
            type: array
        GetConvertExchangeInfoV1RespItem:
            properties:
                fromAsset:
                    type: string
                fromAssetMaxAmount:
                    type: string
                fromAssetMinAmount:
                    type: string
                toAsset:
                    type: string
                toAssetMaxAmount:
                    type: string
                toAssetMinAmount:
                    type: string
            type: object
        GetConvertOrderStatusV1Resp:
            example: '{ "orderId":933256278426274426, "orderStatus":"SUCCESS", "fromAsset":"BTC", "fromAmount":"0.00054414", "toAsset":"USDT", "toAmount":"20", "ratio":"36755", "inverseRatio":"0.00002721", "createTime":1623381330472 }'
            properties:
                createTime:
                    format: int64
                    type: integer
                fromAmount:
                    type: string
                fromAsset:
                    type: string
                inverseRatio:
                    type: string
                orderId:
                    format: int64
                    type: integer
                orderStatus:
                    type: string
                ratio:
                    type: string
                toAmount:
                    type: string
                toAsset:
                    type: string
            type: object
        GetConvertTradeFlowV1Resp:
            example: '{ "list": [ { "quoteId": "f3b91c525b2644c7bc1e1cd31b6e1aa6", "orderId": 940708407462087195, "orderStatus": "SUCCESS",   "fromAsset": "USDT",        "fromAmount": "20",         "toAsset": "BNB",           "toAmount": "0.06154036",   "ratio": "0.00307702",      "inverseRatio": "324.99",   "createTime": 1624248872184 } ], "startTime": 1623824139000, "endTime": 1626416139000, "limit": 100, "moreData": false }'
            properties:
                endTime:
                    format: int64
                    type: integer
                limit:
                    type: integer
                list:
                    items:
                        properties:
                            createTime:
                                format: int64
                                type: integer
                            fromAmount:
                                type: string
                            fromAsset:
                                type: string
                            inverseRatio:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            orderStatus:
                                type: string
                            quoteId:
                                type: string
                            ratio:
                                type: string
                            toAmount:
                                type: string
                            toAsset:
                                type: string
                        type: object
                    type: array
                moreData:
                    type: boolean
                startTime:
                    format: int64
                    type: integer
            type: object
        GetCopyTradingFuturesLeadSymbolV1Resp:
            example: '{ "code": "000000", "message": "success", "data": [ { "symbol": "BTCUSDT", "baseAsset": "BTC", "quoteAsset": "USDT" }, { "symbol": "ETHUSDT", "baseAsset": "ETH", "quoteAsset": "USDT" } ] }'
            properties:
                code:
                    type: string
                data:
                    items:
                        properties:
                            baseAsset:
                                type: string
                            quoteAsset:
                                type: string
                            symbol:
                                type: string
                        type: object
                    type: array
                message:
                    type: string
            type: object
        GetCopyTradingFuturesUserStatusV1Resp:
            example: '{ "code": "000000", "message": "success", "data": { "isLeadTrader": true, "time": 1717382310843 }, "success": true }'
            properties:
                code:
                    type: string
                data:
                    properties:
                        isLeadTrader:
                            type: boolean
                        time:
                            format: int64
                            type: integer
                    type: object
                message:
                    type: string
                success:
                    type: boolean
            type: object
        GetDciProductAccountsV1Resp:
            example: '{ "totalAmountInBTC": "0.01067982",   "totalAmountInUSDT": "77.13289230"  }'
            properties:
                totalAmountInBTC:
                    type: string
                totalAmountInUSDT:
                    type: string
            type: object
        GetDciProductListV1Resp:
            example: '{ "total": 1, "list": [ { "id": "741590", "investCoin": "USDT", "exercisedCoin": "BNB", "strikePrice": "380", "duration": 4, "settleDate": 1709020800000, "purchaseDecimal": 8, "purchaseEndTime": 1708934400000, "canPurchase": true,  "apr": "0.6076", "orderId": 8257205859, "minAmount": "0.1", "maxAmount": "25265.7", "createTimestamp": 1708560084000, "optionType": "PUT", "isAutoCompoundEnable": true,  "autoCompoundPlanList": [ "STANDARD", "ADVANCE" ] } ] }'
            properties:
                list:
                    items:
                        properties:
                            apr:
                                type: string
                            autoCompoundPlanList:
                                items:
                                    type: string
                                type: array
                            canPurchase:
                                type: boolean
                            createTimestamp:
                                format: int64
                                type: integer
                            duration:
                                type: integer
                            exercisedCoin:
                                type: string
                            id:
                                type: string
                            investCoin:
                                type: string
                            isAutoCompoundEnable:
                                type: boolean
                            maxAmount:
                                type: string
                            minAmount:
                                type: string
                            optionType:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            purchaseDecimal:
                                type: integer
                            purchaseEndTime:
                                format: int64
                                type: integer
                            settleDate:
                                type: integer
                            strikePrice:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetDciProductPositionsV1Resp:
            example: '{ "total": 1, "list": [ { "id": "10160533",  "investCoin": "USDT", "exercisedCoin": "BNB", "subscriptionAmount": "0.5", "strikePrice": "330", "duration": 4, "settleDate": 1708416000000, "purchaseStatus": "PURCHASE_SUCCESS", "apr": "0.0365", "orderId": 7973677530, "purchaseEndTime": 1708329600000,  "optionType": "PUT", "autoCompoundPlan": "STANDARD"  } ] }'
            properties:
                list:
                    items:
                        properties:
                            apr:
                                type: string
                            autoCompoundPlan:
                                type: string
                            duration:
                                type: integer
                            exercisedCoin:
                                type: string
                            id:
                                type: string
                            investCoin:
                                type: string
                            optionType:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            purchaseEndTime:
                                format: int64
                                type: integer
                            purchaseStatus:
                                type: string
                            settleDate:
                                type: integer
                            strikePrice:
                                type: string
                            subscriptionAmount:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetDepthV3Resp:
            example: '{ "lastUpdateId": 1027024, "bids": [ [ "4.00000000",      "431.00000000"     ] ], "asks": [ [ "4.00000200", "12.00000000" ] ] }'
            properties:
                asks:
                    items:
                        items:
                            type: string
                        type: array
                    type: array
                bids:
                    items:
                        items:
                            type: string
                        type: array
                    type: array
                lastUpdateId:
                    format: int64
                    type: integer
            type: object
        GetEthStakingAccountV2Resp:
            example: '{ "holdingInETH":"1.22330928", "holdings":{ "wbethAmount":"1.10928781", "bethAmount":"1.90002112" }, "thirtyDaysProfitInETH":"0.22330928", "profit":{ "amountFromWBETH":"0.12330928", "amountFromBETH":"0.1" } }'
            properties:
                holdingInETH:
                    type: string
                holdings:
                    properties:
                        bethAmount:
                            type: string
                        wbethAmount:
                            type: string
                    type: object
                profit:
                    properties:
                        amountFromBETH:
                            type: string
                        amountFromWBETH:
                            type: string
                    type: object
                thirtyDaysProfitInETH:
                    type: string
            type: object
        GetEthStakingEthHistoryRateHistoryV1Resp:
            example: '{ "rows": [ { "annualPercentageRate": "0.00006408",   "exchangeRate": "1.00121234",   "time": 1577233578000 } ], "total": "1" }'
            properties:
                rows:
                    items:
                        properties:
                            annualPercentageRate:
                                type: string
                            exchangeRate:
                                type: string
                            time:
                                format: int64
                                type: integer
                        type: object
                    type: array
                total:
                    type: string
            type: object
        GetEthStakingEthHistoryRedemptionHistoryV1Resp:
            example: '{ "rows": [ { "time": 1575018510000, "arrivalTime": 1575018510000, "asset": "WBETH", "amount": "21312.23223", "distributeAsset":"ETH", "distributeAmount":"21338.0699", "conversionRatio": "1.00121234", "status": "SUCCESS"  } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            amount:
                                type: string
                            arrivalTime:
                                format: int64
                                type: integer
                            asset:
                                type: string
                            conversionRatio:
                                type: string
                            distributeAmount:
                                type: string
                            distributeAsset:
                                type: string
                            status:
                                type: string
                            time:
                                format: int64
                                type: integer
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetEthStakingEthHistoryRewardsHistoryV1Resp:
            example: '{ "rows": [ { "time": 1575018510000, "asset": "BETH", "holding": "2.3223",  "amount": "0.23223",  "annualPercentageRate": "0.5",  "status": "SUCCESS" } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            amount:
                                type: string
                            annualPercentageRate:
                                type: string
                            asset:
                                type: string
                            holding:
                                type: string
                            status:
                                type: string
                            time:
                                format: int64
                                type: integer
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetEthStakingEthHistoryStakingHistoryV1Resp:
            example: '{ "rows": [ { "time": 1575018510000, "asset": "ETH", "amount": "21312.23223", "distributeAsset":"WBETH", "distributeAmount":"21286.42584", "conversionRatio": "1.00121234", "status": "SUCCESS"  } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            amount:
                                type: string
                            asset:
                                type: string
                            conversionRatio:
                                type: string
                            distributeAmount:
                                type: string
                            distributeAsset:
                                type: string
                            status:
                                type: string
                            time:
                                format: int64
                                type: integer
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetEthStakingEthHistoryWbethRewardsHistoryV1Resp:
            example: '{ "estRewardsInETH":"1.23230920", "rows":[ { "time":1575018510000, "amountInETH":"0.23223", "holding":"2.3223",  "holdingInETH":"2.4231", "annualPercentageRate":"0.5" } ], "total": 1 }'
            properties:
                estRewardsInETH:
                    type: string
                rows:
                    items:
                        properties:
                            amountInETH:
                                type: string
                            annualPercentageRate:
                                type: string
                            holding:
                                type: string
                            holdingInETH:
                                type: string
                            time:
                                format: int64
                                type: integer
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetEthStakingEthQuotaV1Resp:
            example: '{ "leftStakingPersonalQuota": "1000",  "leftRedemptionPersonalQuota": "1000"  }'
            properties:
                leftRedemptionPersonalQuota:
                    type: string
                leftStakingPersonalQuota:
                    type: string
            type: object
        GetEthStakingWbethHistoryUnwrapHistoryV1Resp:
            example: '{ "rows": [ { "time": 1575018510000, "fromAsset": "WBETH", "fromAmount": "21312.23223", "toAsset": "BETH", "toAmount": "21312.23223", "exchangeRate": "1.01243253",  "status": "SUCCESS"  } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            exchangeRate:
                                type: string
                            fromAmount:
                                type: string
                            fromAsset:
                                type: string
                            status:
                                type: string
                            time:
                                format: int64
                                type: integer
                            toAmount:
                                type: string
                            toAsset:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetEthStakingWbethHistoryWrapHistoryV1Resp:
            example: '{ "rows": [ { "time": 1575018510000, "fromAsset": "BETH", "fromAmount": "21312.23223", "toAsset": "WBETH", "toAmount": "21312.23223", "exchangeRate": "1.01243253",  "status": "SUCCESS"  } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            exchangeRate:
                                type: string
                            fromAmount:
                                type: string
                            fromAsset:
                                type: string
                            status:
                                type: string
                            time:
                                format: int64
                                type: integer
                            toAmount:
                                type: string
                            toAsset:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetFuturesHistDataLinkV1Resp:
            example: '{ "data": [ { "day": "2023-06-30", "url": "https://bin-prod-user-rebate-bucket.s3.ap-northeast-1.amazonaws.com/future-data-symbol-update/2023-06-30/BTCUSDT_T_DEPTH_2023-06-30.tar.gz" } ] }'
            properties:
                data:
                    items:
                        properties:
                            day:
                                type: string
                            url:
                                type: string
                        type: object
                    type: array
            type: object
        GetHistoricalTradesV3Resp:
            example: '[ { "id": 28457, "price": "4.00000100", "qty": "12.00000000", "quoteQty": "48.000012", "time": 1499865549590, "isBuyerMaker": true, "isBestMatch": true } ]'
            items:
                $ref: '#/components/schemas/GetHistoricalTradesV3RespItem'
            type: array
        GetHistoricalTradesV3RespItem:
            properties:
                id:
                    type: integer
                isBestMatch:
                    type: boolean
                isBuyerMaker:
                    type: boolean
                price:
                    type: string
                qty:
                    type: string
                quoteQty:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        GetLoanBorrowHistoryV1Resp:
            example: '{ "rows": [ { "orderId": 100000001, "loanCoin": "BUSD", "initialLoanAmount": "10000", "hourlyInterestRate": "0.000057", "loanTerm": "7", "collateralCoin": "BNB", "initialCollateralAmount": "49.27565492", "borrowTime": 1575018510000, "status": "Repaid"  } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            borrowTime:
                                format: int64
                                type: integer
                            collateralCoin:
                                type: string
                            hourlyInterestRate:
                                type: string
                            initialCollateralAmount:
                                type: string
                            initialLoanAmount:
                                type: string
                            loanCoin:
                                type: string
                            loanTerm:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            status:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanFlexibleBorrowHistoryV2Resp:
            example: '{ "rows": [ { "loanCoin": "BUSD", "initialLoanAmount": "10000", "collateralCoin": "BNB", "initialCollateralAmount": "49.27565492", "borrowTime": 1575018510000, "status": "SUCCESS"  } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            borrowTime:
                                format: int64
                                type: integer
                            collateralCoin:
                                type: string
                            initialCollateralAmount:
                                type: string
                            initialLoanAmount:
                                type: string
                            loanCoin:
                                type: string
                            status:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanFlexibleCollateralDataV2Resp:
            example: '{ "rows": [ { "collateralCoin": "BNB", "initialLTV": "0.65", "marginCallLTV": "0.75", "liquidationLTV": "0.83", "maxLimit": "1000000" } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            collateralCoin:
                                type: string
                            initialLTV:
                                type: string
                            liquidationLTV:
                                type: string
                            marginCallLTV:
                                type: string
                            maxLimit:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanFlexibleLiquidationHistoryV2Resp:
            example: '{ "rows": [ { "loanCoin": "BUSD", "liquidationDebt": "10000", "collateralCoin": "BNB", "liquidationCollateralAmount": "123", "returnCollateralAmount": "0.2", "liquidationFee": "1.2", "liquidationStartingPrice": "49.27565492", "liquidationStartingTime": 1575018510000, "status": "Liquidated"  } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            collateralCoin:
                                type: string
                            liquidationCollateralAmount:
                                type: string
                            liquidationDebt:
                                type: string
                            liquidationFee:
                                type: string
                            liquidationStartingPrice:
                                type: string
                            liquidationStartingTime:
                                format: int64
                                type: integer
                            loanCoin:
                                type: string
                            returnCollateralAmount:
                                type: string
                            status:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanFlexibleLoanableDataV2Resp:
            example: '{ "rows": [ { "loanCoin": "BUSD", "flexibleInterestRate": "0.00000491", "flexibleMinLimit": "100", "flexibleMaxLimit": "1000000" } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            flexibleInterestRate:
                                type: string
                            flexibleMaxLimit:
                                type: string
                            flexibleMinLimit:
                                type: string
                            loanCoin:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanFlexibleLtvAdjustmentHistoryV2Resp:
            example: '{ "rows": [ { "loanCoin": "BUSD", "collateralCoin": "BNB", "direction": "ADDITIONAL", "collateralAmount": "5.235", "preLTV": "0.78", "afterLTV": "0.56", "adjustTime": 1575018510000 } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            adjustTime:
                                format: int64
                                type: integer
                            afterLTV:
                                type: string
                            collateralAmount:
                                type: string
                            collateralCoin:
                                type: string
                            direction:
                                type: string
                            loanCoin:
                                type: string
                            preLTV:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanFlexibleOngoingOrdersV2Resp:
            example: '{ "rows": [ { "loanCoin": "BUSD", "totalDebt": "10000", "collateralCoin": "BNB", "collateralAmount": "49.27565492", "currentLTV": "0.57" } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            collateralAmount:
                                type: string
                            collateralCoin:
                                type: string
                            currentLTV:
                                type: string
                            loanCoin:
                                type: string
                            totalDebt:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanFlexibleRepayHistoryV2Resp:
            example: '{ "rows": [ { "loanCoin": "BUSD", "repayAmount": "10000", "collateralCoin": "BNB", "collateralReturn": "49.27565492", "repayStatus": "Repaid",  "repayTime": 1575018510000 } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            collateralCoin:
                                type: string
                            collateralReturn:
                                type: string
                            loanCoin:
                                type: string
                            repayAmount:
                                type: string
                            repayStatus:
                                type: string
                            repayTime:
                                format: int64
                                type: integer
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanFlexibleRepayRateV2Resp:
            example: '{ "loanCoin": "BUSD", "collateralCoin": "BNB", "rate": "300.36781234"  }'
            properties:
                collateralCoin:
                    type: string
                loanCoin:
                    type: string
                rate:
                    type: string
            type: object
        GetLoanIncomeV1Resp:
            example: '[ { "asset": "BUSD", "type": "borrowIn", "amount": "100", "timestamp": 1633771139847, "tranId": "80423589583" }, { "asset": "BUSD", "type": "borrowIn", "amount": "100", "timestamp": 1634638371496, "tranId": "81685123491" } ]'
            items:
                $ref: '#/components/schemas/GetLoanIncomeV1RespItem'
            type: array
        GetLoanIncomeV1RespItem:
            properties:
                amount:
                    type: string
                asset:
                    type: string
                timestamp:
                    format: int64
                    type: integer
                tranId:
                    type: string
                type:
                    type: string
            type: object
        GetLoanLtvAdjustmentHistoryV1Resp:
            example: '{ "rows": [ { "loanCoin": "BUSD", "collateralCoin": "BNB", "direction": "ADDITIONAL", "amount": "5.235", "preLTV": "0.78", "afterLTV": "0.56", "adjustTime": 1575018510000, "orderId": 756783308056935434 } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            adjustTime:
                                format: int64
                                type: integer
                            afterLTV:
                                type: string
                            amount:
                                type: string
                            collateralCoin:
                                type: string
                            direction:
                                type: string
                            loanCoin:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            preLTV:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanRepayHistoryV1Resp:
            example: '{ "rows": [ { "loanCoin": "BUSD", "repayAmount": "10000", "collateralCoin": "BNB", "collateralUsed": "0", "collateralReturn": "49.27565492", "repayType": "1",  "repayStatus": "Repaid",  "repayTime": 1575018510000, "orderId": 756783308056935434 } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            collateralCoin:
                                type: string
                            collateralReturn:
                                type: string
                            collateralUsed:
                                type: string
                            loanCoin:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            repayAmount:
                                type: string
                            repayStatus:
                                type: string
                            repayTime:
                                format: int64
                                type: integer
                            repayType:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanVipAccruedInterestV1Resp:
            example: '{ "rows": [ { "loanCoin": "USDT", "principalAmount": "10000", "interestAmount": "1.2", "annualInterestRate": "0.001273", "accrualTime": 1575018510000, "orderId": 756783308056935434  } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            accrualTime:
                                format: int64
                                type: integer
                            annualInterestRate:
                                type: string
                            interestAmount:
                                type: string
                            loanCoin:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            principalAmount:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanVipCollateralAccountV1Resp:
            example: '{ "rows": [ { "collateralAccountId": "12345678", "collateralCoin": "BNB,BTC,ETH" }, { "collateralAccountId": "23456789", "collateralCoin": "BNB,BTC,ETH" } ], "total": 2 }'
            properties:
                rows:
                    items:
                        properties:
                            collateralAccountId:
                                type: string
                            collateralCoin:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanVipCollateralDataV1Resp:
            example: '{ "rows": [ { "collateralCoin": "BUSD", "_1stCollateralRatio": "100%", "_1stCollateralRange": "1-10000000", "_2ndCollateralRatio": "80%", "_2ndCollateralRange": "10000000-100000000", "_3rdCollateralRatio": "60%", "_3rdCollateralRange": "100000000-1000000000", "_4thCollateralRatio": "0%", "_4thCollateralRange": ">10000000000" } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            _1stCollateralRange:
                                type: string
                            _1stCollateralRatio:
                                type: string
                            _2ndCollateralRange:
                                type: string
                            _2ndCollateralRatio:
                                type: string
                            _3rdCollateralRange:
                                type: string
                            _3rdCollateralRatio:
                                type: string
                            _4thCollateralRange:
                                type: string
                            _4thCollateralRatio:
                                type: string
                            collateralCoin:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanVipInterestRateHistoryV1Resp:
            example: '{ "rows": [ { "coin": "USDT", "annualizedInterestRate": "0.0647", "time": 1575018510000, "coin": "USDT", "annualizedInterestRate": "0.0647", "time": 1575018510000 } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            annualizedInterestRate:
                                type: string
                            coin:
                                type: string
                            time:
                                format: int64
                                type: integer
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanVipLoanableDataV1Resp:
            example: '{ "rows": [ { "loanCoin": "BUSD", "_flexibleDailyInterestRate": "0.001503", "_flexibleYearlyInterestRate": "0.548595", "_30dDailyInterestRate": "0.000136", "_30dYearlyInterestRate": "0.03450", "_60dDailyInterestRate": "0.000145", "_60dYearlyInterestRate": "0.04103", "minLimit": "100", "maxLimit": "1000000", "vipLevel": 1 } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            _30dDailyInterestRate:
                                type: string
                            _30dYearlyInterestRate:
                                type: string
                            _60dDailyInterestRate:
                                type: string
                            _60dYearlyInterestRate:
                                type: string
                            _flexibleDailyInterestRate:
                                type: string
                            _flexibleYearlyInterestRate:
                                type: string
                            loanCoin:
                                type: string
                            maxLimit:
                                type: string
                            minLimit:
                                type: string
                            vipLevel:
                                type: integer
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanVipOngoingOrdersV1Resp:
            example: '{ "rows": [ { "orderId": 100000001, "loanCoin": "BUSD", "totalDebt": "10000", "residualInterest": "10.27687923", "collateralAccountId": "12345678,23456789", "collateralCoin": "BNB,BTC,ETH", "totalCollateralValueAfterHaircut": "25000.27565492", "lockedCollateralValue": "25000.27565492", "currentLTV": "0.57", "expirationTime": 1575018510000, "loanDate": "1676851200000", "loanTerm": "30days",                 "expirationTime": 1575018510000       } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            collateralAccountId:
                                type: string
                            collateralCoin:
                                type: string
                            currentLTV:
                                type: string
                            expirationTime:
                                format: int64
                                type: integer
                            loanCoin:
                                type: string
                            loanDate:
                                type: string
                            loanTerm:
                                type: string
                            lockedCollateralValue:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            residualInterest:
                                type: string
                            totalCollateralValueAfterHaircut:
                                type: string
                            totalDebt:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanVipRepayHistoryV1Resp:
            example: '{ "rows": [ { "loanCoin": "BUSD", "repayAmount": "10000", "collateralCoin": "BNB,BTC,ETH", "repayStatus": "Repaid",  "loanDate": "1676851200000", "repayTime": "1575018510000", "orderId": "756783308056935434" } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            collateralCoin:
                                type: string
                            loanCoin:
                                type: string
                            loanDate:
                                type: string
                            orderId:
                                type: string
                            repayAmount:
                                type: string
                            repayStatus:
                                type: string
                            repayTime:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanVipRequestDataV1Resp:
            example: '{ "rows": [ { "loanAccountId": "12345678",  "orderId": "12345678", "requestId": "12345678", "loanCoin": "BTC", "loanAmount": "100.55", "collateralAccountId": "12345678,12345678,12345678", "collateralCoin": "BUSD,USDT,ETH", "loanTerm": "30", "status": "Repaid",  "loanDate":"1676851200000" } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            collateralAccountId:
                                type: string
                            collateralCoin:
                                type: string
                            loanAccountId:
                                type: string
                            loanAmount:
                                type: string
                            loanCoin:
                                type: string
                            loanDate:
                                type: string
                            loanTerm:
                                type: string
                            orderId:
                                type: string
                            requestId:
                                type: string
                            status:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetLoanVipRequestInterestRateV1Resp:
            example: '[ { "asset": "BUSD", "flexibleDailyInterestRate": "0.001503", "flexibleYearlyInterestRate": "0.548595", "time": 1577233578000 }, { "asset": "BTC", "flexibleDailyInterestRate": "0.001503", "flexibleYearlyInterestRate": "0.548595", "time": 1577233562000 } ]'
            items:
                $ref: '#/components/schemas/GetLoanVipRequestInterestRateV1RespItem'
            type: array
        GetLoanVipRequestInterestRateV1RespItem:
            properties:
                asset:
                    type: string
                flexibleDailyInterestRate:
                    type: string
                flexibleYearlyInterestRate:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        GetLocalentityDepositHistoryV1Resp:
            example: '[ { "trId": 123451123, "tranId": 17644346245865, "amount": "0.001", "coin": "BNB", "network": "BNB", "depositStatus": 0, "travelRuleStatus": 1, "address": "bnb136ns6lfw4zs5hg4n85vdthaad7hq5m4gtkgf23", "addressTag": "101764890", "txId": "98A3EA560C6B3336D348B6C83F0F95ECE4F1F5919E94BD006E5BF3BF264FACFC", "insertTime": 1661493146000, "transferType": 0, "confirmTimes": "1/1", "unlockConfirm": 0, "walletType": 0, "requireQuestionnaire": true, "questionnaire": null }, { "trId": 2451123, "tranId": 4544346245865, "amount":"0.50000000", "coin":"IOTA", "network":"IOTA", "depositStatus": 0, "travelRuleStatus": 0, "address":"SIZ9VLMHWATXKV99LH99CIGFJFUMLEHGWVZVNNZXRJJVWBPHYWPPBOSDORZ9EQSHCZAMPVAPGFYQAUUV9DROOXJLNW", "addressTag":"", "txId":"ESBFVQUTPIWQNJSPXFNHNYHSQNTGKRVKPRABQWTAXCDWOAKDKYWPTVG9BGXNVNKTLEJGESAVXIKIZ9999", "insertTime":1599620082000, "transferType":0, "confirmTimes": "1/1", "unlockConfirm": 0, "walletType": 0, "requireQuestionnaire": false, "questionnaire": "{''question1'':''answer1'',''question2'':''answer2''}" } ]'
            items:
                $ref: '#/components/schemas/GetLocalentityDepositHistoryV1RespItem'
            type: array
        GetLocalentityDepositHistoryV1RespItem:
            properties:
                address:
                    type: string
                addressTag:
                    type: string
                amount:
                    type: string
                coin:
                    type: string
                confirmTimes:
                    type: string
                depositStatus:
                    type: integer
                insertTime:
                    format: int64
                    type: integer
                network:
                    type: string
                questionnaire:
                    nullable: true
                    type: object
                requireQuestionnaire:
                    type: boolean
                trId:
                    format: int64
                    type: integer
                tranId:
                    format: int64
                    type: integer
                transferType:
                    type: integer
                travelRuleStatus:
                    type: integer
                txId:
                    type: string
                unlockConfirm:
                    type: integer
                walletType:
                    type: integer
            type: object
        GetLocalentityVaspV1Resp:
            example: '[ { "vaspName":"Binance", "vaspCode":"BINANCE" }, { "vaspName":"HashKeyGlobal", "vaspCode":"NVBH3Z_nNEHjvqbUfkaL" } ]'
            items:
                $ref: '#/components/schemas/GetLocalentityVaspV1RespItem'
            type: array
        GetLocalentityVaspV1RespItem:
            properties:
                vaspCode:
                    type: string
                vaspName:
                    type: string
            type: object
        GetLocalentityWithdrawHistoryV1Resp:
            example: '[ { "id": "b6ae22b3aa844210a7041aee7589627c",   "trId": 1234456,   "amount": "8.91000000",    "transactionFee": "0.004",  "coin": "USDT", "withdrawalStatus": 6,  "travelRuleStatus": 0,  "address": "0x94df8b352de7f46f64b01d3666bf6e936e44ce60", "addressTag": "1231212", "txId": "0xb5ef8c13b968a406cc62a93a8bd80f9e9a906ef1b3fcf20a2e48573c17659268",    "applyTime": "2019-10-12 11:12:02",   "network": "ETH", "transferType": 0,  "withdrawOrderId": "WITHDRAWtest123",  "info": "The address is not valid. Please confirm with the recipient",   "confirmNo":3,   "walletType": 1,   "txKey": "",  "questionnaire": "{''question1'':''answer1'',''question2'':''answer2''}",  "completeTime": "2023-03-23 16:52:41"  }, { "id": "156ec387f49b41df8724fa744fa82719", "trId": 2231556234, "amount": "0.00150000", "transactionFee": "0.004", "coin": "BTC", "withdrawalStatus": 6, "travelRuleStatus": 0, "address": "1FZdVHtiBqMrWdjPyRPULCUceZPJ2WLCsB", "txId": "60fd9007ebfddc753455f95fafa808c4302c836e4d1eebc5a132c36c1d8ac354", "applyTime": "2019-09-24 12:43:45", "network": "BTC", "transferType": 0, "info": "", "confirmNo": 2, "walletType": 1, "txKey": "", "questionnaire": "{''question1'':''answer1'',''question2'':''answer2''}", "completeTime": "2023-03-23 16:52:41" } ]'
            items:
                $ref: '#/components/schemas/GetLocalentityWithdrawHistoryV1RespItem'
            type: array
        GetLocalentityWithdrawHistoryV1RespItem:
            properties:
                address:
                    type: string
                addressTag:
                    type: string
                amount:
                    type: string
                applyTime:
                    type: string
                coin:
                    type: string
                completeTime:
                    type: string
                confirmNo:
                    type: integer
                id:
                    type: string
                info:
                    type: string
                network:
                    type: string
                questionnaire:
                    type: string
                trId:
                    format: int64
                    type: integer
                transactionFee:
                    type: string
                transferType:
                    type: integer
                travelRuleStatus:
                    type: integer
                txId:
                    type: string
                txKey:
                    type: string
                walletType:
                    type: integer
                withdrawOrderId:
                    type: string
                withdrawalStatus:
                    type: integer
            type: object
        GetLocalentityWithdrawHistoryV2Resp:
            example: '[ { "id": "b6ae22b3aa844210a7041aee7589627c",   "trId": 1234456,   "amount": "8.91000000",    "transactionFee": "0.004",  "coin": "USDT", "withdrawalStatus": 6,  "travelRuleStatus": 0,  "address": "0x94df8b352de7f46f64b01d3666bf6e936e44ce60", "addressTag": "1231212", "txId": "0xb5ef8c13b968a406cc62a93a8bd80f9e9a906ef1b3fcf20a2e48573c17659268",    "applyTime": "2019-10-12 11:12:02",   "network": "ETH", "transferType": 0,  "withdrawOrderId": "WITHDRAWtest123",  "info": "The address is not valid. Please confirm with the recipient",   "confirmNo":3,   "walletType": 1,   "txKey": "",  "questionnaire": "{''question1'':''answer1'',''question2'':''answer2''}",  "completeTime": "2023-03-23 16:52:41"  }, { "id": "156ec387f49b41df8724fa744fa82719", "trId": 2231556234, "amount": "0.00150000", "transactionFee": "0.004", "coin": "BTC", "withdrawalStatus": 6, "travelRuleStatus": 0, "address": "1FZdVHtiBqMrWdjPyRPULCUceZPJ2WLCsB", "txId": "60fd9007ebfddc753455f95fafa808c4302c836e4d1eebc5a132c36c1d8ac354", "applyTime": "2019-09-24 12:43:45", "network": "BTC", "transferType": 0, "info": "", "confirmNo": 2, "walletType": 1, "txKey": "", "questionnaire": "{''question1'':''answer1'',''question2'':''answer2''}", "completeTime": "2023-03-23 16:52:41" } ]'
            items:
                $ref: '#/components/schemas/GetLocalentityWithdrawHistoryV2RespItem'
            type: array
        GetLocalentityWithdrawHistoryV2RespItem:
            properties:
                address:
                    type: string
                addressTag:
                    type: string
                amount:
                    type: string
                applyTime:
                    type: string
                coin:
                    type: string
                completeTime:
                    type: string
                confirmNo:
                    type: integer
                id:
                    type: string
                info:
                    type: string
                network:
                    type: string
                questionnaire:
                    type: string
                trId:
                    format: int64
                    type: integer
                transactionFee:
                    type: string
                transferType:
                    type: integer
                travelRuleStatus:
                    type: integer
                txId:
                    type: string
                txKey:
                    type: string
                walletType:
                    type: integer
                withdrawOrderId:
                    type: string
                withdrawalStatus:
                    type: integer
            type: object
        GetManagedSubaccountAccountSnapshotV1Resp:
            example: '{ "code":200,  "msg":"",  "snapshotVos":[ { "data":{ "balances":[ { "asset":"BTC", "free":"0.09905021", "locked":"0.00000000" }, { "asset":"USDT", "free":"1.89109409", "locked":"0.00000000" } ], "totalAssetOfBtc":"0.09942700" }, "type":"spot", "updateTime":1576281599000 } ] }'
            properties:
                code:
                    type: integer
                msg:
                    type: string
                snapshotVos:
                    items:
                        properties:
                            data:
                                properties:
                                    balances:
                                        items:
                                            properties:
                                                asset:
                                                    type: string
                                                free:
                                                    type: string
                                                locked:
                                                    type: string
                                            type: object
                                        type: array
                                    totalAssetOfBtc:
                                        type: string
                                type: object
                            type:
                                type: string
                            updateTime:
                                format: int64
                                type: integer
                        type: object
                    type: array
            type: object
        GetManagedSubaccountAssetV1Resp:
            example: '[ { "coin": "INJ", "name": "Injective Protocol", "totalBalance": "0", "availableBalance": "0", "inOrder": "0", "btcValue": "0" }, { "coin": "FILDOWN", "name": "FILDOWN", "totalBalance": "0", "availableBalance": "0", "inOrder": "0", "btcValue": "0" } ]'
            items:
                $ref: '#/components/schemas/GetManagedSubaccountAssetV1RespItem'
            type: array
        GetManagedSubaccountAssetV1RespItem:
            properties:
                availableBalance:
                    type: string
                btcValue:
                    type: string
                coin:
                    type: string
                inOrder:
                    type: string
                name:
                    type: string
                totalBalance:
                    type: string
            type: object
        GetManagedSubaccountDepositAddressV1Resp:
            example: '{ "coin": "USDT", "address": "0x206c22d833bb0bb2102da6b7c7d4c3eb14bcf73d", "tag": "", "url": "https://etherscan.io/address/0x206c22d833bb0bb2102da6b7c7d4c3eb14bcf73d" }'
            properties:
                address:
                    type: string
                coin:
                    type: string
                tag:
                    type: string
                url:
                    type: string
            type: object
        GetManagedSubaccountFetchFutureAssetV1Resp:
            example: '{ "code": "200", "message": "OK", "snapshotVos": [ { "type": "FUTURES", "updateTime": 1672893855394, "data": { "assets": [ { "asset": "USDT", "marginBalance": 100, "walletBalance": 120 } ], "position": [ { "symbol": "BTCUSDT", "entryPrice": 17000, "markPrice": 17000, "positionAmt": 0.0001 } ] } } ] }'
            properties:
                code:
                    type: string
                message:
                    type: string
                snapshotVos:
                    items:
                        properties:
                            data:
                                properties:
                                    assets:
                                        items:
                                            properties:
                                                asset:
                                                    type: string
                                                marginBalance:
                                                    type: integer
                                                walletBalance:
                                                    type: integer
                                            type: object
                                        type: array
                                    position:
                                        items:
                                            properties:
                                                entryPrice:
                                                    type: integer
                                                markPrice:
                                                    type: integer
                                                positionAmt:
                                                    type: number
                                                symbol:
                                                    type: string
                                            type: object
                                        type: array
                                type: object
                            type:
                                type: string
                            updateTime:
                                format: int64
                                type: integer
                        type: object
                    type: array
            type: object
        GetManagedSubaccountInfoV1Resp:
            example: '{ "total": 3, "managerSubUserInfoVoList": [ { "rootUserId": 1000138475670, "managersubUserId": 1000137842513, "bindParentUserId": 1000138475669, "email": "test_0_virtual@kq3kno9imanagedsub.com", "insertTimeStamp": 1678435149000, "bindParentEmail": "wdyw8xsh8pey@test.com", "isSubUserEnabled": true, "isUserActive": true, "isMarginEnabled": false, "isFutureEnabled": false, "isSignedLVTRiskAgreement": false }, { "rootUserId": 1000138475670, "managersubUserId": 1000137842514, "bindParentUserId": 1000138475669, "email": "test_1_virtual@4qd2u7zxmanagedsub.com", "insertTimeStamp": 1678435152000, "bindParentEmail": "wdyw8xsh8pey@test.com", "isSubUserEnabled": true, "isUserActive": true, "isMarginEnabled": false, "isFutureEnabled": false, "isSignedLVTRiskAgreement": false }, { "rootUserId": 1000138475670, "managersubUserId": 1000137842515, "bindParentUserId": 1000138475669, "email": "test_2_virtual@akc05o8hmanagedsub.com", "insertTimeStamp": 1678435153000, "bindParentEmail": "wdyw8xsh8pey@test.com", "isSubUserEnabled": true, "isUserActive": true, "isMarginEnabled": false, "isFutureEnabled": false, "isSignedLVTRiskAgreement": false } ] }'
            properties:
                managerSubUserInfoVoList:
                    items:
                        properties:
                            bindParentEmail:
                                type: string
                            bindParentUserId:
                                format: int64
                                type: integer
                            email:
                                type: string
                            insertTimeStamp:
                                type: integer
                            isFutureEnabled:
                                type: boolean
                            isMarginEnabled:
                                type: boolean
                            isSignedLVTRiskAgreement:
                                type: boolean
                            isSubUserEnabled:
                                type: boolean
                            isUserActive:
                                type: boolean
                            managersubUserId:
                                format: int64
                                type: integer
                            rootUserId:
                                format: int64
                                type: integer
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetManagedSubaccountMarginAssetV1Resp:
            example: '{ "marginLevel":"999", "totalAssetOfBtc":"0", "totalLiabilityOfBtc":"0", "totalNetAssetOfBtc":"0", "userAssets":[ { "asset":"MATIC", "borrowed":"0", "free":"0", "interest":"0", "locked":"0", "netAsset":"0" }, { "asset":"VET", "borrowed":"0", "free":"0", "interest":"0", "locked":"0", "netAsset":"0" }, { "asset":"BAKE", "borrowed":"0", "free":"0", "interest":"0", "locked":"0", "netAsset":"0" } ] }'
            properties:
                marginLevel:
                    type: string
                totalAssetOfBtc:
                    type: string
                totalLiabilityOfBtc:
                    type: string
                totalNetAssetOfBtc:
                    type: string
                userAssets:
                    items:
                        properties:
                            asset:
                                type: string
                            borrowed:
                                type: string
                            free:
                                type: string
                            interest:
                                type: string
                            locked:
                                type: string
                            netAsset:
                                type: string
                        type: object
                    type: array
            type: object
        GetManagedSubaccountQueryTransLogForInvestorV1Resp:
            example: '{ "managerSubTransferHistoryVos": [ { "fromEmail": "test_0_virtual@kq3kno9imanagedsub.com", "fromAccountType": "SPOT", "toEmail": "wdywl0lddakh@test.com", "toAccountType": "SPOT", "asset": "BNB", "amount": "0.01", "scheduledData": 1679416673000, "createTime": 1679416673000, "status": "SUCCESS", "tranId": 91077779 }, { "fromEmail": "wdywl0lddakh@test.com", "fromAccountType": "SPOT", "toEmail": "test_0_virtual@kq3kno9imanagedsub.com", "toAccountType": "SPOT", "asset": "BNB", "amount": "1", "scheduledData": 1679416616000, "createTime": 1679416616000, "status": "SUCCESS", "tranId": 91077676 } ], "count": 2 }'
            properties:
                count:
                    type: integer
                managerSubTransferHistoryVos:
                    items:
                        properties:
                            amount:
                                type: string
                            asset:
                                type: string
                            createTime:
                                format: int64
                                type: integer
                            fromAccountType:
                                type: string
                            fromEmail:
                                type: string
                            scheduledData:
                                type: integer
                            status:
                                type: string
                            toAccountType:
                                type: string
                            toEmail:
                                type: string
                            tranId:
                                format: int64
                                type: integer
                        type: object
                    type: array
            type: object
        GetManagedSubaccountQueryTransLogForTradeParentV1Resp:
            example: '{ "managerSubTransferHistoryVos": [ { "fromEmail": "test_0_virtual@kq3kno9imanagedsub.com", "fromAccountType": "SPOT", "toEmail": "wdywl0lddakh@test.com", "toAccountType": "SPOT", "asset": "BNB", "amount": "0.01", "scheduledData": 1679416673000, "createTime": 1679416673000, "status": "SUCCESS", "tranId": 91077779 }, { "fromEmail": "wdywl0lddakh@test.com", "fromAccountType": "SPOT", "toEmail": "test_0_virtual@kq3kno9imanagedsub.com", "toAccountType": "SPOT", "asset": "BNB", "amount": "1", "scheduledData": 1679416616000, "createTime": 1679416616000, "status": "SUCCESS", "tranId": 91077676 } ], "count": 2 }'
            properties:
                count:
                    type: integer
                managerSubTransferHistoryVos:
                    items:
                        properties:
                            amount:
                                type: string
                            asset:
                                type: string
                            createTime:
                                format: int64
                                type: integer
                            fromAccountType:
                                type: string
                            fromEmail:
                                type: string
                            scheduledData:
                                type: integer
                            status:
                                type: string
                            toAccountType:
                                type: string
                            toEmail:
                                type: string
                            tranId:
                                format: int64
                                type: integer
                        type: object
                    type: array
            type: object
        GetManagedSubaccountQueryTransLogV1Resp:
            example: '{ "managerSubTransferHistoryVos": [ { "fromEmail": "test_0_virtual@kq3kno9imanagedsub.com", "fromAccountType": "SPOT", "toEmail": "wdywl0lddakh@test.com", "toAccountType": "SPOT", "asset": "BNB", "amount": "0.01", "scheduledData": 1679416673000, "createTime": 1679416673000, "status": "SUCCESS", "tranId": 91077779 }, { "fromEmail": "wdywl0lddakh@test.com", "fromAccountType": "SPOT", "toEmail": "test_0_virtual@kq3kno9imanagedsub.com", "toAccountType": "SPOT", "asset": "BNB", "amount": "1", "scheduledData": 1679416616000, "createTime": 1679416616000, "status": "SUCCESS", "tranId": 91077676 } ], "count": 2 }'
            properties:
                count:
                    type: integer
                managerSubTransferHistoryVos:
                    items:
                        properties:
                            amount:
                                type: string
                            asset:
                                type: string
                            createTime:
                                format: int64
                                type: integer
                            fromAccountType:
                                type: string
                            fromEmail:
                                type: string
                            scheduledData:
                                type: integer
                            status:
                                type: string
                            toAccountType:
                                type: string
                            toEmail:
                                type: string
                            tranId:
                                format: int64
                                type: integer
                        type: object
                    type: array
            type: object
        GetMarginAccountV1Resp:
            example: '{ "created" : true,  "borrowEnabled": true, "marginLevel": "11.64405625", "collateralMarginLevel" : "3.2", "totalAssetOfBtc": "6.82728457", "totalLiabilityOfBtc": "0.58633215", "totalNetAssetOfBtc": "6.24095242", "TotalCollateralValueInUSDT": "5.82728457", "totalOpenOrderLossInUSDT": "582.728457", "tradeEnabled": true, "transferInEnabled": true, "transferOutEnabled": true, "accountType": "MARGIN_1",   "userAssets": [ { "asset": "BTC", "borrowed": "0.00000000", "free": "0.00499500", "interest": "0.00000000", "locked": "0.00000000", "netAsset": "0.00499500" }, { "asset": "BNB", "borrowed": "201.66666672", "free": "2346.50000000", "interest": "0.00000000", "locked": "0.00000000", "netAsset": "2144.83333328" }, { "asset": "ETH", "borrowed": "0.00000000", "free": "0.00000000", "interest": "0.00000000", "locked": "0.00000000", "netAsset": "0.00000000" }, { "asset": "USDT", "borrowed": "0.00000000", "free": "0.00000000", "interest": "0.00000000", "locked": "0.00000000", "netAsset": "0.00000000" } ] }'
            properties:
                TotalCollateralValueInUSDT:
                    type: string
                accountType:
                    type: string
                borrowEnabled:
                    type: boolean
                collateralMarginLevel:
                    type: string
                created:
                    type: boolean
                marginLevel:
                    type: string
                totalAssetOfBtc:
                    type: string
                totalLiabilityOfBtc:
                    type: string
                totalNetAssetOfBtc:
                    type: string
                totalOpenOrderLossInUSDT:
                    type: string
                tradeEnabled:
                    type: boolean
                transferInEnabled:
                    type: boolean
                transferOutEnabled:
                    type: boolean
                userAssets:
                    items:
                        properties:
                            asset:
                                type: string
                            borrowed:
                                type: string
                            free:
                                type: string
                            interest:
                                type: string
                            locked:
                                type: string
                            netAsset:
                                type: string
                        type: object
                    type: array
            type: object
        GetMarginAllAssetsV1Resp:
            example: '[ { "assetFullName": "USD coin", "assetName": "USDC", "isBorrowable": true, "isMortgageable": true, "userMinBorrow": "0.00000000", "userMinRepay": "0.00000000", "delistTime": 1704973040 } ]'
            items:
                $ref: '#/components/schemas/GetMarginAllAssetsV1RespItem'
            type: array
        GetMarginAllAssetsV1RespItem:
            properties:
                assetFullName:
                    type: string
                assetName:
                    type: string
                delistTime:
                    format: int64
                    type: integer
                isBorrowable:
                    type: boolean
                isMortgageable:
                    type: boolean
                userMinBorrow:
                    type: string
                userMinRepay:
                    type: string
            type: object
        GetMarginAllOrderListV1Resp:
            example: '[ { "orderListId": 29, "contingencyType": "OCO", "listStatusType": "EXEC_STARTED", "listOrderStatus": "EXECUTING", "listClientOrderId": "amEEAXryFzFwYF1FeRpUoZ", "transactionTime": 1565245913483, "symbol": "LTCBTC", "isIsolated": true,        "orders": [ { "symbol": "LTCBTC", "orderId": 4, "clientOrderId": "oD7aesZqjEGlZrbtRpy5zB" }, { "symbol": "LTCBTC", "orderId": 5, "clientOrderId": "Jr1h6xirOxgeJOUuYQS7V3" } ] }, { "orderListId": 28, "contingencyType": "OCO", "listStatusType": "EXEC_STARTED", "listOrderStatus": "EXECUTING", "listClientOrderId": "hG7hFNxJV6cZy3Ze4AUT4d", "transactionTime": 1565245913407, "symbol": "LTCBTC", "orders": [ { "symbol": "LTCBTC", "orderId": 2, "clientOrderId": "j6lFOfbmFMRjTYA7rRJ0LP" }, { "symbol": "LTCBTC", "orderId": 3, "clientOrderId": "z0KCjOdditiLS5ekAFtK81" } ] } ]'
            items:
                $ref: '#/components/schemas/GetMarginAllOrderListV1RespItem'
            type: array
        GetMarginAllOrderListV1RespItem:
            properties:
                contingencyType:
                    type: string
                isIsolated:
                    type: boolean
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
        GetMarginAllOrdersV1Resp:
            example: '[ { "clientOrderId": "D2KDy4DIeS56PvkM13f8cP", "cummulativeQuoteQty": "0.00000000", "executedQty": "0.00000000", "icebergQty": "0.00000000", "isWorking": false, "orderId": 41295, "origQty": "5.31000000", "price": "0.22500000", "side": "SELL", "status": "CANCELED", "stopPrice": "0.18000000", "symbol": "BNBBTC", "isIsolated": false, "time": 1565769338806, "timeInForce": "GTC", "type": "TAKE_PROFIT_LIMIT", "selfTradePreventionMode": "NONE", "updateTime": 1565769342148 }, { "clientOrderId": "gXYtqhcEAs2Rn9SUD9nRKx", "cummulativeQuoteQty": "0.00000000", "executedQty": "0.00000000", "icebergQty": "1.00000000", "isWorking": true, "orderId": 41296, "origQty": "6.65000000", "price": "0.18000000", "side": "SELL", "status": "CANCELED", "stopPrice": "0.00000000", "symbol": "BNBBTC", "isIsolated": false, "time": 1565769348687, "timeInForce": "GTC", "type": "LIMIT", "selfTradePreventionMode": "NONE", "updateTime": 1565769352226 } ]'
            items:
                $ref: '#/components/schemas/GetMarginAllOrdersV1RespItem'
            type: array
        GetMarginAllOrdersV1RespItem:
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                icebergQty:
                    type: string
                isIsolated:
                    type: boolean
                isWorking:
                    type: boolean
                orderId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
            type: object
        GetMarginAllPairsV1Resp:
            example: '[ { "base": "BNB", "id": 351637150141315861, "isBuyAllowed": true, "isMarginTrade": true, "isSellAllowed": true, "quote": "BTC", "symbol": "BNBBTC" }, { "base": "TRX", "id": 351637923235429141, "isBuyAllowed": true, "isMarginTrade": true, "isSellAllowed": true, "quote": "BTC", "symbol": "TRXBTC", "delistTime": 1704973040 }, { "base": "XRP", "id": 351638112213990165, "isBuyAllowed": true, "isMarginTrade": true, "isSellAllowed": true, "quote": "BTC", "symbol": "XRPBTC" }, { "base": "ETH", "id": 351638524530850581, "isBuyAllowed": true, "isMarginTrade": true, "isSellAllowed": true, "quote": "BTC", "symbol": "ETHBTC" } ]'
            items:
                $ref: '#/components/schemas/GetMarginAllPairsV1RespItem'
            type: array
        GetMarginAllPairsV1RespItem:
            properties:
                base:
                    type: string
                id:
                    type: integer
                isBuyAllowed:
                    type: boolean
                isMarginTrade:
                    type: boolean
                isSellAllowed:
                    type: boolean
                quote:
                    type: string
                symbol:
                    type: string
            type: object
        GetMarginApiKeyListV1Resp:
            example: '[ { "apiName": "testName1", "apiKey":"znpOzOAeLVgr2TuxWfNo43AaPWpBbJEoKezh1o8mSQb6ryE2odE11A4AoVlJbQoG", "ip": "192.168.0.1,192.168.0.2", "type": "RSA", "permissionMode": "TRADE" }, { "apiName": "testName2", "apiKey":"znpOzOAeLVgr2TuxWfNo43AaPWpBbJEoKezh1o8mSQb6ryE2odE11A4AoVlJbQoG", "ip": "192.168.0.1,192.168.0.2", "type": "Ed25519", "permissionMode": "READ" } ]'
            items:
                $ref: '#/components/schemas/GetMarginApiKeyListV1RespItem'
            type: array
        GetMarginApiKeyListV1RespItem:
            properties:
                apiKey:
                    type: string
                apiName:
                    type: string
                ip:
                    type: string
                permissionMode:
                    type: string
                type:
                    type: string
            type: object
        GetMarginApiKeyV1Resp:
            example: '{ "apiKey":"npOzOAeLVgr2TuxWfNo43AaPWpBbJEoKezh1o8mSQb6ryE2odE11A4AoVlJbQoGx", "ip": "0.0.0.0,192.168.0.1,192.168.0.2",  "apiName": "testName", "type": "RSA", "permissionMode": "TRADE" }'
            properties:
                apiKey:
                    type: string
                apiName:
                    type: string
                ip:
                    type: string
                permissionMode:
                    type: string
                type:
                    type: string
            type: object
        GetMarginBorrowRepayV1Resp:
            example: '{ "rows": [ { "type": "AUTO",  "isolatedSymbol": "BNBUSDT",      "amount": "14.00000000",    "asset": "BNB", "interest": "0.01866667",     "principal": "13.98133333",    "status": "CONFIRMED",    "timestamp": 1563438204000, "txId": 2970933056 } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            amount:
                                type: string
                            asset:
                                type: string
                            interest:
                                type: string
                            isolatedSymbol:
                                type: string
                            principal:
                                type: string
                            status:
                                type: string
                            timestamp:
                                format: int64
                                type: integer
                            txId:
                                format: int64
                                type: integer
                            type:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetMarginCapitalFlowV1Resp:
            example: '[ { "id": 123456, "tranId": 123123, "timestamp": 1691116657000, "asset": "USDT", "symbol": "BTCUSDT", "type": "BORROW", "amount": "101" }, { "id": 123457, "tranId": 123124, "timestamp": 1691116658000, "asset": "BTC", "symbol": "BTCUSDT", "type": "REPAY", "amount": "10" } ]'
            items:
                $ref: '#/components/schemas/GetMarginCapitalFlowV1RespItem'
            type: array
        GetMarginCapitalFlowV1RespItem:
            properties:
                amount:
                    type: string
                asset:
                    type: string
                id:
                    type: integer
                symbol:
                    type: string
                timestamp:
                    format: int64
                    type: integer
                tranId:
                    format: int64
                    type: integer
                type:
                    type: string
            type: object
        GetMarginCrossMarginCollateralRatioV1Resp:
            example: '[ { "collaterals": [ { "minUsdValue": "0", "maxUsdValue": "13000000", "discountRate": "1" }, { "minUsdValue": "13000000", "maxUsdValue": "20000000", "discountRate": "0.975" }, { "minUsdValue": "20000000", "discountRate": "0" } ], "assetNames": [ "BNX" ] }, { "collaterals": [ { "minUsdValue": "0", "discountRate": "1" } ], "assetNames": [ "BTC", "BUSD", "ETH", "USDT" ] } ]'
            items:
                $ref: '#/components/schemas/GetMarginCrossMarginCollateralRatioV1RespItem'
            type: array
        GetMarginCrossMarginCollateralRatioV1RespItem:
            properties:
                assetNames:
                    items:
                        type: string
                    type: array
                collaterals:
                    items:
                        properties:
                            discountRate:
                                type: string
                            maxUsdValue:
                                type: string
                            minUsdValue:
                                type: string
                        type: object
                    type: array
            type: object
        GetMarginCrossMarginDataV1Resp:
            example: '[ { "vipLevel": 0, "coin": "BTC", "transferIn": true, "borrowable": true, "dailyInterest": "0.00026125", "yearlyInterest": "0.0953", "borrowLimit": "180", "marginablePairs": [ "BNBBTC", "TRXBTC", "ETHBTC", "BTCUSDT" ] } ]'
            items:
                $ref: '#/components/schemas/GetMarginCrossMarginDataV1RespItem'
            type: array
        GetMarginCrossMarginDataV1RespItem:
            properties:
                borrowLimit:
                    type: string
                borrowable:
                    type: boolean
                coin:
                    type: string
                dailyInterest:
                    type: string
                marginablePairs:
                    items:
                        type: string
                    type: array
                transferIn:
                    type: boolean
                vipLevel:
                    type: integer
                yearlyInterest:
                    type: string
            type: object
        GetMarginDelistScheduleV1Resp:
            example: '[ { "delistTime": 1686161202000, "crossMarginAssets": [ "BTC", "USDT" ], "isolatedMarginSymbols": [ "ADAUSDT", "BNBUSDT" ] }, { "delistTime": 1686222232000, "crossMarginAssets": [ "ADA" ], "isolatedMarginSymbols": [] } ]'
            items:
                $ref: '#/components/schemas/GetMarginDelistScheduleV1RespItem'
            type: array
        GetMarginDelistScheduleV1RespItem:
            properties:
                crossMarginAssets:
                    items:
                        type: string
                    type: array
                delistTime:
                    format: int64
                    type: integer
                isolatedMarginSymbols:
                    items:
                        type: string
                    type: array
            type: object
        GetMarginExchangeSmallLiabilityHistoryV1Resp:
            example: '{ "total": 1, "rows": [ { "asset": "ETH", "amount": "0.00083434", "targetAsset": "BUSD", "targetAmount": "1.37576819", "bizType": "EXCHANGE_SMALL_LIABILITY", "timestamp": 1672801339253 } ] }'
            properties:
                rows:
                    items:
                        properties:
                            amount:
                                type: string
                            asset:
                                type: string
                            bizType:
                                type: string
                            targetAmount:
                                type: string
                            targetAsset:
                                type: string
                            timestamp:
                                format: int64
                                type: integer
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetMarginExchangeSmallLiabilityV1Resp:
            example: '[ { "asset": "ETH", "interest": "0.00083334", "principal": "0.001", "liabilityAsset": "USDT", "liabilityQty": 0.3552 } ]'
            items:
                $ref: '#/components/schemas/GetMarginExchangeSmallLiabilityV1RespItem'
            type: array
        GetMarginExchangeSmallLiabilityV1RespItem:
            properties:
                asset:
                    type: string
                interest:
                    type: string
                liabilityAsset:
                    type: string
                liabilityQty:
                    type: number
                principal:
                    type: string
            type: object
        GetMarginForceLiquidationRecV1Resp:
            example: '{ "rows": [ { "avgPrice": "0.00388359", "executedQty": "31.39000000", "orderId": 180015097, "price": "0.00388110", "qty": "31.39000000", "side": "SELL", "symbol": "BNBBTC", "timeInForce": "GTC", "isIsolated": true, "updatedTime": 1558941374745 } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            avgPrice:
                                type: string
                            executedQty:
                                type: string
                            isIsolated:
                                type: boolean
                            orderId:
                                format: int64
                                type: integer
                            price:
                                type: string
                            qty:
                                type: string
                            side:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                type: string
                            updatedTime:
                                format: int64
                                type: integer
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetMarginInterestHistoryV1Resp:
            example: '{ "rows": [ { "txId": 1352286576452864727, "interestAccuredTime": 1672160400000, "asset": "USDT", "rawAsset": "USDT",   "principal": "45.3313", "interest": "0.00024995", "interestRate": "0.00013233", "type": "ON_BORROW", "isolatedSymbol": "BNBUSDT"   } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            asset:
                                type: string
                            interest:
                                type: string
                            interestAccuredTime:
                                format: int64
                                type: integer
                            interestRate:
                                type: string
                            isolatedSymbol:
                                type: string
                            principal:
                                type: string
                            rawAsset:
                                type: string
                            txId:
                                format: int64
                                type: integer
                            type:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetMarginInterestRateHistoryV1Resp:
            example: '[ { "asset": "BTC", "dailyInterestRate": "0.00025000", "timestamp": 1611544731000, "vipLevel": 1 }, { "asset": "BTC", "dailyInterestRate": "0.00035000", "timestamp": 1610248118000, "vipLevel": 1 } ]'
            items:
                $ref: '#/components/schemas/GetMarginInterestRateHistoryV1RespItem'
            type: array
        GetMarginInterestRateHistoryV1RespItem:
            properties:
                asset:
                    type: string
                dailyInterestRate:
                    type: string
                timestamp:
                    format: int64
                    type: integer
                vipLevel:
                    type: integer
            type: object
        GetMarginIsolatedAccountLimitV1Resp:
            example: '{ "enabledAccount": 5, "maxAccount": 20 }'
            properties:
                enabledAccount:
                    type: integer
                maxAccount:
                    type: integer
            type: object
        GetMarginIsolatedAccountV1Resp:
            example: '{ "assets":[ { "baseAsset": { "asset": "BTC", "borrowEnabled": true, "borrowed": "0.00000000", "free": "0.00000000", "interest": "0.00000000", "locked": "0.00000000", "netAsset": "0.00000000", "netAssetOfBtc": "0.00000000", "repayEnabled": true, "totalAsset": "0.00000000" }, "quoteAsset": { "asset": "USDT", "borrowEnabled": true, "borrowed": "0.00000000", "free": "0.00000000", "interest": "0.00000000", "locked": "0.00000000", "netAsset": "0.00000000", "netAssetOfBtc": "0.00000000", "repayEnabled": true, "totalAsset": "0.00000000" }, "symbol": "BTCUSDT", "isolatedCreated": true, "enabled": true,  "marginLevel": "0.00000000", "marginLevelStatus": "EXCESSIVE",  "marginRatio": "0.00000000", "indexPrice": "10000.00000000", "liquidatePrice": "1000.00000000", "liquidateRate": "1.00000000", "tradeEnabled": true } ], "totalAssetOfBtc": "0.00000000", "totalLiabilityOfBtc": "0.00000000", "totalNetAssetOfBtc": "0.00000000" }'
            properties:
                assets:
                    items:
                        properties:
                            baseAsset:
                                properties:
                                    asset:
                                        type: string
                                    borrowEnabled:
                                        type: boolean
                                    borrowed:
                                        type: string
                                    free:
                                        type: string
                                    interest:
                                        type: string
                                    locked:
                                        type: string
                                    netAsset:
                                        type: string
                                    netAssetOfBtc:
                                        type: string
                                    repayEnabled:
                                        type: boolean
                                    totalAsset:
                                        type: string
                                type: object
                            enabled:
                                type: boolean
                            indexPrice:
                                type: string
                            isolatedCreated:
                                type: boolean
                            liquidatePrice:
                                type: string
                            liquidateRate:
                                type: string
                            marginLevel:
                                type: string
                            marginLevelStatus:
                                type: string
                            marginRatio:
                                type: string
                            quoteAsset:
                                properties:
                                    asset:
                                        type: string
                                    borrowEnabled:
                                        type: boolean
                                    borrowed:
                                        type: string
                                    free:
                                        type: string
                                    interest:
                                        type: string
                                    locked:
                                        type: string
                                    netAsset:
                                        type: string
                                    netAssetOfBtc:
                                        type: string
                                    repayEnabled:
                                        type: boolean
                                    totalAsset:
                                        type: string
                                type: object
                            symbol:
                                type: string
                            tradeEnabled:
                                type: boolean
                        type: object
                    type: array
                totalAssetOfBtc:
                    type: string
                totalLiabilityOfBtc:
                    type: string
                totalNetAssetOfBtc:
                    type: string
            type: object
        GetMarginIsolatedAllPairsV1Resp:
            example: '[ { "base": "BNB", "isBuyAllowed": true, "isMarginTrade": true, "isSellAllowed": true, "quote": "BTC", "symbol": "BNBBTC" }, { "base": "TRX", "isBuyAllowed": true, "isMarginTrade": true, "isSellAllowed": true, "quote": "BTC", "symbol": "TRXBTC" } ]'
            items:
                $ref: '#/components/schemas/GetMarginIsolatedAllPairsV1RespItem'
            type: array
        GetMarginIsolatedAllPairsV1RespItem:
            properties:
                base:
                    type: string
                isBuyAllowed:
                    type: boolean
                isMarginTrade:
                    type: boolean
                isSellAllowed:
                    type: boolean
                quote:
                    type: string
                symbol:
                    type: string
            type: object
        GetMarginIsolatedMarginDataV1Resp:
            example: '[ { "vipLevel": 0, "symbol": "BTCUSDT", "leverage": "10", "data": [ { "coin": "BTC", "dailyInterest": "0.00026125", "borrowLimit": "270" }, { "coin": "USDT", "dailyInterest": "0.000475", "borrowLimit": "2100000" } ] } ]'
            items:
                $ref: '#/components/schemas/GetMarginIsolatedMarginDataV1RespItem'
            type: array
        GetMarginIsolatedMarginDataV1RespItem:
            properties:
                data:
                    items:
                        properties:
                            borrowLimit:
                                type: string
                            coin:
                                type: string
                            dailyInterest:
                                type: string
                        type: object
                    type: array
                leverage:
                    type: string
                symbol:
                    type: string
                vipLevel:
                    type: integer
            type: object
        GetMarginIsolatedMarginTierV1Resp:
            example: '[ { "symbol": "BTCUSDT", "tier": 1, "effectiveMultiple": "10", "initialRiskRatio": "1.111", "liquidationRiskRatio": "1.05", "baseAssetMaxBorrowable": "9", "quoteAssetMaxBorrowable": "70000" } ]'
            items:
                $ref: '#/components/schemas/GetMarginIsolatedMarginTierV1RespItem'
            type: array
        GetMarginIsolatedMarginTierV1RespItem:
            properties:
                baseAssetMaxBorrowable:
                    type: string
                effectiveMultiple:
                    type: string
                initialRiskRatio:
                    type: string
                liquidationRiskRatio:
                    type: string
                quoteAssetMaxBorrowable:
                    type: string
                symbol:
                    type: string
                tier:
                    type: integer
            type: object
        GetMarginLeverageBracketV1Resp:
            example: '[ { "assetNames":[ "SHIB", "FDUSD", "BTC", "ETH", "USDC" ], "rank":1, "brackets":[ { "leverage":10, "maxDebt":1000000.00000000, "maintenanceMarginRate":0.02000000, "initialMarginRate":0.1112, "fastNum":0 }, { "leverage":3, "maxDebt":4000000.00000000, "maintenanceMarginRate":0.07000000, "initialMarginRate":0.5000, "fastNum":60000.0000000000000000 } ] } ]'
            items:
                $ref: '#/components/schemas/GetMarginLeverageBracketV1RespItem'
            type: array
        GetMarginLeverageBracketV1RespItem:
            properties:
                assetNames:
                    items:
                        type: string
                    type: array
                brackets:
                    items:
                        properties:
                            fastNum:
                                type: integer
                            initialMarginRate:
                                type: number
                            leverage:
                                type: integer
                            maintenanceMarginRate:
                                type: number
                            maxDebt:
                                type: integer
                        type: object
                    type: array
                rank:
                    type: integer
            type: object
        GetMarginMaxBorrowableV1Resp:
            example: '{ "amount": "1.69248805",  "borrowLimit": "60"  }'
            properties:
                amount:
                    type: string
                borrowLimit:
                    type: string
            type: object
        GetMarginMaxTransferableV1Resp:
            example: '{ "amount": "3.59498107" }'
            properties:
                amount:
                    type: string
            type: object
        GetMarginMyTradesV1Resp:
            example: '[ { "commission": "0.00006000", "commissionAsset": "BTC", "id": 34, "isBestMatch": true, "isBuyer": false, "isMaker": false, "orderId": 39324, "price": "0.02000000", "qty": "3.00000000", "symbol": "BNBBTC", "isIsolated": false, "time": 1561973357171 } ]'
            items:
                $ref: '#/components/schemas/GetMarginMyTradesV1RespItem'
            type: array
        GetMarginMyTradesV1RespItem:
            properties:
                commission:
                    type: string
                commissionAsset:
                    type: string
                id:
                    type: integer
                isBestMatch:
                    type: boolean
                isBuyer:
                    type: boolean
                isIsolated:
                    type: boolean
                isMaker:
                    type: boolean
                orderId:
                    format: int64
                    type: integer
                price:
                    type: string
                qty:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        GetMarginNextHourlyInterestRateV1Resp:
            example: '[ { "asset": "BTC", "nextHourlyInterestRate": "0.00000571" }, { "asset": "ETH", "nextHourlyInterestRate": "0.00000578" } ]'
            items:
                $ref: '#/components/schemas/GetMarginNextHourlyInterestRateV1RespItem'
            type: array
        GetMarginNextHourlyInterestRateV1RespItem:
            properties:
                asset:
                    type: string
                nextHourlyInterestRate:
                    type: string
            type: object
        GetMarginOpenOrderListV1Resp:
            example: '[ { "orderListId": 31, "contingencyType": "OCO", "listStatusType": "EXEC_STARTED", "listOrderStatus": "EXECUTING", "listClientOrderId": "wuB13fmulKj3YjdqWEcsnp", "transactionTime": 1565246080644, "symbol": "LTCBTC", "isIsolated": false,        "orders": [ { "symbol": "LTCBTC", "orderId": 4, "clientOrderId": "r3EH2N76dHfLoSZWIUw1bT" }, { "symbol": "LTCBTC", "orderId": 5, "clientOrderId": "Cv1SnyPD3qhqpbjpYEHbd2" } ] } ]'
            items:
                $ref: '#/components/schemas/GetMarginOpenOrderListV1RespItem'
            type: array
        GetMarginOpenOrderListV1RespItem:
            properties:
                contingencyType:
                    type: string
                isIsolated:
                    type: boolean
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
        GetMarginOrderListV1Resp:
            example: '{ "orderListId": 27, "contingencyType": "OCO", "listStatusType": "EXEC_STARTED", "listOrderStatus": "EXECUTING", "listClientOrderId": "h2USkA5YQpaXHPIrkd96xE", "transactionTime": 1565245656253, "symbol": "LTCBTC", "isIsolated": false,        "orders": [ { "symbol": "LTCBTC", "orderId": 4, "clientOrderId": "qD1gy3kc3Gx0rihm9Y3xwS" }, { "symbol": "LTCBTC", "orderId": 5, "clientOrderId": "ARzZ9I00CPM8i3NhmU9Ega" } ] }'
            properties:
                contingencyType:
                    type: string
                isIsolated:
                    type: boolean
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
        GetMarginOrderV1Resp:
            example: '{ "clientOrderId": "ZwfQzuDIGpceVhKW5DvCmO", "cummulativeQuoteQty": "0.00000000", "executedQty": "0.00000000", "icebergQty": "0.00000000", "isWorking": true, "orderId": 213205622, "origQty": "0.30000000", "price": "0.00493630", "side": "SELL", "status": "NEW", "stopPrice": "0.00000000", "symbol": "BNBBTC", "isIsolated": true, "time": 1562133008725, "timeInForce": "GTC", "type": "LIMIT", "selfTradePreventionMode": "NONE", "updateTime": 1562133008725 }'
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                icebergQty:
                    type: string
                isIsolated:
                    type: boolean
                isWorking:
                    type: boolean
                orderId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
            type: object
        GetMarginPriceIndexV1Resp:
            example: '{ "calcTime": 1562046418000, "price": "0.00333930", "symbol": "BNBBTC" }'
            properties:
                calcTime:
                    format: int64
                    type: integer
                price:
                    type: string
                symbol:
                    type: string
            type: object
        GetMarginRateLimitOrderV1Resp:
            example: '[ { "rateLimitType": "ORDERS", "interval": "SECOND", "intervalNum": 10, "limit": 10000, "count": 0 }, { "rateLimitType": "ORDERS", "interval": "DAY", "intervalNum": 1, "limit": 20000, "count": 0 } ]'
            items:
                $ref: '#/components/schemas/GetMarginRateLimitOrderV1RespItem'
            type: array
        GetMarginRateLimitOrderV1RespItem:
            properties:
                count:
                    type: integer
                interval:
                    type: string
                intervalNum:
                    type: integer
                limit:
                    type: integer
                rateLimitType:
                    type: string
            type: object
        GetMarginTradeCoeffV1Resp:
            example: '{ "normalBar": "1.5", "marginCallBar": "1.3", "forceLiquidationBar": "1.1" }'
            properties:
                forceLiquidationBar:
                    type: string
                marginCallBar:
                    type: string
                normalBar:
                    type: string
            type: object
        GetMarginTransferV1Resp:
            example: '{ "rows": [ { "amount": "0.10000000", "asset": "BNB", "status": "CONFIRMED", "timestamp": 1566898617, "txId": 5240372201, "type": "ROLL_IN", "transFrom": "SPOT",  "transTo": "ISOLATED_MARGIN"  }, { "amount": "5.00000000", "asset": "USDT", "status": "CONFIRMED", "timestamp": 1566888436, "txId": 5239810406, "type": "ROLL_OUT", "transFrom": "ISOLATED_MARGIN", "transTo": "ISOLATED_MARGIN",  "fromSymbol": "BNBUSDT", "toSymbol": "BTCUSDT" }, { "amount": "1.00000000", "asset": "EOS", "status": "CONFIRMED", "timestamp": 1566888403, "txId": 5239808703, "type": "ROLL_IN" } ], "total": 3 }'
            properties:
                rows:
                    items:
                        properties:
                            amount:
                                type: string
                            asset:
                                type: string
                            status:
                                type: string
                            timestamp:
                                format: int64
                                type: integer
                            transFrom:
                                type: string
                            transTo:
                                type: string
                            txId:
                                format: int64
                                type: integer
                            type:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetMiningHashTransferConfigDetailsListV1Resp:
            example: '{ "code": 0, "msg": "", "data": { "configDetails": [ { "configId": 168,      "poolUsername": "123",   "toPoolUsername": "user1",  "algoName": "Ethash",      "hashRate": 5000000,      "startDay": 20201210,    "endDay": 20210405,    "status": 1        }, { "configId": 166, "poolUsername": "pop", "toPoolUsername": "111111", "algoName": "Ethash", "hashRate": 3320000, "startDay": 20201226, "endDay": 20201227, "status": 0 } ], "totalNum": 21, "pageSize": 200 } }'
            properties:
                code:
                    type: integer
                data:
                    properties:
                        configDetails:
                            items:
                                properties:
                                    algoName:
                                        type: string
                                    configId:
                                        format: int64
                                        type: integer
                                    endDay:
                                        type: integer
                                    hashRate:
                                        type: integer
                                    poolUsername:
                                        type: string
                                    startDay:
                                        type: integer
                                    status:
                                        type: integer
                                    toPoolUsername:
                                        type: string
                                type: object
                            type: array
                        pageSize:
                            type: integer
                        totalNum:
                            type: integer
                    type: object
                msg:
                    type: string
            type: object
        GetMiningHashTransferProfitDetailsV1Resp:
            example: '{ "code": 0, "msg": "", "data": { "profitTransferDetails": [{ "poolUsername": "test4001",   "toPoolUsername": "pop",     "algoName": "sha256",       "hashRate": 200000000000,   "day": 20201213,           "amount": 0.2256872,      "coinName": "BTC"         }, { "poolUsername": "test4001", "toPoolUsername": "pop", "algoName": "sha256", "hashRate": 200000000000, "day": 20201213, "amount": 0.2256872, "coinName": "BTC" } ], "totalNum": 8, "pageSize": 200 } }'
            properties:
                code:
                    type: integer
                data:
                    properties:
                        pageSize:
                            type: integer
                        profitTransferDetails:
                            items:
                                properties:
                                    algoName:
                                        type: string
                                    amount:
                                        type: number
                                    coinName:
                                        type: string
                                    day:
                                        type: integer
                                    hashRate:
                                        type: integer
                                    poolUsername:
                                        type: string
                                    toPoolUsername:
                                        type: string
                                type: object
                            type: array
                        totalNum:
                            type: integer
                    type: object
                msg:
                    type: string
            type: object
        GetMiningPaymentListV1Resp:
            example: '{ "code": 0, "msg": "", "data": { "accountProfits": [ { "time": 1586188800000,             "type": 31,  "hashTransfer": null,             "transferAmount": null,           "dayHashRate": 129129903378244,   "profitAmount": 8.6083060304,    "coinName":"BTC",               "status": 2     }, { "time": 1607529600000, "coinName": "BTC", "type": 0, "dayHashRate": 9942053925926, "profitAmount": 0.85426469, "hashTransfer": 200000000000, "transferAmount": 0.02180958, "status": 2 }, { "time": 1607443200000, "coinName": "BTC", "type": 31, "dayHashRate": 200000000000, "profitAmount": 0.02905916, "hashTransfer": null, "transferAmount": null, "status": 2 } ], "totalNum": 3,           "pageSize": 20           } }'
            properties:
                code:
                    type: integer
                data:
                    properties:
                        accountProfits:
                            items:
                                properties:
                                    coinName:
                                        type: string
                                    dayHashRate:
                                        type: integer
                                    hashTransfer:
                                        nullable: true
                                        type: object
                                    profitAmount:
                                        type: number
                                    status:
                                        type: integer
                                    time:
                                        format: int64
                                        type: integer
                                    transferAmount:
                                        nullable: true
                                        type: object
                                    type:
                                        type: integer
                                type: object
                            type: array
                        pageSize:
                            type: integer
                        totalNum:
                            type: integer
                    type: object
                msg:
                    type: string
            type: object
        GetMiningPaymentOtherV1Resp:
            example: '{ "code": 0, "msg": "", "data": { "otherProfits": [ { "time": 1607443200000,       "coinName": "BTC",     "type": 4,             "profitAmount": 0.0011859,   "status": 2          } ], "totalNum": 3,           "pageSize": 20           } }'
            properties:
                code:
                    type: integer
                data:
                    properties:
                        otherProfits:
                            items:
                                properties:
                                    coinName:
                                        type: string
                                    profitAmount:
                                        type: number
                                    status:
                                        type: integer
                                    time:
                                        format: int64
                                        type: integer
                                    type:
                                        type: integer
                                type: object
                            type: array
                        pageSize:
                            type: integer
                        totalNum:
                            type: integer
                    type: object
                msg:
                    type: string
            type: object
        GetMiningPaymentUidV1Resp:
            example: '{ "code": 0, "msg": "", "data": { "accountProfits": [ { "time": 1607443200000, "coinName": "BTC",    "type": 2,            "puid": 59985472,     "subName": "vdvaghani",  "amount": 0.09186957     } ], "totalNum": 3,           "pageSize": 20           } }'
            properties:
                code:
                    type: integer
                data:
                    properties:
                        accountProfits:
                            items:
                                properties:
                                    amount:
                                        type: number
                                    coinName:
                                        type: string
                                    puid:
                                        type: integer
                                    subName:
                                        type: string
                                    time:
                                        format: int64
                                        type: integer
                                    type:
                                        type: integer
                                type: object
                            type: array
                        pageSize:
                            type: integer
                        totalNum:
                            type: integer
                    type: object
                msg:
                    type: string
            type: object
        GetMiningPubAlgoListV1Resp:
            example: '{ "code": 0, "msg": "", "data": [ { "algoName": "sha256",                         "algoId": 1,                                  "poolIndex": 0,                               "unit": "h/s"                                 } ] }'
            properties:
                code:
                    type: integer
                data:
                    items:
                        properties:
                            algoId:
                                format: int64
                                type: integer
                            algoName:
                                type: string
                            poolIndex:
                                type: integer
                            unit:
                                type: string
                        type: object
                    type: array
                msg:
                    type: string
            type: object
        GetMiningPubCoinListV1Resp:
            example: '{ "code": 0, "msg": "", "data": [ { "coinName": "BTC",                       "coinId": 1,                             "poolIndex": 0,                          "algoId": 1,                             "algoName": "sha256"                     } ] }'
            properties:
                code:
                    type: integer
                data:
                    items:
                        properties:
                            algoId:
                                format: int64
                                type: integer
                            algoName:
                                type: string
                            coinId:
                                format: int64
                                type: integer
                            coinName:
                                type: string
                            poolIndex:
                                type: integer
                        type: object
                    type: array
                msg:
                    type: string
            type: object
        GetMiningStatisticsUserListV1Resp:
            example: '{ "code": 0, "msg": "", "data": [ { "type": "H_hashrate",         "userName": "test",          "list": [ { "time": 1585267200000,     "hashrate": "0.00000000",  "reject": "0.00000000"     }, { "time": 1585353600000, "hashrate": "0.00000000", "reject": "0.00000000" } ] }, { "type": "D_hashrate",         "userName": "test",           "list": [ { "time": 1587906000000,      "hashrate": "0.00000000",  "reject": "0.00000000"     }, { "time": 1587909600000, "hashrate": "0.00000000", "reject": "0.00000000" } ] } ] }'
            properties:
                code:
                    type: integer
                data:
                    items:
                        properties:
                            list:
                                items:
                                    properties:
                                        hashrate:
                                            type: string
                                        reject:
                                            type: string
                                        time:
                                            format: int64
                                            type: integer
                                    type: object
                                type: array
                            type:
                                type: string
                            userName:
                                type: string
                        type: object
                    type: array
                msg:
                    type: string
            type: object
        GetMiningStatisticsUserStatusV1Resp:
            example: '{ "code": 0, "msg": "", "data": { "fifteenMinHashRate": "457835490067496409.00000000",           "dayHashRate": "214289268068874127.65000000",                  "validNum": 0,                                                 "invalidNum": 17562,                                           "profitToday":{                                               "BTC":"0.00314332", "BSV":"56.17055953", "BCH":"106.61586001" }, "profitYesterday":{                                        "BTC":"0.00314332", "BSV":"56.17055953", "BCH":"106.61586001" }, "userName": "test",                                     "unit": "h/s",                                         "algo": "sha256"                                       } }'
            properties:
                code:
                    type: integer
                data:
                    properties:
                        algo:
                            type: string
                        dayHashRate:
                            type: string
                        fifteenMinHashRate:
                            type: string
                        invalidNum:
                            type: integer
                        profitToday:
                            properties:
                                BCH:
                                    type: string
                                BSV:
                                    type: string
                                BTC:
                                    type: string
                            type: object
                        profitYesterday:
                            properties:
                                BCH:
                                    type: string
                                BSV:
                                    type: string
                                BTC:
                                    type: string
                            type: object
                        unit:
                            type: string
                        userName:
                            type: string
                        validNum:
                            type: integer
                    type: object
                msg:
                    type: string
            type: object
        GetMiningWorkerDetailV1Resp:
            example: '{ "code": 0, "msg": "", "data": [ { "workerName": "bhdc1.16A10404B",      "type": "H_hashrate",                "hashrateDatas": [ { "time": 1587902400000,          "hashrate": "0",                "reject": 0                     }, { "time": 1587906000000, "hashrate": "0", "reject": 0 } ] }, { "workerName": "bhdc1.16A10404B",     "type": "D_hashrate",                 "hashrateDatas": [ { "time": 1587902400000,           "hashrate": "0",                 "reject": 0                      }, { "time": 1587906000000, "hashrate": "0", "reject": 0 } ] } ] }'
            properties:
                code:
                    type: integer
                data:
                    items:
                        properties:
                            hashrateDatas:
                                items:
                                    properties:
                                        hashrate:
                                            type: string
                                        reject:
                                            type: integer
                                        time:
                                            format: int64
                                            type: integer
                                    type: object
                                type: array
                            type:
                                type: string
                            workerName:
                                type: string
                        type: object
                    type: array
                msg:
                    type: string
            type: object
        GetMiningWorkerListV1Resp:
            example: '{ "code": 0, "msg": "", "data": { "workerDatas": [ { "workerId": "1420554439452400131",   "workerName": "2X73",                "status": 3,                         "hashRate": 0,                       "dayHashRate": 0,                    "rejectRate": 0,                     "lastShareTime": 1587712919000       }, { "workerId": "7893926126382807951", "workerName": "AZDC1.1A10101", "status": 2, "hashRate": 29711247541680, "dayHashRate": 12697781298013.66, "rejectRate": 0, "lastShareTime": 1587969727000 } ], "totalNum": 18530,            "pageSize": 20                } }'
            properties:
                code:
                    type: integer
                data:
                    properties:
                        pageSize:
                            type: integer
                        totalNum:
                            type: integer
                        workerDatas:
                            items:
                                properties:
                                    dayHashRate:
                                        type: integer
                                    hashRate:
                                        type: integer
                                    lastShareTime:
                                        format: int64
                                        type: integer
                                    rejectRate:
                                        type: integer
                                    status:
                                        type: integer
                                    workerId:
                                        type: string
                                    workerName:
                                        type: string
                                type: object
                            type: array
                    type: object
                msg:
                    type: string
            type: object
        GetMyAllocationsV3Resp:
            example: '[ { "symbol": "BTCUSDT", "allocationId": 0, "allocationType": "SOR", "orderId": 1, "orderListId": -1, "price": "1.00000000", "qty": "5.00000000", "quoteQty": "5.00000000", "commission": "0.00000000", "commissionAsset": "BTC", "time": 1687506878118, "isBuyer": true, "isMaker": false, "isAllocator": false } ]'
            items:
                $ref: '#/components/schemas/GetMyAllocationsV3RespItem'
            type: array
        GetMyAllocationsV3RespItem:
            properties:
                allocationId:
                    format: int64
                    type: integer
                allocationType:
                    type: string
                commission:
                    type: string
                commissionAsset:
                    type: string
                isAllocator:
                    type: boolean
                isBuyer:
                    type: boolean
                isMaker:
                    type: boolean
                orderId:
                    format: int64
                    type: integer
                orderListId:
                    format: int64
                    type: integer
                price:
                    type: string
                qty:
                    type: string
                quoteQty:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        GetMyPreventedMatchesV3Resp:
            example: '[ { "symbol": "BTCUSDT", "preventedMatchId": 1, "takerOrderId": 5, "makerSymbol": "BTCUSDT", "makerOrderId": 3, "tradeGroupId": 1, "selfTradePreventionMode": "EXPIRE_MAKER", "price": "1.100000", "makerPreventedQuantity": "1.300000", "transactTime": 1669101687094 } ]'
            items:
                $ref: '#/components/schemas/GetMyPreventedMatchesV3RespItem'
            type: array
        GetMyPreventedMatchesV3RespItem:
            properties:
                makerOrderId:
                    format: int64
                    type: integer
                makerPreventedQuantity:
                    type: string
                makerSymbol:
                    type: string
                preventedMatchId:
                    format: int64
                    type: integer
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                symbol:
                    type: string
                takerOrderId:
                    format: int64
                    type: integer
                tradeGroupId:
                    format: int64
                    type: integer
                transactTime:
                    format: int64
                    type: integer
            type: object
        GetMyTradesV3Resp:
            example: '[ { "symbol": "BNBBTC", "id": 28457, "orderId": 100234, "orderListId": -1, "price": "4.00000100", "qty": "12.00000000", "quoteQty": "48.000012", "commission": "10.10000000", "commissionAsset": "BNB", "time": 1499865549590, "isBuyer": true, "isMaker": false, "isBestMatch": true } ]'
            items:
                $ref: '#/components/schemas/GetMyTradesV3RespItem'
            type: array
        GetMyTradesV3RespItem:
            properties:
                commission:
                    type: string
                commissionAsset:
                    type: string
                id:
                    type: integer
                isBestMatch:
                    type: boolean
                isBuyer:
                    type: boolean
                isMaker:
                    type: boolean
                orderId:
                    format: int64
                    type: integer
                orderListId:
                    format: int64
                    type: integer
                price:
                    type: string
                qty:
                    type: string
                quoteQty:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        GetOpenOrderListV3Resp:
            example: '[ { "orderListId": 31, "contingencyType": "OCO", "listStatusType": "EXEC_STARTED", "listOrderStatus": "EXECUTING", "listClientOrderId": "wuB13fmulKj3YjdqWEcsnp", "transactionTime": 1565246080644, "symbol": "LTCBTC", "orders": [ { "symbol": "LTCBTC", "orderId": 4, "clientOrderId": "r3EH2N76dHfLoSZWIUw1bT" }, { "symbol": "LTCBTC", "orderId": 5, "clientOrderId": "Cv1SnyPD3qhqpbjpYEHbd2" } ] } ]'
            items:
                $ref: '#/components/schemas/GetOpenOrderListV3RespItem'
            type: array
        GetOpenOrderListV3RespItem:
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
        GetOpenOrdersV3Resp:
            example: '[ { "symbol": "LTCBTC", "orderId": 1, "orderListId": -1,  "clientOrderId": "myOrder1", "price": "0.1", "origQty": "1.0", "executedQty": "0.0", "cummulativeQuoteQty": "0.0", "status": "NEW", "timeInForce": "GTC", "type": "LIMIT", "side": "BUY", "stopPrice": "0.0", "icebergQty": "0.0", "time": 1499827319559, "updateTime": 1499827319559, "isWorking": true, "origQuoteOrderQty": "0.000000", "workingTime": 1499827319559, "selfTradePreventionMode": "NONE" } ]'
            items:
                $ref: '#/components/schemas/GetOpenOrdersV3RespItem'
            type: array
        GetOpenOrdersV3RespItem:
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                icebergQty:
                    type: string
                isWorking:
                    type: boolean
                orderId:
                    format: int64
                    type: integer
                orderListId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origQuoteOrderQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
                workingTime:
                    format: int64
                    type: integer
            type: object
        GetOrderListV3Resp:
            example: '{ "orderListId": 27, "contingencyType": "OCO", "listStatusType": "EXEC_STARTED", "listOrderStatus": "EXECUTING", "listClientOrderId": "h2USkA5YQpaXHPIrkd96xE", "transactionTime": 1565245656253, "symbol": "LTCBTC", "orders": [ { "symbol": "LTCBTC", "orderId": 4, "clientOrderId": "qD1gy3kc3Gx0rihm9Y3xwS" }, { "symbol": "LTCBTC", "orderId": 5, "clientOrderId": "ARzZ9I00CPM8i3NhmU9Ega" } ] }'
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
        GetOrderV3Resp:
            example: '{ "symbol": "LTCBTC", "orderId": 1, "orderListId": -1,                  "clientOrderId": "myOrder1", "price": "0.1", "origQty": "1.0", "executedQty": "0.0", "cummulativeQuoteQty": "0.0", "status": "NEW", "timeInForce": "GTC", "type": "LIMIT", "side": "BUY", "stopPrice": "0.0", "icebergQty": "0.0", "time": 1499827319559, "updateTime": 1499827319559, "isWorking": true, "workingTime":1499827319559, "origQuoteOrderQty": "0.000000", "selfTradePreventionMode": "NONE" }'
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                icebergQty:
                    type: string
                isWorking:
                    type: boolean
                orderId:
                    format: int64
                    type: integer
                orderListId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origQuoteOrderQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
                workingTime:
                    format: int64
                    type: integer
            type: object
        GetPingV3Resp:
            example: '{}'
            type: object
        GetPortfolioAccountV1Resp:
            example: '{ "uniMMR": "5167.92171923",         "accountEquity": "122607.35137903",   "actualEquity": "142607.35137903",    "accountMaintMargin": "23.72469206",  "accountInitialMargin": "47.44938412",  "totalAvailableBalance" : "122,559.90199491", "accountStatus": "NORMAL",    "accountType": "PM_1"      }'
            properties:
                accountEquity:
                    type: string
                accountInitialMargin:
                    type: string
                accountMaintMargin:
                    type: string
                accountStatus:
                    type: string
                accountType:
                    type: string
                actualEquity:
                    type: string
                totalAvailableBalance:
                    type: string
                uniMMR:
                    type: string
            type: object
        GetPortfolioAssetIndexPriceV1Resp:
            example: '[ { "asset": "BTC", "assetIndexPrice": "28251.9136906",   "time": 1683518338121 } ]'
            items:
                $ref: '#/components/schemas/GetPortfolioAssetIndexPriceV1RespItem'
            type: array
        GetPortfolioAssetIndexPriceV1RespItem:
            properties:
                asset:
                    type: string
                assetIndexPrice:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        GetPortfolioBalanceV1Resp:
            example: '[ { "asset": "BTC",     "totalWalletBalance": "100",     "crossMarginAsset": "100",     "crossMarginBorrowed": "0",     "crossMarginFree": "100",     "crossMarginInterest": "0",     "crossMarginLocked": "0",   "umWalletBalance": "0",     "umUnrealizedPNL": "0",      "cmWalletBalance": "0",     "cmUnrealizedPNL": "0",     "updateTime": 0, "negativeBalance": "0", "optionWalletBalance": "0",   "optionEquity": "0"   } ]'
            items:
                $ref: '#/components/schemas/GetPortfolioBalanceV1RespItem'
            type: array
        GetPortfolioBalanceV1RespItem:
            properties:
                asset:
                    type: string
                cmUnrealizedPNL:
                    type: string
                cmWalletBalance:
                    type: string
                crossMarginAsset:
                    type: string
                crossMarginBorrowed:
                    type: string
                crossMarginFree:
                    type: string
                crossMarginInterest:
                    type: string
                crossMarginLocked:
                    type: string
                negativeBalance:
                    type: string
                optionEquity:
                    type: string
                optionWalletBalance:
                    type: string
                totalWalletBalance:
                    type: string
                umUnrealizedPNL:
                    type: string
                umWalletBalance:
                    type: string
                updateTime:
                    format: int64
                    type: integer
            type: object
        GetPortfolioCollateralRateV1Resp:
            example: '[ { "asset": "USDC", "collateralRate": "1.0000" }, { "asset": "BUSD", "collateralRate": "1.0000" } ]'
            items:
                $ref: '#/components/schemas/GetPortfolioCollateralRateV1RespItem'
            type: array
        GetPortfolioCollateralRateV1RespItem:
            properties:
                asset:
                    type: string
                collateralRate:
                    type: string
            type: object
        GetPortfolioCollateralRateV2Resp:
            example: '[ { "asset": "BNB", "collateralInfo": [ { "tierFloor": "0.0000", "tierCap": "1000.0000", "collateralRate": "1.0000", "cum":"0.0000"     }, { "tierFloor": "1000.0000", "tierCap": "2000.0000", "collateralRate": "0.9000", "cum":"0.0000" } ] }, { "asset": "USDT", "collateralInfo": [ { "tierFloor": "0.0000", "tierCap": "1000.0000", "collateralRate": "1.0000", "cum":"0.0000" }, { "tierFloor": "1000.0000", "tierCap": "2000.0000", "collateralRate": "0.9999", "cum":"0.0000" } ] } ]'
            items:
                $ref: '#/components/schemas/GetPortfolioCollateralRateV2RespItem'
            type: array
        GetPortfolioCollateralRateV2RespItem:
            properties:
                asset:
                    type: string
                collateralInfo:
                    items:
                        properties:
                            collateralRate:
                                type: string
                            cum:
                                type: string
                            tierCap:
                                type: string
                            tierFloor:
                                type: string
                        type: object
                    type: array
            type: object
        GetPortfolioInterestHistoryV1Resp:
            example: '[ { "asset": "USDT", "interest": "24.4440",                "interestAccruedTime": 1670227200000, "interestRate": "0.0001164",          "principal": "210000" } ]'
            items:
                $ref: '#/components/schemas/GetPortfolioInterestHistoryV1RespItem'
            type: array
        GetPortfolioInterestHistoryV1RespItem:
            properties:
                asset:
                    type: string
                interest:
                    type: string
                interestAccruedTime:
                    format: int64
                    type: integer
                interestRate:
                    type: string
                principal:
                    type: string
            type: object
        GetPortfolioMarginAssetLeverageV1Resp:
            example: '[ { "asset": "USDC", "leverage": 10 }, { "asset": "USDT", "leverage": 10 } ]'
            items:
                $ref: '#/components/schemas/GetPortfolioMarginAssetLeverageV1RespItem'
            type: array
        GetPortfolioMarginAssetLeverageV1RespItem:
            properties:
                asset:
                    type: string
                leverage:
                    type: integer
            type: object
        GetPortfolioPmLoanHistoryV1Resp:
            example: '{ "total": 3, "rows": [ { "asset": "USDT", "amount": "404.80294503", "repayTime": 1731336427804 }, { "asset": "USDT", "amount": "4620.41204574", "repayTime": 1726125090016 } ] }'
            properties:
                rows:
                    items:
                        properties:
                            amount:
                                type: string
                            asset:
                                type: string
                            repayTime:
                                format: int64
                                type: integer
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetPortfolioPmLoanV1Resp:
            example: '{ "asset": "BUSD", "amount":  "579.45"  }'
            properties:
                amount:
                    type: string
                asset:
                    type: string
            type: object
        GetPortfolioRepayFuturesSwitchV1Resp:
            example: '{ "autoRepay": true   }'
            properties:
                autoRepay:
                    type: boolean
            type: object
        GetRateLimitOrderV3Resp:
            example: '[ { "rateLimitType": "ORDERS", "interval": "SECOND", "intervalNum": 10, "limit": 50, "count": 0 }, { "rateLimitType": "ORDERS", "interval": "DAY", "intervalNum": 1, "limit": 160000, "count": 0 } ]'
            items:
                $ref: '#/components/schemas/GetRateLimitOrderV3RespItem'
            type: array
        GetRateLimitOrderV3RespItem:
            properties:
                count:
                    type: integer
                interval:
                    type: string
                intervalNum:
                    type: integer
                limit:
                    type: integer
                rateLimitType:
                    type: string
            type: object
        GetSolStakingAccountV1Resp:
            example: '{ "bnsolAmount":"1.10928781", "holdingInSOL":"1.22330928", "thirtyDaysProfitInSOL":"0.22330928" }'
            properties:
                bnsolAmount:
                    type: string
                holdingInSOL:
                    type: string
                thirtyDaysProfitInSOL:
                    type: string
            type: object
        GetSolStakingSolHistoryBnsolRewardsHistoryV1Resp:
            example: '{ "estRewardsInSOL":"1.23230920", "rows":[ { "time":1575018510000, "amountInSOL":"0.23223",  "holding":"2.3223",  "holdingInSOL":"2.4231", "annualPercentageRate":"0.5"  } ], "total": 1 }'
            properties:
                estRewardsInSOL:
                    type: string
                rows:
                    items:
                        properties:
                            amountInSOL:
                                type: string
                            annualPercentageRate:
                                type: string
                            holding:
                                type: string
                            holdingInSOL:
                                type: string
                            time:
                                format: int64
                                type: integer
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetSolStakingSolHistoryBoostRewardsHistoryV1Resp:
            example: '{ "rows":[ { "time":1729520680, "token":"SOL", "amount":"1.20291028", "bnsolHolding":"2.0928798",  "status":"SUCCESS"  } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            amount:
                                type: string
                            bnsolHolding:
                                type: string
                            status:
                                type: string
                            time:
                                format: int64
                                type: integer
                            token:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetSolStakingSolHistoryRateHistoryV1Resp:
            example: '{ "rows": [ { "annualPercentageRate": "0.00006408",   "exchangeRate": "1.001212343432",   "boostRewards":[ { "boostAPR":"0.12000000", "rewardsAsset":"SOL" }, { "boostAPR":"0.00200000", "rewardsAsset":"BNB" } ], "time": 1577233578000 } ], "total": "1" }'
            properties:
                rows:
                    items:
                        properties:
                            annualPercentageRate:
                                type: string
                            boostRewards:
                                items:
                                    properties:
                                        boostAPR:
                                            type: string
                                        rewardsAsset:
                                            type: string
                                    type: object
                                type: array
                            exchangeRate:
                                type: string
                            time:
                                format: int64
                                type: integer
                        type: object
                    type: array
                total:
                    type: string
            type: object
        GetSolStakingSolHistoryRedemptionHistoryV1Resp:
            example: '{ "rows": [ { "time":1575018510000, "arrivalTime":1575018510000, "asset":"BNSOL", "amount":"21312.23223", "distributeAsset":"SOL", "distributeAmount":"21338.0699", "exchangeRate": "1.00121234", "status":"SUCCESS"     } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            amount:
                                type: string
                            arrivalTime:
                                format: int64
                                type: integer
                            asset:
                                type: string
                            distributeAmount:
                                type: string
                            distributeAsset:
                                type: string
                            exchangeRate:
                                type: string
                            status:
                                type: string
                            time:
                                format: int64
                                type: integer
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetSolStakingSolHistoryStakingHistoryV1Resp:
            example: '{ "rows": [ { "time":1575018510000, "asset":"SOL", "amount":"21312.23223", "distributeAsset":"BNSOL", "distributeAmount":"21286.42584", "exchangeRate": "1.00121234", "status":"SUCCESS"  } ], "total": 1 }'
            properties:
                rows:
                    items:
                        properties:
                            amount:
                                type: string
                            asset:
                                type: string
                            distributeAmount:
                                type: string
                            distributeAsset:
                                type: string
                            exchangeRate:
                                type: string
                            status:
                                type: string
                            time:
                                format: int64
                                type: integer
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetSolStakingSolHistoryUnclaimedRewardsV1Resp:
            example: '[ { "amount":"1.00000011", "rewardsAsset":"SOL" }, { "amount":"2.00202321", "rewardsAsset":"BNB" } ]'
            items:
                $ref: '#/components/schemas/GetSolStakingSolHistoryUnclaimedRewardsV1RespItem'
            type: array
        GetSolStakingSolHistoryUnclaimedRewardsV1RespItem:
            properties:
                amount:
                    type: string
                rewardsAsset:
                    type: string
            type: object
        GetSolStakingSolQuotaV1Resp:
            example: '{ "leftStakingPersonalQuota": "1000", "leftRedemptionPersonalQuota": "1000", "minStakeAmount": "0.01000000", "minRedeemAmount": "0.00000001", "redeemPeriod": 4, "stakeable": true, "redeemable": true, "soldOut": false, "commissionFee": "0.25000000", "nextEpochTime": 725993969475, "calculating": false }'
            properties:
                calculating:
                    type: boolean
                commissionFee:
                    type: string
                leftRedemptionPersonalQuota:
                    type: string
                leftStakingPersonalQuota:
                    type: string
                minRedeemAmount:
                    type: string
                minStakeAmount:
                    type: string
                nextEpochTime:
                    format: int64
                    type: integer
                redeemPeriod:
                    type: integer
                redeemable:
                    type: boolean
                soldOut:
                    type: boolean
                stakeable:
                    type: boolean
            type: object
        GetSpotDelistScheduleV1Resp:
            example: '[ { "delistTime": 1686161202000, "symbols": [ "BTCUSDT", "ETHUSDT" ] }, { "delistTime": 1686222232000, "symbols": [ "ADAUSDT" ] } ]'
            items:
                $ref: '#/components/schemas/GetSpotDelistScheduleV1RespItem'
            type: array
        GetSpotDelistScheduleV1RespItem:
            properties:
                delistTime:
                    format: int64
                    type: integer
                symbols:
                    items:
                        type: string
                    type: array
            type: object
        GetSpotOpenSymbolListV1Resp:
            example: '[ { "openTime": 1686161202000, "symbols": [ "BNBBTC", "BNBETH" ] }, { "openTime": 1686222232000, "symbols": [ "BTCUSDT" ] } ]'
            items:
                $ref: '#/components/schemas/GetSpotOpenSymbolListV1RespItem'
            type: array
        GetSpotOpenSymbolListV1RespItem:
            properties:
                openTime:
                    format: int64
                    type: integer
                symbols:
                    items:
                        type: string
                    type: array
            type: object
        GetSubAccountAssetsV3Resp:
            example: '{ "balances":[ { "freeze":0, "withdrawing":0, "asset":"ADA", "free":10000, "locked":0 }, { "freeze":0, "withdrawing":0, "asset":"BNB", "free":10003, "locked":0 }, { "freeze":0, "withdrawing":0, "asset":"BTC", "free":11467.6399, "locked":0 }, { "freeze":0, "withdrawing":0, "asset":"ETH", "free":10004.995, "locked":0 }, { "freeze":0, "withdrawing":0, "asset":"USDT", "free":11652.14213, "locked":0 } ] }'
            properties:
                balances:
                    items:
                        properties:
                            asset:
                                type: string
                            free:
                                type: integer
                            freeze:
                                type: integer
                            locked:
                                type: integer
                            withdrawing:
                                type: integer
                        type: object
                    type: array
            type: object
        GetSubAccountAssetsV4Resp:
            example: '{ "balances":[ { "freeze":"0", "withdrawing":"0", "asset":"ADA", "free":"10000", "locked":"0" }, { "freeze":"0", "withdrawing":"0", "asset":"BNB", "free":"10003", "locked":"0" }, { "freeze":"0", "withdrawing":"0", "asset":"BTC", "free":"11467.6399", "locked":"0" } ] }'
            properties:
                balances:
                    items:
                        properties:
                            asset:
                                type: string
                            free:
                                type: string
                            freeze:
                                type: string
                            locked:
                                type: string
                            withdrawing:
                                type: string
                        type: object
                    type: array
            type: object
        GetSubAccountFuturesAccountSummaryV1Resp:
            example: '{ "totalInitialMargin": "9.83137400", "totalMaintenanceMargin": "0.41568700", "totalMarginBalance": "23.03235621", "totalOpenOrderInitialMargin": "9.00000000", "totalPositionInitialMargin": "0.83137400", "totalUnrealizedProfit": "0.03219710", "totalWalletBalance": "22.15879444", "asset": "USD",   "subAccountList":[ { "email": "123@test.com", "totalInitialMargin": "9.00000000", "totalMaintenanceMargin": "0.00000000", "totalMarginBalance": "22.12659734", "totalOpenOrderInitialMargin": "9.00000000", "totalPositionInitialMargin": "0.00000000", "totalUnrealizedProfit": "0.00000000", "totalWalletBalance": "22.12659734", "asset": "USD"  }, { "email": "345@test.com", "totalInitialMargin": "0.83137400", "totalMaintenanceMargin": "0.41568700", "totalMarginBalance": "0.90575887", "totalOpenOrderInitialMargin": "0.00000000", "totalPositionInitialMargin": "0.83137400", "totalUnrealizedProfit": "0.03219710", "totalWalletBalance": "0.87356177", "asset": "USD" } ] }'
            properties:
                asset:
                    type: string
                subAccountList:
                    items:
                        properties:
                            asset:
                                type: string
                            email:
                                type: string
                            totalInitialMargin:
                                type: string
                            totalMaintenanceMargin:
                                type: string
                            totalMarginBalance:
                                type: string
                            totalOpenOrderInitialMargin:
                                type: string
                            totalPositionInitialMargin:
                                type: string
                            totalUnrealizedProfit:
                                type: string
                            totalWalletBalance:
                                type: string
                        type: object
                    type: array
                totalInitialMargin:
                    type: string
                totalMaintenanceMargin:
                    type: string
                totalMarginBalance:
                    type: string
                totalOpenOrderInitialMargin:
                    type: string
                totalPositionInitialMargin:
                    type: string
                totalUnrealizedProfit:
                    type: string
                totalWalletBalance:
                    type: string
            type: object
        GetSubAccountFuturesAccountSummaryV2Resp:
            example: '{ "futureAccountSummaryResp": { "totalInitialMargin": "9.83137400", "totalMaintenanceMargin": "0.41568700", "totalMarginBalance": "23.03235621", "totalOpenOrderInitialMargin": "9.00000000", "totalPositionInitialMargin": "0.83137400", "totalUnrealizedProfit": "0.03219710", "totalWalletBalance": "22.15879444", "asset": "USD",   "subAccountList":[ { "email": "123@test.com", "totalInitialMargin": "9.00000000", "totalMaintenanceMargin": "0.00000000", "totalMarginBalance": "22.12659734", "totalOpenOrderInitialMargin": "9.00000000", "totalPositionInitialMargin": "0.00000000", "totalUnrealizedProfit": "0.00000000", "totalWalletBalance": "22.12659734", "asset": "USD"   }, { "email": "345@test.com", "totalInitialMargin": "0.83137400", "totalMaintenanceMargin": "0.41568700", "totalMarginBalance": "0.90575887", "totalOpenOrderInitialMargin": "0.00000000", "totalPositionInitialMargin": "0.83137400", "totalUnrealizedProfit": "0.03219710", "totalWalletBalance": "0.87356177", "asset": "USD" } ] } }'
            properties:
                futureAccountSummaryResp:
                    properties:
                        asset:
                            type: string
                        subAccountList:
                            items:
                                properties:
                                    asset:
                                        type: string
                                    email:
                                        type: string
                                    totalInitialMargin:
                                        type: string
                                    totalMaintenanceMargin:
                                        type: string
                                    totalMarginBalance:
                                        type: string
                                    totalOpenOrderInitialMargin:
                                        type: string
                                    totalPositionInitialMargin:
                                        type: string
                                    totalUnrealizedProfit:
                                        type: string
                                    totalWalletBalance:
                                        type: string
                                type: object
                            type: array
                        totalInitialMargin:
                            type: string
                        totalMaintenanceMargin:
                            type: string
                        totalMarginBalance:
                            type: string
                        totalOpenOrderInitialMargin:
                            type: string
                        totalPositionInitialMargin:
                            type: string
                        totalUnrealizedProfit:
                            type: string
                        totalWalletBalance:
                            type: string
                    type: object
            type: object
        GetSubAccountFuturesAccountV1Resp:
            example: '{ "email": "abc@test.com", "asset": "USDT", "assets":[ { "asset": "USDT", "initialMargin": "0.00000000", "maintenanceMargin": "0.00000000", "marginBalance": "0.88308000", "maxWithdrawAmount": "0.88308000", "openOrderInitialMargin": "0.00000000", "positionInitialMargin": "0.00000000", "unrealizedProfit": "0.00000000", "walletBalance": "0.88308000" } ], "canDeposit": true, "canTrade": true, "canWithdraw": true, "feeTier": 2, "maxWithdrawAmount": "0.88308000", "totalInitialMargin": "0.00000000", "totalMaintenanceMargin": "0.00000000", "totalMarginBalance": "0.88308000", "totalOpenOrderInitialMargin": "0.00000000", "totalPositionInitialMargin": "0.00000000", "totalUnrealizedProfit": "0.00000000", "totalWalletBalance": "0.88308000", "updateTime": 1576756674610 }'
            properties:
                asset:
                    type: string
                assets:
                    items:
                        properties:
                            asset:
                                type: string
                            initialMargin:
                                type: string
                            maintenanceMargin:
                                type: string
                            marginBalance:
                                type: string
                            maxWithdrawAmount:
                                type: string
                            openOrderInitialMargin:
                                type: string
                            positionInitialMargin:
                                type: string
                            unrealizedProfit:
                                type: string
                            walletBalance:
                                type: string
                        type: object
                    type: array
                canDeposit:
                    type: boolean
                canTrade:
                    type: boolean
                canWithdraw:
                    type: boolean
                email:
                    type: string
                feeTier:
                    type: integer
                maxWithdrawAmount:
                    type: string
                totalInitialMargin:
                    type: string
                totalMaintenanceMargin:
                    type: string
                totalMarginBalance:
                    type: string
                totalOpenOrderInitialMargin:
                    type: string
                totalPositionInitialMargin:
                    type: string
                totalUnrealizedProfit:
                    type: string
                totalWalletBalance:
                    type: string
                updateTime:
                    format: int64
                    type: integer
            type: object
        GetSubAccountFuturesAccountV2Resp:
            example: '{ "futureAccountResp": { "email": "abc@test.com", "assets":[ { "asset": "USDT", "initialMargin": "0.00000000", "maintenanceMargin": "0.00000000", "marginBalance": "0.88308000", "maxWithdrawAmount": "0.88308000", "openOrderInitialMargin": "0.00000000", "positionInitialMargin": "0.00000000", "unrealizedProfit": "0.00000000", "walletBalance": "0.88308000" } ], "canDeposit": true, "canTrade": true, "canWithdraw": true, "feeTier": 2, "maxWithdrawAmount": "0.88308000", "totalInitialMargin": "0.00000000", "totalMaintenanceMargin": "0.00000000", "totalMarginBalance": "0.88308000", "totalOpenOrderInitialMargin": "0.00000000", "totalPositionInitialMargin": "0.00000000", "totalUnrealizedProfit": "0.00000000", "totalWalletBalance": "0.88308000", "updateTime": 1576756674610 } }'
            properties:
                futureAccountResp:
                    properties:
                        assets:
                            items:
                                properties:
                                    asset:
                                        type: string
                                    initialMargin:
                                        type: string
                                    maintenanceMargin:
                                        type: string
                                    marginBalance:
                                        type: string
                                    maxWithdrawAmount:
                                        type: string
                                    openOrderInitialMargin:
                                        type: string
                                    positionInitialMargin:
                                        type: string
                                    unrealizedProfit:
                                        type: string
                                    walletBalance:
                                        type: string
                                type: object
                            type: array
                        canDeposit:
                            type: boolean
                        canTrade:
                            type: boolean
                        canWithdraw:
                            type: boolean
                        email:
                            type: string
                        feeTier:
                            type: integer
                        maxWithdrawAmount:
                            type: string
                        totalInitialMargin:
                            type: string
                        totalMaintenanceMargin:
                            type: string
                        totalMarginBalance:
                            type: string
                        totalOpenOrderInitialMargin:
                            type: string
                        totalPositionInitialMargin:
                            type: string
                        totalUnrealizedProfit:
                            type: string
                        totalWalletBalance:
                            type: string
                        updateTime:
                            format: int64
                            type: integer
                    type: object
            type: object
        GetSubAccountFuturesInternalTransferV1Resp:
            example: '{ "success":true, "futuresType": 2, "transfers":[ { "from":"aaa@test.com", "to":"bbb@test.com", "asset":"BTC", "qty":"1", "tranId":11897001102, "time":1544433328000 }, { "from":"bbb@test.com", "to":"ccc@test.com", "asset":"ETH", "qty":"2", "tranId":11631474902, "time":1544433328000 } ] }'
            properties:
                futuresType:
                    type: integer
                success:
                    type: boolean
                transfers:
                    items:
                        properties:
                            asset:
                                type: string
                            from:
                                type: string
                            qty:
                                type: string
                            time:
                                format: int64
                                type: integer
                            to:
                                type: string
                            tranId:
                                format: int64
                                type: integer
                        type: object
                    type: array
            type: object
        GetSubAccountFuturesMovePositionV1Resp:
            example: '{ "total": 3, "futureMovePositionOrderVoList": [{ "fromUserEmail": "testFrom@google.com", "toUserEmail": "testTo@google.com", "productType": "UM", "symbol": "BTCUSDT", "price": "105025.50981609", "quantity": "0.00100000", "positionSide": "BOTH", "side": "SELL", "timeStamp": 1737544712000 }, { "fromUserEmail": "testFrom1@google.com", "toUserEmail": "testTo1@google.com", "productType": "UM", "symbol": "BTCUSDT", "price": "97100.00000000", "quantity": "0.00100000", "positionSide": "BOTH", "side": "SELL", "timeStamp": 1740041627000 }, { "fromUserEmail": "testFrom2@google.com", "toUserEmail": "testTo2@google.com", "productType": "UM", "symbol": "BTCUSDT", "price": "97108.62068889", "quantity": "0.00100000", "positionSide": "BOTH", "side": "SELL", "timeStamp": 1740041959000 }] }'
            properties:
                futureMovePositionOrderVoList:
                    items:
                        properties:
                            fromUserEmail:
                                type: string
                            positionSide:
                                type: string
                            price:
                                type: string
                            productType:
                                type: string
                            quantity:
                                type: string
                            side:
                                type: string
                            symbol:
                                type: string
                            timeStamp:
                                type: integer
                            toUserEmail:
                                type: string
                        type: object
                    type: array
                total:
                    type: integer
            type: object
        GetSubAccountFuturesPositionRiskV1Resp:
            example: '[ { "entryPrice": "9975.12000", "leverage": "50",               "maxNotional": "1000000",       "liquidationPrice": "7963.54", "markPrice": "9973.50770517", "positionAmount": "0.010", "symbol": "BTCUSDT", "unrealizedProfit": "-0.01612295" } ]'
            items:
                $ref: '#/components/schemas/GetSubAccountFuturesPositionRiskV1RespItem'
            type: array
        GetSubAccountFuturesPositionRiskV1RespItem:
            properties:
                entryPrice:
                    type: string
                leverage:
                    type: string
                liquidationPrice:
                    type: string
                markPrice:
                    type: string
                maxNotional:
                    type: string
                positionAmount:
                    type: string
                symbol:
                    type: string
                unrealizedProfit:
                    type: string
            type: object
        GetSubAccountFuturesPositionRiskV2Resp:
            example: '{ "futurePositionRiskVos": [ { "entryPrice": "9975.12000", "leverage": "50",               "maxNotional": "1000000",       "liquidationPrice": "7963.54", "markPrice": "9973.50770517", "positionAmount": "0.010", "symbol": "BTCUSDT", "unrealizedProfit": "-0.01612295" } ] }'
            properties:
                futurePositionRiskVos:
                    items:
                        properties:
                            entryPrice:
                                type: string
                            leverage:
                                type: string
                            liquidationPrice:
                                type: string
                            markPrice:
                                type: string
                            maxNotional:
                                type: string
                            positionAmount:
                                type: string
                            symbol:
                                type: string
                            unrealizedProfit:
                                type: string
                        type: object
                    type: array
            type: object
        GetSubAccountListV1Resp:
            example: '{ "subAccounts":[ { "email":"testsub@gmail.com", "isFreeze":false, "createTime":1544433328000, "isManagedSubAccount": false, "isAssetManagementSubAccount": false }, { "email":"virtual@oxebmvfonoemail.com", "isFreeze":false, "createTime":1544433328000, "isManagedSubAccount": false, "isAssetManagementSubAccount": false } ] }'
            properties:
                subAccounts:
                    items:
                        properties:
                            createTime:
                                format: int64
                                type: integer
                            email:
                                type: string
                            isAssetManagementSubAccount:
                                type: boolean
                            isFreeze:
                                type: boolean
                            isManagedSubAccount:
                                type: boolean
                        type: object
                    type: array
            type: object
        GetSubAccountMarginAccountSummaryV1Resp:
            example: '{ "totalAssetOfBtc": "4.33333333", "totalLiabilityOfBtc": "2.11111112", "totalNetAssetOfBtc": "2.22222221", "subAccountList":[ { "email":"123@test.com", "totalAssetOfBtc": "2.11111111", "totalLiabilityOfBtc": "1.11111111", "totalNetAssetOfBtc": "1.00000000" }, { "email":"345@test.com", "totalAssetOfBtc": "2.22222222", "totalLiabilityOfBtc": "1.00000001", "totalNetAssetOfBtc": "1.22222221" } ] }'
            properties:
                subAccountList:
                    items:
                        properties:
                            email:
                                type: string
                            totalAssetOfBtc:
                                type: string
                            totalLiabilityOfBtc:
                                type: string
                            totalNetAssetOfBtc:
                                type: string
                        type: object
                    type: array
                totalAssetOfBtc:
                    type: string
                totalLiabilityOfBtc:
                    type: string
                totalNetAssetOfBtc:
                    type: string
            type: object
        GetSubAccountMarginAccountV1Resp:
            example: '{ "email":"123@test.com", "marginLevel": "11.64405625", "totalAssetOfBtc": "6.82728457", "totalLiabilityOfBtc": "0.58633215", "totalNetAssetOfBtc": "6.24095242", "marginTradeCoeffVo": { "forceLiquidationBar": "1.10000000",   "marginCallBar": "1.50000000",         "normalBar": "2.00000000"       }, "marginUserAssetVoList": [ { "asset": "BTC", "borrowed": "0.00000000", "free": "0.00499500", "interest": "0.00000000", "locked": "0.00000000", "netAsset": "0.00499500" }, { "asset": "BNB", "borrowed": "201.66666672", "free": "2346.50000000", "interest": "0.00000000", "locked": "0.00000000", "netAsset": "2144.83333328" }, { "asset": "ETH", "borrowed": "0.00000000", "free": "0.00000000", "interest": "0.00000000", "locked": "0.00000000", "netAsset": "0.00000000" }, { "asset": "USDT", "borrowed": "0.00000000", "free": "0.00000000", "interest": "0.00000000", "locked": "0.00000000", "netAsset": "0.00000000" } ] }'
            properties:
                email:
                    type: string
                marginLevel:
                    type: string
                marginTradeCoeffVo:
                    properties:
                        forceLiquidationBar:
                            type: string
                        marginCallBar:
                            type: string
                        normalBar:
                            type: string
                    type: object
                marginUserAssetVoList:
                    items:
                        properties:
                            asset:
                                type: string
                            borrowed:
                                type: string
                            free:
                                type: string
                            interest:
                                type: string
                            locked:
                                type: string
                            netAsset:
                                type: string
                        type: object
                    type: array
                totalAssetOfBtc:
                    type: string
                totalLiabilityOfBtc:
                    type: string
                totalNetAssetOfBtc:
                    type: string
            type: object
        GetSubAccountSpotSummaryV1Resp:
            example: '{ "totalCount":2, "masterAccountTotalAsset": "0.23231201", "spotSubUserAssetBtcVoList":[ { "email":"sub123@test.com", "totalAsset":"9999.00000000" }, { "email":"test456@test.com", "totalAsset":"0.00000000" } ] }'
            properties:
                masterAccountTotalAsset:
                    type: string
                spotSubUserAssetBtcVoList:
                    items:
                        properties:
                            email:
                                type: string
                            totalAsset:
                                type: string
                        type: object
                    type: array
                totalCount:
                    type: integer
            type: object
        GetSubAccountStatusV1Resp:
            example: '[ { "email":"123@test.com",       "isSubUserEnabled": true,    "isUserActive": true,   "insertTime": 1570791523523,   "isMarginEnabled": true,      "isFutureEnabled": true,       "mobile": 1570791523523     } ]'
            items:
                $ref: '#/components/schemas/GetSubAccountStatusV1RespItem'
            type: array
        GetSubAccountStatusV1RespItem:
            properties:
                email:
                    type: string
                insertTime:
                    format: int64
                    type: integer
                isFutureEnabled:
                    type: boolean
                isMarginEnabled:
                    type: boolean
                isSubUserEnabled:
                    type: boolean
                isUserActive:
                    type: boolean
                mobile:
                    type: integer
            type: object
        GetSubAccountSubAccountApiIpRestrictionV1Resp:
            example: '{ "ipRestrict": "true", "ipList": [ "69.210.67.14", "8.34.21.10" ], "updateTime": 1636371437000, "apiKey": "k5V49ldtn4tszj6W3hystegdfvmGbqDzjmkCtpTvC0G74WhK7yd4rfCTo4lShf" }'
            properties:
                apiKey:
                    type: string
                ipList:
                    items:
                        type: string
                    type: array
                ipRestrict:
                    type: string
                updateTime:
                    format: int64
                    type: integer
            type: object
        GetSubAccountSubTransferHistoryV1Resp:
            example: '[ { "from":"aaa@test.com", "to":"bbb@test.com", "asset":"BTC", "qty":"10", "status": "SUCCESS", "tranId": 6489943656, "time":1544433328000 }, { "from":"bbb@test.com", "to":"ccc@test.com", "asset":"ETH", "qty":"2", "status": "SUCCESS", "tranId": 6489938713, "time":1544433328000 } ]'
            items:
                $ref: '#/components/schemas/GetSubAccountSubTransferHistoryV1RespItem'
            type: array
        GetSubAccountSubTransferHistoryV1RespItem:
            properties:
                asset:
                    type: string
                from:
                    type: string
                qty:
                    type: string
                status:
                    type: string
                time:
                    format: int64
                    type: integer
                to:
                    type: string
                tranId:
                    format: int64
                    type: integer
            type: object
        GetSubAccountTransferSubUserHistoryV1Resp:
            example: '[ { "counterParty":"master", "email":"master@test.com", "type":1,   "asset":"BTC", "qty":"1", "fromAccountType":"SPOT", "toAccountType":"SPOT", "status":"SUCCESS",  "tranId":11798835829, "time":1544433325000 }, { "counterParty":"subAccount", "email":"sub2@test.com", "type":1, "asset":"ETH", "qty":"2", "fromAccountType":"SPOT", "toAccountType":"COIN_FUTURE", "status":"SUCCESS", "tranId":11798829519, "time":1544433326000 } ]'
            items:
                $ref: '#/components/schemas/GetSubAccountTransferSubUserHistoryV1RespItem'
            type: array
        GetSubAccountTransferSubUserHistoryV1RespItem:
            properties:
                asset:
                    type: string
                counterParty:
                    type: string
                email:
                    type: string
                fromAccountType:
                    type: string
                qty:
                    type: string
                status:
                    type: string
                time:
                    format: int64
                    type: integer
                toAccountType:
                    type: string
                tranId:
                    format: int64
                    type: integer
                type:
                    type: integer
            type: object
        GetSubAccountUniversalTransferV1Resp:
            example: '{ "result": [ { "tranId": 92275823339, "fromEmail": "abctest@gmail.com", "toEmail": "deftest@gmail.com", "asset": "BNB", "amount": "0.01", "createTimeStamp": 1640317374000, "fromAccountType": "USDT_FUTURE", "toAccountType": "SPOT", "status": "SUCCESS", "clientTranId": "test" } ], "totalCount": 1 }'
            properties:
                result:
                    items:
                        properties:
                            amount:
                                type: string
                            asset:
                                type: string
                            clientTranId:
                                type: string
                            createTimeStamp:
                                type: integer
                            fromAccountType:
                                type: string
                            fromEmail:
                                type: string
                            status:
                                type: string
                            toAccountType:
                                type: string
                            toEmail:
                                type: string
                            tranId:
                                format: int64
                                type: integer
                        type: object
                    type: array
                totalCount:
                    type: integer
            type: object
        GetSystemStatusV1Resp:
            example: '{ "status": 0,               "msg": "normal"            }'
            properties:
                msg:
                    type: string
                status:
                    type: integer
            type: object
        GetTimeV3Resp:
            example: '{ "serverTime": 1499827319559 }'
            properties:
                serverTime:
                    format: int64
                    type: integer
            type: object
        GetTradesV3Resp:
            example: '[ { "id": 28457, "price": "4.00000100", "qty": "12.00000000", "quoteQty": "48.000012", "time": 1499865549590, "isBuyerMaker": true, "isBestMatch": true } ]'
            items:
                $ref: '#/components/schemas/GetTradesV3RespItem'
            type: array
        GetTradesV3RespItem:
            properties:
                id:
                    type: integer
                isBestMatch:
                    type: boolean
                isBuyerMaker:
                    type: boolean
                price:
                    type: string
                qty:
                    type: string
                quoteQty:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        MarginCreateMarginExchangeSmallLiabilityV1Req:
            properties:
                assetNames:
                    items:
                        type: string
                    type: array
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - assetNames
                - timestamp
            type: object
        MarginCreateMarginExchangeSmallLiabilityV1Resp:
            properties:
                code:
                    type: integer
                msg:
                    type: string
            type: object
        MarginCreateMarginOrderV1Req:
            properties:
                autoRepayAtCancel:
                    type: boolean
                icebergQty:
                    default: ""
                    type: string
                isIsolated:
                    default: ""
                    type: string
                newClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                price:
                    default: ""
                    type: string
                quantity:
                    default: ""
                    type: string
                quoteOrderQty:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                sideEffectType:
                    default: ""
                    type: string
                stopPrice:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
                timeInForce:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                type:
                    default: ""
                    type: string
            required:
                - symbol
                - side
                - type
                - timestamp
            type: object
        MarginCreateMarginOrderV1Resp:
            example: '{ "symbol": "BTCUSDT", "orderId": 28, "clientOrderId": "6gCrw2kRUAF9CvJDGP16IP", "isIsolated": true,        "transactTime": 1507725176595 }'
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                fills:
                    items:
                        properties:
                            commission:
                                type: string
                            commissionAsset:
                                type: string
                            price:
                                type: string
                            qty:
                                type: string
                            tradeId:
                                format: int64
                                type: integer
                        type: object
                    type: array
                isIsolated:
                    type: boolean
                marginBuyBorrowAmount:
                    format: int64
                    type: integer
                marginBuyBorrowAsset:
                    type: string
                orderId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                transactTime:
                    format: int64
                    type: integer
                type:
                    type: string
            type: object
        MarginGetMarginAvailableInventoryV1Resp:
            example: '{ "assets": { "MATIC": "100000000", "STPT": "100000000", "TVK": "100000000", "SHIB": "97409653" } ,   "updateTime": 1699272487 }'
            properties:
                assets:
                    additionalProperties:
                        type: string
                    type: object
                updateTime:
                    format: int64
                    type: integer
            type: object
        MarginGetMarginOpenOrdersV1Resp:
            example: '[ { "clientOrderId": "qhcZw71gAkCCTv0t0k8LUK", "cummulativeQuoteQty": "0.00000000", "executedQty": "0.00000000", "icebergQty": "0.00000000", "isWorking": true, "orderId": 211842552, "origQty": "0.30000000", "price": "0.00475010", "side": "SELL", "status": "NEW", "stopPrice": "0.00000000", "symbol": "BNBBTC", "isIsolated": true, "time": 1562040170089, "timeInForce": "GTC", "type": "LIMIT", "selfTradePreventionMode": "NONE", "updateTime": 1562040170089 } ]'
            items:
                $ref: '#/components/schemas/MarginGetMarginOpenOrdersV1RespItem'
            type: array
        MarginGetMarginOpenOrdersV1RespItem:
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                icebergQty:
                    type: string
                isIsolated:
                    type: boolean
                isWorking:
                    type: boolean
                orderId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
            type: object
        SpotCreateOrderCancelReplaceV3CancelResp:
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                orderId:
                    format: int64
                    type: integer
                orderListId:
                    format: int64
                    type: integer
                origClientOrderId:
                    type: string
                origQty:
                    type: string
                origQuoteOrderQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                transactTime:
                    format: int64
                    type: integer
                type:
                    type: string
            type: object
        SpotCreateOrderCancelReplaceV3Data:
            example: '{ "cancelResult": "SUCCESS", "newOrderResult": "SUCCESS", "cancelResponse": { "symbol": "BTCUSDT", "origClientOrderId": "DnLo3vTAQcjha43lAZhZ0y", "orderId": 9, "orderListId": -1, "clientOrderId": "osxN3JXAtJvKvCqGeMWMVR", "transactTime": 1684804350068, "price": "0.01000000", "origQty": "0.000100", "executedQty": "0.00000000", "origQuoteOrderQty": "0.000000", "cummulativeQuoteQty": "0.00000000", "status": "CANCELED", "timeInForce": "GTC", "type": "LIMIT", "side": "SELL", "selfTradePreventionMode": "NONE" }, "newOrderResponse": { "symbol": "BTCUSDT", "orderId": 10, "orderListId": -1, "clientOrderId": "wOceeeOzNORyLiQfw7jd8S", "transactTime": 1652928801803, "price": "0.02000000", "origQty": "0.040000", "executedQty": "0.00000000", "cummulativeQuoteQty": "0.00000000", "origQuoteOrderQty": "0.000000", "status": "NEW", "timeInForce": "GTC", "type": "LIMIT", "side": "BUY", "workingTime": 1669277163808, "fills": [], "selfTradePreventionMode": "NONE" } }'
            properties:
                cancelResponse:
                    oneOf:
                        - $ref: '#/components/schemas/APIError'
                        - $ref: '#/components/schemas/SpotCreateOrderCancelReplaceV3CancelResp'
                cancelResult:
                    type: string
                newOrderResponse:
                    oneOf:
                        - $ref: '#/components/schemas/APIError'
                        - $ref: '#/components/schemas/SpotCreateOrderCancelReplaceV3NewOrderResp'
                newOrderResult:
                    type: string
            type: object
        SpotCreateOrderCancelReplaceV3FailResp:
            properties:
                code:
                    type: integer
                data:
                    $ref: '#/components/schemas/SpotCreateOrderCancelReplaceV3Data'
                msg:
                    type: string
            type: object
        SpotCreateOrderCancelReplaceV3NewOrderResp:
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                fills:
                    items:
                        properties:
                            allocId:
                                format: int64
                            commission:
                                type: string
                            commissionAsset:
                                type: string
                            matchType:
                                type: string
                            price:
                                type: string
                            qty:
                                type: string
                            tradeId:
                                format: int64
                                type: integer
                        type: object
                    type: array
                orderId:
                    format: int64
                    type: integer
                orderListId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origQuoteOrderQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                transactTime:
                    format: int64
                    type: integer
                type:
                    type: string
                workingTime:
                    format: int64
                    type: integer
            type: object
        SpotCreateOrderCancelReplaceV3Req:
            properties:
                cancelNewClientOrderId:
                    default: ""
                    type: string
                cancelOrderId:
                    format: int64
                    type: integer
                cancelOrigClientOrderId:
                    default: ""
                    type: string
                cancelReplaceMode:
                    default: ""
                    type: string
                cancelRestrictions:
                    default: ""
                    type: string
                icebergQty:
                    default: ""
                    type: string
                newClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                orderRateLimitExceededMode:
                    default: ""
                    type: string
                price:
                    default: ""
                    type: string
                quantity:
                    default: ""
                    type: string
                quoteOrderQty:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                stopPrice:
                    default: ""
                    type: string
                strategyId:
                    format: int64
                    type: integer
                strategyType:
                    type: integer
                symbol:
                    default: ""
                    type: string
                timeInForce:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                trailingDelta:
                    format: int64
                    type: integer
                type:
                    default: ""
                    type: string
            required:
                - symbol
                - side
                - type
                - cancelReplaceMode
                - timestamp
            type: object
        SpotCreateOrderCancelReplaceV3Resp:
            oneOf:
                - $ref: '#/components/schemas/SpotCreateOrderCancelReplaceV3FailResp'
                - $ref: '#/components/schemas/SpotCreateOrderCancelReplaceV3Data'
        SpotCreateOrderTestV3Req:
            properties:
                computeCommissionRates:
                    type: boolean
                icebergQty:
                    default: ""
                    type: string
                newClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                price:
                    default: ""
                    type: string
                quantity:
                    default: ""
                    type: string
                quoteOrderQty:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                stopPrice:
                    default: ""
                    type: string
                strategyId:
                    format: int64
                    type: integer
                strategyType:
                    type: integer
                symbol:
                    default: ""
                    type: string
                timeInForce:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                trailingDelta:
                    format: int64
                    type: integer
                type:
                    default: ""
                    type: string
            required:
                - symbol
                - side
                - type
                - timestamp
            type: object
        SpotCreateOrderTestV3Resp:
            properties:
                discount:
                    properties:
                        discount:
                            type: string
                        discountAsset:
                            type: string
                        enabledForAccount:
                            type: boolean
                        enabledForSymbol:
                            type: boolean
                    type: object
                standardCommissionForOrder:
                    properties:
                        maker:
                            type: string
                        taker:
                            type: string
                    type: object
                taxCommissionForOrder:
                    properties:
                        maker:
                            type: string
                        taker:
                            type: string
                    type: object
            type: object
        SpotCreateOrderV3Req:
            properties:
                icebergQty:
                    default: ""
                    type: string
                newClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                price:
                    default: ""
                    type: string
                quantity:
                    default: ""
                    type: string
                quoteOrderQty:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                stopPrice:
                    default: ""
                    type: string
                strategyId:
                    format: int64
                    type: integer
                strategyType:
                    type: integer
                symbol:
                    default: ""
                    type: string
                timeInForce:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                trailingDelta:
                    format: int64
                    type: integer
                type:
                    default: ""
                    type: string
            required:
                - symbol
                - side
                - type
                - timestamp
            type: object
        SpotCreateOrderV3Resp:
            example: '{ "symbol": "BTCUSDT", "orderId": 28, "orderListId": -1,  "clientOrderId": "6gCrw2kRUAF9CvJDGP16IP", "transactTime": 1507725176595 }'
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                fills:
                    items:
                        properties:
                            commission:
                                type: string
                            commissionAsset:
                                type: string
                            price:
                                type: string
                            qty:
                                type: string
                            tradeId:
                                format: int64
                                type: integer
                        type: object
                    type: array
                orderId:
                    format: int64
                    type: integer
                orderListId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origQuoteOrderQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                transactTime:
                    format: int64
                    type: integer
                type:
                    type: string
                workingTime:
                    format: int64
                    type: integer
            type: object
        SpotCreateSorOrderTestV3Req:
            properties:
                computeCommissionRates:
                    type: boolean
                icebergQty:
                    default: ""
                    type: string
                newClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                price:
                    default: ""
                    type: string
                quantity:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                selfTradePreventionMode:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                strategyId:
                    format: int64
                    type: integer
                strategyType:
                    type: integer
                symbol:
                    default: ""
                    type: string
                timeInForce:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                type:
                    default: ""
                    type: string
            required:
                - symbol
                - side
                - type
                - quantity
                - timestamp
            type: object
        SpotCreateSorOrderTestV3Resp:
            example: '{ "standardCommissionForOrder": {   "maker": "0.00000112", "taker": "0.00000114" }, "taxCommissionForOrder": {        "maker": "0.00000112", "taker": "0.00000114" }, "discount": {                     "enabledForAccount": true, "enabledForSymbol": true, "discountAsset": "BNB", "discount": "0.25000000"        } }'
            properties:
                discount:
                    properties:
                        discount:
                            type: string
                        discountAsset:
                            type: string
                        enabledForAccount:
                            type: boolean
                        enabledForSymbol:
                            type: boolean
                    type: object
                standardCommissionForOrder:
                    properties:
                        maker:
                            type: string
                        taker:
                            type: string
                    type: object
                taxCommissionForOrder:
                    properties:
                        maker:
                            type: string
                        taker:
                            type: string
                    type: object
            type: object
        SpotDeleteOpenOrdersV3Resp:
            items:
                oneOf:
                    - $ref: '#/components/schemas/SpotDeleteOpenOrdersV3RespOrderItem'
                    - $ref: '#/components/schemas/SpotDeleteOpenOrdersV3RespOrderListItem'
            type: array
        SpotDeleteOpenOrdersV3RespOrderItem:
            properties:
                clientOrderId:
                    type: string
                cummulativeQuoteQty:
                    type: string
                executedQty:
                    type: string
                orderId:
                    format: int64
                    type: integer
                orderListId:
                    format: int64
                    type: integer
                origClientOrderId:
                    type: string
                origQty:
                    type: string
                price:
                    type: string
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                transactTime:
                    format: int64
                    type: integer
                type:
                    type: string
            type: object
        SpotDeleteOpenOrdersV3RespOrderListItem:
            properties:
                contingencyType:
                    type: string
                listClientOrderId:
                    type: string
                listOrderStatus:
                    type: string
                listStatusType:
                    type: string
                orderListId:
                    format: int64
                    type: integer
                orderReports:
                    items:
                        $ref: '#/components/schemas/SpotDeleteOpenOrdersV3RespOrderItem'
                    type: array
                orders:
                    items:
                        properties:
                            clientOrderId:
                                type: string
                            orderId:
                                format: int64
                                type: integer
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                transactionTime:
                    format: int64
                    type: integer
            type: object
        SpotExchangeFilterExchangeMaxNumAlgoOrders:
            properties:
                filterType:
                    type: string
                maxNumAlgoOrders:
                    type: integer
            type: object
        SpotExchangeFilterExchangeMaxNumIcebergOrders:
            properties:
                filterType:
                    type: string
                maxNumIcebergOrders:
                    type: integer
            type: object
        SpotExchangeFilterExchangeMaxNumOrder:
            properties:
                filterType:
                    type: string
                maxNumOrders:
                    type: integer
            type: object
        SpotGetAggTradesV3RespItem:
            properties:
                M:
                    type: boolean
                T:
                    format: int64
                    type: integer
                a:
                    format: int64
                    type: integer
                f:
                    format: int64
                    type: integer
                l:
                    format: int64
                    type: integer
                m:
                    type: boolean
                p:
                    type: string
                q:
                    type: string
            type: object
        SpotGetExchangeInfoV3Resp:
            example: '{ "timezone": "UTC", "serverTime": 1565246363776, "rateLimits": [ { } ], "exchangeFilters": [ ], "symbols": [ { "symbol": "ETHBTC", "status": "TRADING", "baseAsset": "ETH", "baseAssetPrecision": 8, "quoteAsset": "BTC", "quotePrecision": 8,  "quoteAssetPrecision": 8, "baseCommissionPrecision": 8, "quoteCommissionPrecision": 8, "orderTypes": [ "LIMIT", "LIMIT_MAKER", "MARKET", "STOP_LOSS", "STOP_LOSS_LIMIT", "TAKE_PROFIT", "TAKE_PROFIT_LIMIT" ], "icebergAllowed": true, "ocoAllowed": true, "otoAllowed": true, "quoteOrderQtyMarketAllowed": true, "allowTrailingStop": false, "cancelReplaceAllowed":false, "isSpotTradingAllowed": true, "isMarginTradingAllowed": true, "filters": [ ], "permissions": [], "permissionSets": [ [ "SPOT", "MARGIN" ] ], "defaultSelfTradePreventionMode": "NONE", "allowedSelfTradePreventionModes": [ "NONE" ] } ], "sors": [ { "baseAsset": "BTC", "symbols": [ "BTCUSDT", "BTCUSDC" ] } ] }'
            properties:
                exchangeFilters:
                    items:
                        oneOf:
                            - $ref: '#/components/schemas/SpotExchangeFilterExchangeMaxNumOrder'
                            - $ref: '#/components/schemas/SpotExchangeFilterExchangeMaxNumAlgoOrders'
                            - $ref: '#/components/schemas/SpotExchangeFilterExchangeMaxNumIcebergOrders'
                    type: array
                rateLimits:
                    items:
                        $ref: '#/components/schemas/SpotRateLimit'
                    type: array
                serverTime:
                    format: int64
                    type: integer
                sors:
                    items:
                        properties:
                            baseAsset:
                                type: string
                            symbols:
                                items:
                                    type: string
                                type: array
                        type: object
                    type: array
                symbols:
                    items:
                        properties:
                            allowTrailingStop:
                                type: boolean
                            allowedSelfTradePreventionModes:
                                items:
                                    type: string
                                type: array
                            baseAsset:
                                type: string
                            baseAssetPrecision:
                                type: integer
                            baseCommissionPrecision:
                                type: integer
                            cancelReplaceAllowed:
                                type: boolean
                            defaultSelfTradePreventionMode:
                                type: string
                            filters:
                                items:
                                    $ref: '#/components/schemas/SpotSymbolFilter'
                                type: array
                            icebergAllowed:
                                type: boolean
                            isMarginTradingAllowed:
                                type: boolean
                            isSpotTradingAllowed:
                                type: boolean
                            ocoAllowed:
                                type: boolean
                            orderTypes:
                                items:
                                    type: string
                                type: array
                            otoAllowed:
                                type: boolean
                            permissionSets:
                                items:
                                    items:
                                        type: string
                                    type: array
                                type: array
                            permissions:
                                items:
                                    type: string
                                type: array
                            quoteAsset:
                                type: string
                            quoteAssetPrecision:
                                type: integer
                            quoteCommissionPrecision:
                                type: integer
                            quoteOrderQtyMarketAllowed:
                                type: boolean
                            quotePrecision:
                                type: integer
                            status:
                                type: string
                            symbol:
                                type: string
                        type: object
                    type: array
                timezone:
                    type: string
            type: object
        SpotGetTicker24hrV3Resp:
            oneOf:
                - items:
                    $ref: '#/components/schemas/SpotGetTicker24hrV3RespItem'
                  type: array
                - $ref: '#/components/schemas/SpotGetTicker24hrV3RespItem'
        SpotGetTicker24hrV3RespItem:
            example: '{ "symbol": "BNBBTC", "priceChange": "-94.99999800", "priceChangePercent": "-95.960", "weightedAvgPrice": "0.29628482", "prevClosePrice": "0.10002000", "lastPrice": "4.00000200", "lastQty": "200.00000000", "bidPrice": "4.00000000", "bidQty": "100.00000000", "askPrice": "4.00000200", "askQty": "100.00000000", "openPrice": "99.00000000", "highPrice": "100.00000000", "lowPrice": "0.10000000", "volume": "8913.30000000", "quoteVolume": "15.30000000", "openTime": 1499783499040, "closeTime": 1499869899040, "firstId": 28385,    "lastId": 28460,     "count": 76          }'
            properties:
                askPrice:
                    type: string
                askQty:
                    type: string
                bidPrice:
                    type: string
                bidQty:
                    type: string
                closeTime:
                    format: int64
                    type: integer
                count:
                    type: integer
                firstId:
                    format: int64
                    type: integer
                highPrice:
                    type: string
                lastId:
                    format: int64
                    type: integer
                lastPrice:
                    type: string
                lastQty:
                    type: string
                lowPrice:
                    type: string
                openPrice:
                    type: string
                openTime:
                    format: int64
                    type: integer
                prevClosePrice:
                    type: string
                priceChange:
                    type: string
                priceChangePercent:
                    type: string
                quoteVolume:
                    type: string
                symbol:
                    type: string
                volume:
                    type: string
                weightedAvgPrice:
                    type: string
            type: object
        SpotGetTickerBookTickerV3Resp:
            oneOf:
                - items:
                    $ref: '#/components/schemas/SpotGetTickerBookTickerV3RespItem'
                  type: array
                - $ref: '#/components/schemas/SpotGetTickerBookTickerV3RespItem'
        SpotGetTickerBookTickerV3RespItem:
            example: '{ "symbol": "LTCBTC", "bidPrice": "4.00000000", "bidQty": "431.00000000", "askPrice": "4.00000200", "askQty": "9.00000000" }'
            properties:
                askPrice:
                    type: string
                askQty:
                    type: string
                bidPrice:
                    type: string
                bidQty:
                    type: string
                symbol:
                    type: string
            type: object
        SpotGetTickerPriceV3Resp:
            oneOf:
                - items:
                    $ref: '#/components/schemas/SpotGetTickerPriceV3RespItem'
                  type: array
                - $ref: '#/components/schemas/SpotGetTickerPriceV3RespItem'
        SpotGetTickerPriceV3RespItem:
            example: '{ "symbol": "LTCBTC", "price": "4.00000200" }'
            properties:
                price:
                    type: string
                symbol:
                    type: string
            type: object
        SpotGetTickerTradingDayV3Resp:
            oneOf:
                - items:
                    $ref: '#/components/schemas/SpotGetTickerTradingDayV3RespItem'
                  type: array
                - $ref: '#/components/schemas/SpotGetTickerTradingDayV3RespItem'
        SpotGetTickerTradingDayV3RespItem:
            example: '{ "symbol":             "BTCUSDT", "priceChange":        "-83.13000000",          "priceChangePercent": "-0.317",                "weightedAvgPrice":   "26234.58803036",        "openPrice":          "26304.80000000", "highPrice":          "26397.46000000", "lowPrice":           "26088.34000000", "lastPrice":          "26221.67000000", "volume":             "18495.35066000",        "quoteVolume":        "485217905.04210480",    "openTime":           1695686400000, "closeTime":          1695772799999, "firstId":            3220151555,              "lastId":             3220849281,              "count":              697727                   }'
            properties:
                closeTime:
                    format: int64
                    type: integer
                count:
                    type: integer
                firstId:
                    format: int64
                    type: integer
                highPrice:
                    type: string
                lastId:
                    format: int64
                    type: integer
                lastPrice:
                    type: string
                lowPrice:
                    type: string
                openPrice:
                    type: string
                openTime:
                    format: int64
                    type: integer
                priceChange:
                    type: string
                priceChangePercent:
                    type: string
                quoteVolume:
                    type: string
                symbol:
                    type: string
                volume:
                    type: string
                weightedAvgPrice:
                    type: string
            type: object
        SpotGetTickerV3Resp:
            oneOf:
                - items:
                    $ref: '#/components/schemas/SpotGetTickerV3RespItem'
                  type: array
                - $ref: '#/components/schemas/SpotGetTickerV3RespItem'
        SpotGetTickerV3RespItem:
            example: '{ "symbol":             "BNBBTC", "priceChange":        "-8.00000000",   "priceChangePercent": "-88.889",       "weightedAvgPrice":   "2.60427807",    "openPrice":          "9.00000000", "highPrice":          "9.00000000", "lowPrice":           "1.00000000", "lastPrice":          "1.00000000", "volume":             "187.00000000", "quoteVolume":        "487.00000000",  "openTime":           1641859200000,   "closeTime":          1642031999999,   "firstId":            0,               "lastId":             60, "count":              61               }'
            properties:
                closeTime:
                    format: int64
                    type: integer
                count:
                    type: integer
                firstId:
                    format: int64
                    type: integer
                highPrice:
                    type: string
                lastId:
                    format: int64
                    type: integer
                lastPrice:
                    type: string
                lowPrice:
                    type: string
                openPrice:
                    type: string
                openTime:
                    format: int64
                    type: integer
                priceChange:
                    type: string
                priceChangePercent:
                    type: string
                quoteVolume:
                    type: string
                symbol:
                    type: string
                volume:
                    type: string
                weightedAvgPrice:
                    type: string
            type: object
        SpotRateLimit:
            properties:
                interval:
                    type: string
                intervalNum:
                    type: integer
                limit:
                    type: integer
                rateLimitType:
                    type: string
            type: object
        SpotSymbolFilter:
            properties:
                applyMaxToMarket:
                    type: boolean
                applyMinToMarket:
                    type: boolean
                applyToMarket:
                    type: boolean
                askMultiplierDown:
                    type: string
                askMultiplierUp:
                    type: string
                avgPriceMins:
                    type: integer
                bidMultiplierDown:
                    type: string
                bidMultiplierUp:
                    type: string
                filterType:
                    type: string
                limit:
                    type: integer
                maxNotionalValue:
                    type: string
                maxNumAlgoOrders:
                    type: integer
                maxNumIcebergOrders:
                    type: integer
                maxNumOrders:
                    type: integer
                maxPosition:
                    type: string
                maxPrice:
                    type: string
                maxQty:
                    type: string
                maxTrailingAboveDelta:
                    type: integer
                maxTrailingBelowDelta:
                    type: integer
                minNotionalValue:
                    type: string
                minPrice:
                    type: string
                minQty:
                    type: string
                minTrailingAboveDelta:
                    type: integer
                minTrailingBelowDelta:
                    type: integer
                multiplierDown:
                    type: string
                multiplierUp:
                    type: string
                stepSize:
                    type: string
                tickSize:
                    type: string
            type: object
        SubaccountGetSubAccountTransactionStatisticsV1Resp:
            example: '{ "recent30BtcTotal": "0", "recent30BtcFuturesTotal": "0", "recent30BtcMarginTotal": "0", "recent30BusdTotal": "0", "recent30BusdFuturesTotal": "0", "recent30BusdMarginTotal": "0", "tradeInfoVos": [] }'
            properties:
                recent30BtcFuturesTotal:
                    type: string
                recent30BtcMarginTotal:
                    type: string
                recent30BtcTotal:
                    type: string
                recent30BusdFuturesTotal:
                    type: string
                recent30BusdMarginTotal:
                    type: string
                recent30BusdTotal:
                    type: string
                tradeInfoVos:
                    items:
                        properties:
                            btc:
                                format: int64
                                type: integer
                            btcFutures:
                                format: int64
                                type: integer
                            btcMargin:
                                format: int64
                                type: integer
                            busd:
                                format: int64
                                type: integer
                            busdFutures:
                                format: int64
                                type: integer
                            busdMargin:
                                format: int64
                                type: integer
                            date:
                                format: int64
                                type: integer
                            userId:
                                format: int64
                                type: integer
                        type: object
                    type: array
            type: object
        UpdateLocalentityBrokerDepositProvideInfoV1Req:
            properties:
                address:
                    default: ""
                    type: string
                addressTag:
                    default: ""
                    type: string
                amount:
                    default: ""
                    type: string
                beneficiaryPii:
                    default: ""
                    type: string
                coin:
                    default: ""
                    type: string
                depositId:
                    default: ""
                    type: string
                network:
                    default: ""
                    type: string
                questionnaire:
                    default: ""
                    type: string
                signature:
                    default: ""
                    type: string
                subAccountId:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - subAccountId
                - depositId
                - questionnaire
                - beneficiaryPii
                - timestamp
                - signature
            type: object
        UpdateLocalentityBrokerDepositProvideInfoV1Resp:
            example: '{ "trId": 765127651, "accepted": true, "info": "Deposit questionnaire accepted." }'
            properties:
                accepted:
                    type: boolean
                info:
                    type: string
                trId:
                    format: int64
                    type: integer
            type: object
        UpdateLocalentityDepositProvideInfoV1Req:
            properties:
                questionnaire:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                tranId:
                    format: int64
                    type: integer
            required:
                - tranId
                - questionnaire
                - timestamp
            type: object
        UpdateLocalentityDepositProvideInfoV1Resp:
            example: '{ "trId": 765127651, "accepted": true, "info": "Deposit questionnaire accepted." }'
            properties:
                accepted:
                    type: boolean
                info:
                    type: string
                trId:
                    format: int64
                    type: integer
            type: object
        UpdateMarginApiKeyIpV1Req:
            properties:
                apiKey:
                    default: ""
                    type: string
                ip:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - apiKey
                - ip
                - timestamp
            type: object
        UpdateMarginApiKeyIpV1Resp:
            example: '{ }'
            type: object
        UpdateMarginListenKeyV1Req:
            properties:
                listenKey:
                    default: ""
                    type: string
            required:
                - listenKey
            type: object
        UpdateMarginListenKeyV1Resp:
            example: '{}'
            type: object
        UpdateUserDataStreamIsolatedV1Req:
            properties:
                listenKey:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
            required:
                - symbol
                - listenKey
            type: object
        UpdateUserDataStreamIsolatedV1Resp:
            example: '{}'
            type: object
        UpdateUserDataStreamV1Req:
            properties:
                listenKey:
                    default: ""
                    type: string
            required:
                - listenKey
            type: object
        UpdateUserDataStreamV1Resp:
            example: '{}'
            type: object
        UpdateUserDataStreamV3Req:
            properties:
                listenKey:
                    default: ""
                    type: string
            required:
                - listenKey
            type: object
        UpdateUserDataStreamV3Resp:
            example: '{}'
            type: object
        WalletGetAssetAssetDetailV1Resp:
            additionalProperties:
                properties:
                    depositStatus:
                        type: boolean
                    depositTip:
                        type: string
                    minWithdrawAmount:
                        type: string
                    withdrawFee:
                        type: integer
                    withdrawStatus:
                        type: boolean
                type: object
            example: '{ "CTR": { "minWithdrawAmount": "70.00000000",  "depositStatus": false, "withdrawFee": 35,  "withdrawStatus": true,  "depositTip": "Delisted, Deposit Suspended"  }, "SKY": { "minWithdrawAmount": "0.02000000", "depositStatus": true, "withdrawFee": 0.01, "withdrawStatus": true } }'
            type: object
    securitySchemes:
        ApiKey:
            in: header
            name: X-MBX-APIKEY
            type: apiKey
info:
    description: OpenAPI specification for Binance exchange - Spot API
    title: Binance Spot API
    version: 0.2.2
openapi: 3.0.3
paths:
    /api/v3/account:
        get:
            description: Get current account information.
            operationId: GetAccountV3
            parameters:
                - description: 'When set to `true`, emits only the non-zero balances of an account. <br/>Default value: `false`'
                  in: query
                  name: omitZeroBalances
                  schema:
                    type: boolean
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAccountV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Account information (USER_DATA)
            tags:
                - Spot Trading
    /api/v3/account/commission:
        get:
            description: Get current account commission rates.
            operationId: GetAccountCommissionV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAccountCommissionV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Commission Rates (USER_DATA)
            tags:
                - Spot Trading
    /api/v3/aggTrades:
        get:
            description: Get compressed, aggregate trades. Trades that fill at the time, from the same taker order, with the same price will have the quantity aggregated.
            operationId: GetAggTradesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: ID to get aggregate trades from INCLUSIVE.
                  in: query
                  name: fromId
                  schema:
                    format: int64
                    type: integer
                - description: Timestamp in ms to get aggregate trades from INCLUSIVE.
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: Timestamp in ms to get aggregate trades until INCLUSIVE.
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                example: '[ { "a": 26129,          "p": "0.01633102",   "q": "4.70443515",   "f": 27781,          "l": 27781,          "T": 1498793709153,  "m": true,           "M": true            } ]'
                                items:
                                    $ref: '#/components/schemas/SpotGetAggTradesV3RespItem'
                                type: array
                    description: Successful operation
            summary: Compressed/Aggregate trades list
            tags:
                - Spot Trading
    /api/v3/allOrderList:
        get:
            description: |-
                Retrieves all order lists based on provided optional parameters.
                Note that the time between startTime and endTime can't be longer than 24 hours.
            operationId: GetAllOrderListV3
            parameters:
                - description: If supplied, neither `startTime` or `endTime` can be provided
                  in: query
                  name: fromId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default Value: 500; Max Value: 1000'
                  in: query
                  name: limit
                  schema:
                    type: integer
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAllOrderListV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query all Order lists (USER_DATA)
            tags:
                - Spot Trading
    /api/v3/allOrders:
        get:
            description: Get all account orders; active, canceled, or filled.
            operationId: GetAllOrdersV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAllOrdersV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: All orders (USER_DATA)
            tags:
                - Spot Trading
    /api/v3/avgPrice:
        get:
            description: Current average price for a symbol.
            operationId: GetAvgPriceV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAvgPriceV3Resp'
                    description: Successful operation
            summary: Current average price
            tags:
                - Spot Trading
    /api/v3/depth:
        get:
            operationId: GetDepthV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Default 100; max 5000. <br/> If limit &gt; 5000. then the response will truncate to 5000.
                  in: query
                  name: limit
                  schema:
                    default: 100
                    maximum: 5000
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDepthV3Resp'
                    description: Successful operation
            summary: Order book
            tags:
                - Spot Trading
    /api/v3/exchangeInfo:
        get:
            description: Current exchange trading rules and symbol information
            operationId: GetExchangeInfoV3
            parameters:
                - description: 'Example: curl -X GET &#34;<a href="https://api.binance.com/api/v3/exchangeInfo?symbol=BNBBTC" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?symbol=BNBBTC</a>&#34;'
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: 'Examples: curl -X GET &#34;<a href="https://api.binance.com/api/v3/exchangeInfo?symbols=%5B%22BNBBTC%22,%22BTCUSDT%22%5D" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?symbols=%5B%22BNBBTC%22,%22BTCUSDT%22%5D</a>&#34; <br/> or <br/> curl -g -X  GET &#39;<a href="https://api.binance.com/api/v3/exchangeInfo?symbols=%5B%22BTCUSDT%22,%22BNBBTC" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?symbols=[&#34;BTCUSDT&#34;,&#34;BNBBTC</a>&#34;]&#39;'
                  in: query
                  name: symbols
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'Examples: curl -X GET &#34;<a href="https://api.binance.com/api/v3/exchangeInfo?permissions=SPOT" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?permissions=SPOT</a>&#34; <br/> or <br/> curl -X GET &#34;<a href="https://api.binance.com/api/v3/exchangeInfo?permissions=%5B%22MARGIN%22%2C%22LEVERAGED%22%5D" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?permissions=%5B%22MARGIN%22%2C%22LEVERAGED%22%5D</a>&#34; <br/> or <br/> curl -g -X GET &#39;<a href="https://api.binance.com/api/v3/exchangeInfo?permissions=%5B%22MARGIN%22,%22LEVERAGED" target="_blank" rel="noopener noreferrer">https://api.binance.com/api/v3/exchangeInfo?permissions=[&#34;MARGIN&#34;,&#34;LEVERAGED</a>&#34;]&#39;'
                  in: query
                  name: permissions
                  schema:
                    default: ""
                    type: string
                - description: Controls whether the content of the `permissionSets` field is populated or not. Defaults to `true`
                  in: query
                  name: showPermissionSets
                  schema:
                    type: boolean
                - description: 'Filters symbols that have this `tradingStatus`. Valid values: `TRADING`, `HALT`, `BREAK` <br/> Cannot be used in combination with `symbols` or `symbol`.'
                  in: query
                  name: symbolStatus
                  schema:
                    default: ""
                    enum:
                        - TRADING
                        - HALT
                        - BREAK
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetExchangeInfoV3Resp'
                    description: Successful operation
            summary: Exchange information
            tags:
                - Spot Trading
    /api/v3/historicalTrades:
        get:
            description: Get older trades.
            operationId: GetHistoricalTradesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
                - description: TradeId to fetch from. Default gets most recent trades.
                  in: query
                  name: fromId
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetHistoricalTradesV3Resp'
                    description: Successful operation
            summary: Old trade lookup
            tags:
                - Spot Trading
    /api/v3/klines:
        get:
            description: |-
                Kline/candlestick bars for a symbol.
                Klines are uniquely identified by their open time.
            operationId: GetKlinesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: interval
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default: 0 (UTC)'
                  in: query
                  name: timeZone
                  schema:
                    default: "0"
                    type: string
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                example: '[ [ 1499040000000,       "0.01634790",        "0.80000000",        "0.01575800",        "0.01577100",        "148976.11427815",   1499644799999,       "2434.19055334",     308,                 "1756.87402397",     "28.46694368",       "0"                  ] ]'
                                items:
                                    items:
                                        oneOf:
                                            - format: int64
                                              type: integer
                                            - type: string
                                    type: array
                                type: array
                    description: Successful operation
            summary: Kline/Candlestick data
            tags:
                - Spot Trading
    /api/v3/myAllocations:
        get:
            description: Retrieves allocations resulting from SOR order placement.
            operationId: GetMyAllocationsV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: fromAllocationId
                  schema:
                    type: integer
                - description: Default 500;Max 1000
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - description: The value cannot be greater than `60000`.
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMyAllocationsV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Allocations (USER_DATA)
            tags:
                - Spot Trading
    /api/v3/myPreventedMatches:
        get:
            description: |-
                Displays the list of orders that were expired due to STP.
                These are the combinations supported:
                - symbol + preventedMatchId
                - symbol + orderId
                - symbol + orderId + fromPreventedMatchId (limit will default to 500)
                - symbol + orderId + fromPreventedMatchId + limit
            operationId: GetMyPreventedMatchesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: preventedMatchId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: fromPreventedMatchId
                  schema:
                    format: int64
                    type: integer
                - description: 'Default: `500`; Max: `1000`'
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMyPreventedMatchesV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Prevented Matches (USER_DATA)
            tags:
                - Spot Trading
    /api/v3/myTrades:
        get:
            description: Get trades for a specific account and symbol.
            operationId: GetMyTradesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: This can only be used in combination with `symbol`.
                  in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: TradeId to fetch from. Default gets most recent trades.
                  in: query
                  name: fromId
                  schema:
                    format: int64
                    type: integer
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMyTradesV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Account trade list (USER_DATA)
            tags:
                - Spot Trading
    /api/v3/openOrderList:
        get:
            operationId: GetOpenOrderListV3
            parameters:
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOpenOrderListV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Open Order lists (USER_DATA)
            tags:
                - Spot Trading
    /api/v3/openOrders:
        delete:
            description: |-
                Cancels all active orders on a symbol.
                This includes orders that are part of an order list.
            operationId: DeleteOpenOrdersV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                example: '[ { "symbol": "BTCUSDT", "origClientOrderId": "E6APeyTJvkMvLMYMqu1KQ4", "orderId": 11, "orderListId": -1, "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx", "transactTime": 1684804350068, "price": "0.089853", "origQty": "0.178622", "executedQty": "0.000000", "cummulativeQuoteQty": "0.000000", "status": "CANCELED", "timeInForce": "GTC", "type": "LIMIT", "side": "BUY", "selfTradePreventionMode": "NONE" }, { "symbol": "BTCUSDT", "origClientOrderId": "A3EF2HCwxgZPFMrfwbgrhv", "orderId": 13, "orderListId": -1, "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx", "transactTime": 1684804350069, "price": "0.090430", "origQty": "0.178622", "executedQty": "0.000000", "cummulativeQuoteQty": "0.000000", "status": "CANCELED", "timeInForce": "GTC", "type": "LIMIT", "side": "BUY", "selfTradePreventionMode": "NONE" }, { "orderListId": 1929, "contingencyType": "OCO", "listStatusType": "ALL_DONE", "listOrderStatus": "ALL_DONE", "listClientOrderId": "2inzWQdDvZLHbbAmAozX2N", "transactionTime": 1585230948299, "symbol": "BTCUSDT", "orders": [ { "symbol": "BTCUSDT", "orderId": 20, "clientOrderId": "CwOOIPHSmYywx6jZX77TdL" }, { "symbol": "BTCUSDT", "orderId": 21, "clientOrderId": "461cPg51vQjV3zIMOXNz39" } ], "orderReports": [ { "symbol": "BTCUSDT", "origClientOrderId": "CwOOIPHSmYywx6jZX77TdL", "orderId": 20, "orderListId": 1929, "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx", "transactTime": 1688005070874, "price": "0.668611", "origQty": "0.690354", "executedQty": "0.000000", "cummulativeQuoteQty": "0.000000", "status": "CANCELED", "timeInForce": "GTC", "type": "STOP_LOSS_LIMIT", "side": "BUY", "stopPrice": "0.378131", "icebergQty": "0.017083", "selfTradePreventionMode": "NONE" }, { "symbol": "BTCUSDT", "origClientOrderId": "461cPg51vQjV3zIMOXNz39", "orderId": 21, "orderListId": 1929, "clientOrderId": "pXLV6Hz6mprAcVYpVMTGgx", "transactTime": 1688005070874, "price": "0.008791", "origQty": "0.690354", "executedQty": "0.000000", "cummulativeQuoteQty": "0.000000", "status": "CANCELED", "timeInForce": "GTC", "type": "LIMIT_MAKER", "side": "BUY", "icebergQty": "0.639962", "selfTradePreventionMode": "NONE" } ] } ]'
                                items:
                                    $ref: '#/components/schemas/SpotDeleteOpenOrdersV3Resp'
                                type: array
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Cancel All Open Orders on a Symbol (TRADE)
            tags:
                - Spot Trading
        get:
            description: |-
                Get all open orders on a symbol. Careful when accessing this with no symbol.
                Weight:
                6 for a single symbol; 80 when the symbol parameter is omitted
            operationId: GetOpenOrdersV3
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOpenOrdersV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Current open orders (USER_DATA)
            tags:
                - Spot Trading
    /api/v3/order:
        delete:
            description: Cancel an active order.
            operationId: DeleteOrderV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: origClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: Used to uniquely identify this cancel. Automatically generated by default.
                  in: query
                  name: newClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: 'Supported values: <br/>`ONLY_NEW` - Cancel will succeed if the order status is `NEW`.<br/> `ONLY_PARTIALLY_FILLED ` - Cancel will succeed if order status is `PARTIALLY_FILLED`.'
                  in: query
                  name: cancelRestrictions
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`.
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteOrderV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Cancel order (TRADE)
            tags:
                - Spot Trading
        get:
            description: Check an order's status.
            operationId: GetOrderV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: origClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrderV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query order (USER_DATA)
            tags:
                - Spot Trading
        post:
            description: Send in a new order.
            operationId: CreateOrderV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/SpotCreateOrderV3Req'
                description: The request body for SpotCreateOrderV3
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateOrderV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: New order (TRADE)
            tags:
                - Spot Trading
    /api/v3/order/cancelReplace:
        post:
            description: |-
                Cancels an existing order and places a new order on the same symbol.
                Filters and Order Count are evaluated before the processing of the cancellation and order placement occurs.
                A new order that was not attempted (i.e. when newOrderResult: NOT_ATTEMPTED ), will still increase the order count by 1.
            operationId: CreateOrderCancelReplaceV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/SpotCreateOrderCancelReplaceV3Req'
                description: The request body for SpotCreateOrderCancelReplaceV3
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateOrderCancelReplaceV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Cancel an Existing Order and Send a New Order (TRADE)
            tags:
                - Spot Trading
    /api/v3/order/oco:
        post:
            description: |-
                Send in a new OCO.
                - Price Restrictions:

                SELL: Limit Price > Last Price > Stop Price
                BUY: Limit Price < Last Price < Stop Price
                - Quantity Restrictions:

                Both legs must have the same quantity.
                ICEBERG quantities however do not have to be the same
                - OCO adds 2 orders to the unfilled order count, EXCHANGE_MAX_ORDERS filter and the MAX_NUM_ORDERS filter.
            operationId: CreateOrderOcoV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateOrderOcoV3Req'
                description: The request body for CreateOrderOcoV3
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateOrderOcoV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: New OCO - Deprecated (TRADE)
            tags:
                - Spot Trading
    /api/v3/order/test:
        post:
            description: |-
                Test new order creation and signature/recvWindow long.
                Creates and validates a new order but does not send it into the matching engine.
            operationId: CreateOrderTestV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/SpotCreateOrderTestV3Req'
                description: The request body for SpotCreateOrderTestV3
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateOrderTestV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Test new order (TRADE)
            tags:
                - Spot Trading
    /api/v3/orderList:
        delete:
            description: Cancel an entire Order list
            operationId: DeleteOrderListV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Either `orderListId` or `listClientOrderId` must be provided
                  in: query
                  name: orderListId
                  schema:
                    format: int64
                    type: integer
                - description: Either `orderListId` or `listClientOrderId` must be provided
                  in: query
                  name: listClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: Used to uniquely identify this cancel. Automatically generated by default
                  in: query
                  name: newClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteOrderListV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Cancel Order list (TRADE)
            tags:
                - Spot Trading
        get:
            description: Retrieves a specific order list based on provided optional parameters.
            operationId: GetOrderListV3
            parameters:
                - description: Either `orderListId` or `listClientOrderId` must be provided
                  in: query
                  name: orderListId
                  schema:
                    format: int64
                    type: integer
                - description: Either `orderListId` or `listClientOrderId` must be provided
                  in: query
                  name: origClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrderListV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Order list (USER_DATA)
            tags:
                - Spot Trading
    /api/v3/orderList/oco:
        post:
            description: |-
                Send in an one-cancels-the-other (OCO) pair, where activation of one order immediately cancels the other.
                - An OCO has 2 orders called the above order and below order.
                - One of the orders must be a LIMIT_MAKER/TAKE_PROFIT/TAKE_PROFIT_LIMIT order and the other must be STOP_LOSS or STOP_LOSS_LIMIT order.
                - Price restrictions

                If the OCO is on the SELL side:

                LIMIT_MAKER/TAKE_PROFIT_LIMIT price > Last Traded Price >  STOP_LOSS/STOP_LOSS_LIMIT stopPrice
                TAKE_PROFIT stopPrice > Last Traded Price > STOP_LOSS/STOP_LOSS_LIMIT stopPrice


                If the OCO is on the BUY side:

                LIMIT_MAKER/TAKE_PROFIT_LIMIT price < Last Traded Price < stopPrice
                TAKE_PROFIT stopPrice < Last Traded Price < STOP_LOSS/STOP_LOSS_LIMIT stopPrice
                - OCOs add 2 orders to the unfilled order count, EXCHANGE_MAX_ORDERS filter, and the MAX_NUM_ORDERS filter.
            operationId: CreateOrderListOcoV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateOrderListOcoV3Req'
                description: The request body for CreateOrderListOcoV3
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateOrderListOcoV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: New Order list - OCO (TRADE)
            tags:
                - Spot Trading
    /api/v3/orderList/oto:
        post:
            description: |-
                Places an OTO.
                - An OTO (One-Triggers-the-Other) is an order list comprised of 2 orders.
                - The first order is called the working order and must be LIMIT or LIMIT_MAKER. Initially, only the working order goes on the order book.
                - The second order is called the pending order. It can be any order type except for MARKET orders using parameter quoteOrderQty. The pending order is only placed on the order book when the working order gets fully filled.
                - If either the working order or the pending order is cancelled individually, the other order in the order list will also be canceled or expired.
                - When the order list is placed, if the working order gets immediately fully filled, the placement response will show the working order as FILLED but the pending order will still appear as PENDING_NEW. You need to query the status of the pending order again to see its updated status.
                - OTOs add 2 orders to the unfilled order count, EXCHANGE_MAX_NUM_ORDERS filter and MAX_NUM_ORDERS filter.
            operationId: CreateOrderListOtoV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateOrderListOtoV3Req'
                description: The request body for CreateOrderListOtoV3
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateOrderListOtoV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: New Order list - OTO (TRADE)
            tags:
                - Spot Trading
    /api/v3/orderList/otoco:
        post:
            description: |-
                Place an OTOCO.
                - An OTOCO (One-Triggers-One-Cancels-the-Other) is an order list comprised of 3 orders.
                - The first order is called the working order and must be LIMIT or LIMIT_MAKER. Initially, only the working order goes on the order book.

                The behavior of the working order is the same as the OTO.
                - OTOCO has 2 pending orders (pending above and pending below), forming an OCO pair. The pending orders are only placed on the order book when the working order gets fully filled.

                The rules of the pending above and pending below follow the same rules as the Order list OCO.
                - OTOCOs add 3 orders against the unfilled order count, EXCHANGE_MAX_NUM_ORDERS filter, and MAX_NUM_ORDERS filter.
            operationId: CreateOrderListOtocoV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateOrderListOtocoV3Req'
                description: The request body for CreateOrderListOtocoV3
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateOrderListOtocoV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: New Order list - OTOCO (TRADE)
            tags:
                - Spot Trading
    /api/v3/ping:
        get:
            description: Test connectivity to the Rest API.
            operationId: GetPingV3
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPingV3Resp'
                    description: Successful operation
            summary: Test connectivity
            tags:
                - Spot Trading
    /api/v3/rateLimit/order:
        get:
            description: Displays the user's unfilled order count for all intervals.
            operationId: GetRateLimitOrderV3
            parameters:
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRateLimitOrderV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Unfilled Order Count (USER_DATA)
            tags:
                - Spot Trading
    /api/v3/sor/order:
        post:
            description: Places an order using smart order routing (SOR).
            operationId: CreateSorOrderV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateSorOrderV3Req'
                description: The request body for CreateSorOrderV3
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSorOrderV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: New order using SOR (TRADE)
            tags:
                - Spot Trading
    /api/v3/sor/order/test:
        post:
            description: |-
                Test new order creation and signature/recvWindow using smart order routing (SOR).
                Creates and validates a new order but does not send it into the matching engine.
            operationId: CreateSorOrderTestV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/SpotCreateSorOrderTestV3Req'
                description: The request body for SpotCreateSorOrderTestV3
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotCreateSorOrderTestV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Test new order using SOR (TRADE)
            tags:
                - Spot Trading
    /api/v3/ticker:
        get:
            description: |-
                Note: This endpoint is different from the GET /api/v3/ticker/24hr endpoint.
                The window used to compute statistics will be no more than 59999ms from the requested windowSize.
                openTime for /api/v3/ticker always starts on a minute, while the closeTime is the current time of the request.
                As such, the effective window will be up to 59999ms wider than windowSize.
                E.g. If the closeTime is 1641287867099 (January 04, 2022 09:17:47:099 UTC) , and the windowSize is 1d. the openTime will be: 1641201420000 (January 3, 2022, 09:17:00)
                4 for each requested symbol regardless of windowSize.  The weight for this request will cap at 200 once the number of symbols in the request is more than 50.
            operationId: GetTickerV3
            parameters:
                - description: 'Either `symbol` or `symbols` must be provided <br/><br/> Examples of accepted format for the `symbols` parameter: <br/> [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>or <br/>%5B%22BTCUSDT%22,%22BNBUSDT%22%5D <br/><br/> The maximum number of `symbols` allowed in a request is 100.'
                  in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: 'Either `symbol` or `symbols` must be provided <br/><br/> Examples of accepted format for the `symbols` parameter: <br/> [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>or <br/>%5B%22BTCUSDT%22,%22BNBUSDT%22%5D <br/><br/> The maximum number of `symbols` allowed in a request is 100.'
                  in: query
                  name: symbols
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: 'Defaults to `1d` if no parameter provided <br/> Supported `windowSize` values: <br/> `1m`,`2m`....`59m` for minutes <br/> `1h`, `2h`....`23h` - for hours <br/> `1d`...`7d` - for days <br/><br/> Units cannot be combined (e.g. `1d2h` is not allowed)'
                  in: query
                  name: windowSize
                  schema:
                    default: ""
                    type: string
                - description: 'Supported values: `FULL` or `MINI`. <br/>If none provided, the default is `FULL`'
                  in: query
                  name: type
                  schema:
                    default: ""
                    enum:
                        - FULL
                        - MINI
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetTickerV3Resp'
                    description: Successful operation
            summary: Rolling window price change statistics
            tags:
                - Spot Trading
    /api/v3/ticker/24hr:
        get:
            description: 24 hour rolling window price change statistics. Careful when accessing this with no symbol.
            operationId: GetTicker24hrV3
            parameters:
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, tickers for all symbols will be returned in an array. <br/><br/>
                             Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, tickers for all symbols will be returned in an array. <br/><br/>
                             Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbols
                  schema:
                    default: ""
                    type: string
                - description: 'Supported values: `FULL` or `MINI`. <br/>If none provided, the default is `FULL`'
                  in: query
                  name: type
                  schema:
                    default: ""
                    enum:
                        - FULL
                        - MINI
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetTicker24hrV3Resp'
                    description: Successful operation
            summary: 24hr ticker price change statistics
            tags:
                - Spot Trading
    /api/v3/ticker/bookTicker:
        get:
            description: Best price/qty on the order book for a symbol or symbols.
            operationId: GetTickerBookTickerV3
            parameters:
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, bookTickers for all symbols will be returned in an array.
                             <br/><br/>
                            Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, bookTickers for all symbols will be returned in an array.
                             <br/><br/>
                            Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbols
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetTickerBookTickerV3Resp'
                    description: Successful operation
            summary: Symbol order book ticker
            tags:
                - Spot Trading
    /api/v3/ticker/price:
        get:
            description: Latest price for a symbol or symbols.
            operationId: GetTickerPriceV3
            parameters:
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, prices for all symbols will be returned in an array. <br/><br/>
                            Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: |-
                    Parameter symbol and symbols cannot be used in combination. <br/> If neither parameter is sent, prices for all symbols will be returned in an array. <br/><br/>
                            Examples of accepted format for the symbols parameter:
                             [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>
                             or <br/>
                             %5B%22BTCUSDT%22,%22BNBUSDT%22%5D
                  in: query
                  name: symbols
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetTickerPriceV3Resp'
                    description: Successful operation
            summary: Symbol price ticker
            tags:
                - Spot Trading
    /api/v3/ticker/tradingDay:
        get:
            description: |-
                Price change statistics for a trading day.
                4 for each requested symbol.  The weight for this request will cap at 200 once the number of symbols in the request is more than 50.
            operationId: GetTickerTradingDayV3
            parameters:
                - description: 'Either `symbol` or `symbols` must be provided <br/><br/> Examples of accepted format for the `symbols` parameter: <br/> [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>or <br/>%5B%22BTCUSDT%22,%22BNBUSDT%22%5D <br/><br/> The maximum number of `symbols` allowed in a request is 100.'
                  in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: 'Either `symbol` or `symbols` must be provided <br/><br/> Examples of accepted format for the `symbols` parameter: <br/> [&#34;BTCUSDT&#34;,&#34;BNBUSDT&#34;] <br/>or <br/>%5B%22BTCUSDT%22,%22BNBUSDT%22%5D <br/><br/> The maximum number of `symbols` allowed in a request is 100.'
                  in: query
                  name: symbols
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: 'Default: 0 (UTC)'
                  in: query
                  name: timeZone
                  schema:
                    default: "0"
                    type: string
                - description: 'Supported values: `FULL` or `MINI`. <br/>If none provided, the default is `FULL`'
                  in: query
                  name: type
                  schema:
                    default: ""
                    enum:
                        - FULL
                        - MINI
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SpotGetTickerTradingDayV3Resp'
                    description: Successful operation
            summary: Trading Day Ticker
            tags:
                - Spot Trading
    /api/v3/time:
        get:
            description: Test connectivity to the Rest API and get the current server time.
            operationId: GetTimeV3
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTimeV3Resp'
                    description: Successful operation
            summary: Check server time
            tags:
                - Spot Trading
    /api/v3/trades:
        get:
            description: Get recent trades.
            operationId: GetTradesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTradesV3Resp'
                    description: Successful operation
            summary: Recent trades list
            tags:
                - Spot Trading
    /api/v3/uiKlines:
        get:
            description: |-
                The request is similar to klines having the same parameters and response.
                uiKlines return modified kline data, optimized for presentation of candlestick charts.
            operationId: GetUiKlinesV3
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: See <a href="/docs/binance-spot-api-docs/rest-api/market-data-endpoints#kline-intervals">`klines`</a>
                  in: query
                  name: interval
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default: 0 (UTC)'
                  in: query
                  name: timeZone
                  schema:
                    default: "0"
                    type: string
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                example: '[ [ 1499040000000,       "0.01634790",        "0.80000000",        "0.01575800",        "0.01577100",        "148976.11427815",   1499644799999,       "2434.19055334",     308,                 "1756.87402397",     "28.46694368",       "0"                  ] ]'
                                items:
                                    items:
                                        oneOf:
                                            - format: int64
                                              type: integer
                                            - type: string
                                    type: array
                                type: array
                    description: Successful operation
            summary: UIKlines
            tags:
                - Spot Trading
    /api/v3/userDataStream:
        delete:
            description: Close out a user data stream.
            operationId: DeleteUserDataStreamV3
            parameters:
                - in: query
                  name: listenKey
                  required: true
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserDataStreamV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Close user data stream (USER_STREAM)
            tags:
                - Spot Trading
        post:
            description: Start a new user data stream. The stream will close after 60 minutes unless a keepalive is sent.
            operationId: CreateUserDataStreamV3
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserDataStreamV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Start user data stream (USER_STREAM)
            tags:
                - Spot Trading
        put:
            description: Keepalive a user data stream to prevent a time out. User data streams will close after 60 minutes. It's recommended to send a ping about every 30 minutes.
            operationId: UpdateUserDataStreamV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UpdateUserDataStreamV3Req'
                description: The request body for UpdateUserDataStreamV3
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserDataStreamV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Keepalive user data stream (USER_STREAM)
            tags:
                - Spot Trading
    /sapi/v1/account/apiRestrictions:
        get:
            description: Get API Key Permission
            operationId: GetAccountApiRestrictionsV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAccountApiRestrictionsV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get API Key Permission (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/account/apiTradingStatus:
        get:
            description: Fetch account api trading status detail.
            operationId: GetAccountApiTradingStatusV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAccountApiTradingStatusV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Account API Trading Status (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/account/disableFastWithdrawSwitch:
        post:
            operationId: CreateAccountDisableFastWithdrawSwitchV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateAccountDisableFastWithdrawSwitchV1Req'
                description: The request body for CreateAccountDisableFastWithdrawSwitchV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAccountDisableFastWithdrawSwitchV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Disable Fast Withdraw Switch (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/account/enableFastWithdrawSwitch:
        post:
            description: Enable Fast Withdraw Switch (USER_DATA)
            operationId: CreateAccountEnableFastWithdrawSwitchV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateAccountEnableFastWithdrawSwitchV1Req'
                description: The request body for CreateAccountEnableFastWithdrawSwitchV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAccountEnableFastWithdrawSwitchV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Enable Fast Withdraw Switch (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/account/info:
        get:
            description: Fetch account info detail.
            operationId: GetAccountInfoV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAccountInfoV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Account info (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/account/status:
        get:
            description: Fetch account status detail.
            operationId: GetAccountStatusV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAccountStatusV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Account Status (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/accountSnapshot:
        get:
            description: Daily account snapshot
            operationId: GetAccountSnapshotV1
            parameters:
                - description: '&#34;SPOT&#34;, &#34;MARGIN&#34;, &#34;FUTURES&#34;'
                  in: query
                  name: type
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: min 7, max 30, default 7
                  in: query
                  name: limit
                  schema:
                    default: 7
                    maximum: 30
                    minimum: 7
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAccountSnapshotV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Daily Account Snapshot (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/algo/futures/historicalOrders:
        get:
            description: Query Historical Algo Order
            operationId: GetAlgoFuturesHistoricalOrdersV1
            parameters:
                - description: Trading symbol eg. BTCUSDT
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: BUY or SELL
                  in: query
                  name: side
                  schema:
                    default: ""
                    type: string
                - description: in milliseconds  eg.1641522717552
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: in milliseconds  eg.1641522526562
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default is 1
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: MIN 1, MAX 100; Default 100
                  in: query
                  name: pageSize
                  schema:
                    default: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAlgoFuturesHistoricalOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Historical Algo Orders(USER_DATA)
            tags:
                - Algo Trading
    /sapi/v1/algo/futures/newOrderTwap:
        post:
            description: |-
                Send in a Twap new order.
                Only support on USDⓈ-M Contracts.
            operationId: CreateAlgoFuturesNewOrderTwapV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateAlgoFuturesNewOrderTwapV1Req'
                description: The request body for CreateAlgoFuturesNewOrderTwapV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAlgoFuturesNewOrderTwapV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Time-Weighted Average Price(Twap) New Order(TRADE)
            tags:
                - Algo Trading
    /sapi/v1/algo/futures/newOrderVp:
        post:
            description: |-
                Send in a VP new order.
                Only support on USDⓈ-M Contracts.
            operationId: CreateAlgoFuturesNewOrderVpV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateAlgoFuturesNewOrderVpV1Req'
                description: The request body for CreateAlgoFuturesNewOrderVpV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAlgoFuturesNewOrderVpV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Volume Participation(VP) New Order (TRADE)
            tags:
                - Algo Trading
    /sapi/v1/algo/futures/openOrders:
        get:
            description: Query Current Algo Open Orders
            operationId: GetAlgoFuturesOpenOrdersV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAlgoFuturesOpenOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Current Algo Open Orders(USER_DATA)
            tags:
                - Algo Trading
    /sapi/v1/algo/futures/order:
        delete:
            description: Cancel an active order.
            operationId: DeleteAlgoFuturesOrderV1
            parameters:
                - description: eg. 14511
                  in: query
                  name: algoId
                  required: true
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteAlgoFuturesOrderV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Cancel Algo Order(TRADE)
            tags:
                - Algo Trading
    /sapi/v1/algo/futures/subOrders:
        get:
            description: Get respective sub orders for a specified algoId
            operationId: GetAlgoFuturesSubOrdersV1
            parameters:
                - in: query
                  name: algoId
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: Default is 1
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: MIN 1, MAX 100; Default 100
                  in: query
                  name: pageSize
                  schema:
                    default: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAlgoFuturesSubOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Sub Orders(USER_DATA)
            tags:
                - Algo Trading
    /sapi/v1/algo/spot/historicalOrders:
        get:
            description: Get all historical SPOT TWAP orders
            operationId: GetAlgoSpotHistoricalOrdersV1
            parameters:
                - description: Trading symbol eg. BTCUSDT
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: BUY or SELL
                  in: query
                  name: side
                  schema:
                    default: ""
                    type: string
                - description: in milliseconds  eg.1641522717552
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: in milliseconds  eg.1641522526562
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default is 1
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: MIN 1, MAX 100; Default 100
                  in: query
                  name: pageSize
                  schema:
                    default: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAlgoSpotHistoricalOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Historical Algo Orders(USER_DATA)
            tags:
                - Algo Trading
    /sapi/v1/algo/spot/newOrderTwap:
        post:
            description: Place a new spot TWAP order with Algo service.
            operationId: CreateAlgoSpotNewOrderTwapV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateAlgoSpotNewOrderTwapV1Req'
                description: The request body for CreateAlgoSpotNewOrderTwapV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAlgoSpotNewOrderTwapV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Time-Weighted Average Price(Twap) New Order(TRADE)
            tags:
                - Algo Trading
    /sapi/v1/algo/spot/openOrders:
        get:
            description: Get all open SPOT TWAP orders
            operationId: GetAlgoSpotOpenOrdersV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAlgoSpotOpenOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Current Algo Open Orders(USER_DATA)
            tags:
                - Algo Trading
    /sapi/v1/algo/spot/order:
        delete:
            description: Cancel an open TWAP order
            operationId: DeleteAlgoSpotOrderV1
            parameters:
                - description: eg. 14511
                  in: query
                  name: algoId
                  required: true
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteAlgoSpotOrderV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Cancel Algo Order(TRADE)
            tags:
                - Algo Trading
    /sapi/v1/algo/spot/subOrders:
        get:
            description: Get respective sub orders for a specified algoId
            operationId: GetAlgoSpotSubOrdersV1
            parameters:
                - in: query
                  name: algoId
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: Default is 1
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: MIN 1, MAX 100; Default 100
                  in: query
                  name: pageSize
                  schema:
                    default: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAlgoSpotSubOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Sub Orders(USER_DATA)
            tags:
                - Algo Trading
    /sapi/v1/apiReferral/customization:
        get:
            description: '- CustomerId and email can not be sent at the same time'
            operationId: GetApiReferralCustomizationV1
            parameters:
                - in: query
                  name: customerId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: email
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetApiReferralCustomizationV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Client Email Customized Id (USER DATA) （For Partner）
            tags:
                - Binance Link
        post:
            description: |-
                - CustomerId must be unique
                - For the same email, the customerId will be modified in real time
            operationId: CreateApiReferralCustomizationV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateApiReferralCustomizationV1Req'
                description: The request body for CreateApiReferralCustomizationV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateApiReferralCustomizationV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Customize Id For Client (USER DATA) （For Partner）
            tags:
                - Binance Link
    /sapi/v1/apiReferral/ifNewUser:
        get:
            operationId: GetApiReferralIfNewUserV1
            parameters:
                - description: brokerId
                  in: query
                  name: apiAgentCode
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetApiReferralIfNewUserV1Resp'
                    description: Successful operation
            summary: Query Client If The New User (USER  DATA)
            tags:
                - Binance Link
    /sapi/v1/apiReferral/kickback/recentRecord:
        get:
            description: '- Only get the latest history of past 7 days.'
            operationId: GetApiReferralKickbackRecentRecordV1
            parameters:
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 500, max 1000
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetApiReferralKickbackRecentRecordV1Resp'
                    description: Successful operation
            summary: Query Rebate Recent Record(For Client)
            tags:
                - Binance Link
    /sapi/v1/apiReferral/rebate/recentRecord:
        get:
            description: |-
                - startTime and endTime must be both specified or both omitted.
                - When both omitted it returns last 7 days.
                - When both specified the span has to be within 7 days.
            operationId: GetApiReferralRebateRecentRecordV1
            parameters:
                - in: query
                  name: customerId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: max 500
                  in: query
                  name: limit
                  required: true
                  schema:
                    maximum: 500
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetApiReferralRebateRecentRecordV1Resp'
                    description: Successful operation
            summary: Query Rebate Recent Record （USER DATA）(For Partner)
            tags:
                - Binance Link
    /sapi/v1/apiReferral/userCustomization:
        get:
            description: '- CustomerId must be unique'
            operationId: GetApiReferralUserCustomizationV1
            parameters:
                - description: brokerId
                  in: query
                  name: apiAgentCode
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetApiReferralUserCustomizationV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get User’s Customize Id (USER DATA)
            tags:
                - Binance Link
        post:
            description: '- CustomerId must be unique for each apiAgent'
            operationId: CreateApiReferralUserCustomizationV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateApiReferralUserCustomizationV1Req'
                description: The request body for CreateApiReferralUserCustomizationV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateApiReferralUserCustomizationV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Customize Id For Client  (USER DATA)(For client)
            tags:
                - Binance Link
    /sapi/v1/asset/assetDetail:
        get:
            description: Fetch details of assets supported on Binance.
            operationId: GetAssetAssetDetailV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WalletGetAssetAssetDetailV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Asset Detail (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/asset/assetDividend:
        get:
            description: Query asset dividend record.
            operationId: GetAssetAssetDividendV1
            parameters:
                - in: query
                  name: asset
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 20, max 500
                  in: query
                  name: limit
                  schema:
                    default: 20
                    maximum: 500
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAssetAssetDividendV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Asset Dividend Record (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/asset/custody/transfer-history:
        get:
            description: Query User Delegation History
            operationId: GetAssetCustodyTransferHistoryV1
            parameters:
                - in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: Delegate/Undelegate
                  in: query
                  name: type
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: asset
                  schema:
                    default: ""
                    type: string
                - description: default 1
                  in: query
                  name: current
                  schema:
                    default: 1
                    type: integer
                - description: default 10, max 100
                  in: query
                  name: size
                  schema:
                    default: 10
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAssetCustodyTransferHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query User Delegation History(For Master Account)(USER_DATA)
            tags:
                - Wallet
    /sapi/v1/asset/dribblet:
        get:
            description: Dustlog
            operationId: GetAssetDribbletV1
            parameters:
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAssetDribbletV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: DustLog(USER_DATA)
            tags:
                - Wallet
    /sapi/v1/asset/dust:
        post:
            description: Convert dust assets to BNB.
            operationId: CreateAssetDustV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateAssetDustV1Req'
                description: The request body for CreateAssetDustV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAssetDustV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Dust Transfer (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/asset/dust-btc:
        post:
            description: Get Assets That Can Be Converted Into BNB
            operationId: CreateAssetDustBtcV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateAssetDustBtcV1Req'
                description: The request body for CreateAssetDustBtcV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAssetDustBtcV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Assets That Can Be Converted Into BNB (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/asset/get-funding-asset:
        post:
            description: Query Funding Wallet
            operationId: CreateAssetGetFundingAssetV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateAssetGetFundingAssetV1Req'
                description: The request body for CreateAssetGetFundingAssetV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAssetGetFundingAssetV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Funding Wallet (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/asset/ledger-transfer/cloud-mining/queryByPage:
        get:
            description: The query of Cloud-Mining payment and refund history
            operationId: GetAssetLedgerTransferCloudMiningQueryByPageV1
            parameters:
                - description: The transaction id
                  in: query
                  name: tranId
                  schema:
                    format: int64
                    type: integer
                - description: The unique flag
                  in: query
                  name: clientTranId
                  schema:
                    default: ""
                    type: string
                - description: If it is blank, we will query all assets
                  in: query
                  name: asset
                  schema:
                    default: ""
                    type: string
                - description: 'inclusive, unit: ms'
                  in: query
                  name: startTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: 'exclusive, unit: ms'
                  in: query
                  name: endTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: current page, default 1, the min value is 1
                  in: query
                  name: current
                  schema:
                    default: 1
                    type: integer
                - description: page size, default 10, the max value is 100
                  in: query
                  name: size
                  schema:
                    default: 10
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAssetLedgerTransferCloudMiningQueryByPageV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Cloud-Mining payment and refund history (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/asset/tradeFee:
        get:
            description: Fetch trade fee
            operationId: GetAssetTradeFeeV1
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAssetTradeFeeV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Trade Fee (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/asset/transfer:
        get:
            description: Query User Universal Transfer History
            operationId: GetAssetTransferV1
            parameters:
                - in: query
                  name: type
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 1
                  in: query
                  name: current
                  schema:
                    default: 1
                    type: integer
                - description: Default 10, Max 100
                  in: query
                  name: size
                  schema:
                    default: 10
                    maximum: 100
                    type: integer
                - in: query
                  name: fromSymbol
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: toSymbol
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAssetTransferV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query User Universal Transfer History(USER_DATA)
            tags:
                - Wallet
        post:
            description: user universal transfer
            operationId: CreateAssetTransferV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateAssetTransferV1Req'
                description: The request body for CreateAssetTransferV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAssetTransferV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: User Universal Transfer (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/asset/wallet/balance:
        get:
            description: Query User Wallet Balance
            operationId: GetAssetWalletBalanceV1
            parameters:
                - description: '`USDT`, `ETH`, `USDC`, `BNB`, etc. default `BTC`'
                  in: query
                  name: quoteAsset
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAssetWalletBalanceV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query User Wallet Balance (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/bnbBurn:
        get:
            description: Get BNB Burn Status
            operationId: GetBnbBurnV1
            parameters:
                - description: No more than 60000
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBnbBurnV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get BNB Burn Status (USER_DATA)
            tags:
                - Margin Trading
        post:
            description: Toggle BNB Burn On Spot Trade And Margin Interest
            operationId: CreateBnbBurnV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateBnbBurnV1Req'
                description: The request body for CreateBnbBurnV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBnbBurnV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Toggle BNB Burn On Spot Trade And Margin Interest (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/broker/info:
        get:
            operationId: GetBrokerInfoV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrokerInfoV1Resp'
                    description: Successful operation
            summary: Link Account Information
            tags:
                - Binance Link
    /sapi/v1/broker/rebate/futures/recentRecord:
        get:
            description: '- If filterResult = TRUE, rebates not from its own sub accounts will be filtered out in response.'
            operationId: GetBrokerRebateFuturesRecentRecordV1
            parameters:
                - description: '1:USDT Futures, 2: Coin Futures'
                  in: query
                  name: futuresType
                  required: true
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: startTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: default 1
                  in: query
                  name: page
                  schema:
                    default: 1
                    format: int64
                    type: integer
                - description: default 10, max 100
                  in: query
                  name: size
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - description: 'TRUE or FALSE. Default: FALSE'
                  in: query
                  name: filterResult
                  schema:
                    type: boolean
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrokerRebateFuturesRecentRecordV1Resp'
                    description: Successful operation
            summary: Query Broker Futures Commission Rebate Record
            tags:
                - Binance Link
    /sapi/v1/broker/rebate/recentRecord:
        get:
            description: '- The query time period must be less than 7 days (default as the recent 7 days).'
            operationId: GetBrokerRebateRecentRecordV1
            parameters:
                - in: query
                  name: subAccountId
                  schema:
                    default: ""
                    type: string
                - description: 'Default: 7 days from current timestamp'
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default: present timestamp'
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: default 1
                  in: query
                  name: page
                  schema:
                    default: 1
                    format: int64
                    type: integer
                - description: default 500，max500
                  in: query
                  name: size
                  schema:
                    default: 500
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrokerRebateRecentRecordV1Resp'
                    description: Successful operation
            summary: Query Broker Commission Rebate Recent Record（Spot）
            tags:
                - Binance Link
    /sapi/v1/broker/subAccount:
        delete:
            operationId: DeleteBrokerSubAccountV1
            parameters:
                - in: query
                  name: subAccountId
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteBrokerSubAccountV1Resp'
                    description: Successful operation
            summary: Delete Sub Account
            tags:
                - Binance Link
        get:
            operationId: GetBrokerSubAccountV1
            parameters:
                - in: query
                  name: subAccountId
                  schema:
                    default: ""
                    type: string
                - description: default 1
                  in: query
                  name: page
                  schema:
                    default: 1
                    format: int64
                    type: integer
                - description: default 500
                  in: query
                  name: size
                  schema:
                    default: 500
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrokerSubAccountV1Resp'
                    description: Successful operation
            summary: Query Sub Account
            tags:
                - Binance Link
        post:
            description: To create a link sub-account
            operationId: CreateBrokerSubAccountV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateBrokerSubAccountV1Req'
                description: The request body for CreateBrokerSubAccountV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBrokerSubAccountV1Resp'
                    description: Successful operation
            summary: Create a Sub Account
            tags:
                - Binance Link
    /sapi/v1/broker/subAccount/bnbBurn/marginInterest:
        post:
            description: '- Subaccount must be enabled margin before using this switch'
            operationId: CreateBrokerSubAccountBnbBurnMarginInterestV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateBrokerSubAccountBnbBurnMarginInterestV1Req'
                description: The request body for CreateBrokerSubAccountBnbBurnMarginInterestV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBrokerSubAccountBnbBurnMarginInterestV1Resp'
                    description: Successful operation
            summary: Enable Or Disable BNB Burn for Sub Account Margin Interest
            tags:
                - Binance Link
    /sapi/v1/broker/subAccount/bnbBurn/spot:
        post:
            operationId: CreateBrokerSubAccountBnbBurnSpotV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateBrokerSubAccountBnbBurnSpotV1Req'
                description: The request body for CreateBrokerSubAccountBnbBurnSpotV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBrokerSubAccountBnbBurnSpotV1Resp'
                    description: Successful operation
            summary: Enable Or Disable BNB Burn for Sub Account SPOT and MARGIN
            tags:
                - Binance Link
    /sapi/v1/broker/subAccount/bnbBurn/status:
        get:
            operationId: GetBrokerSubAccountBnbBurnStatusV1
            parameters:
                - in: query
                  name: subAccountId
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrokerSubAccountBnbBurnStatusV1Resp'
                    description: Successful operation
            summary: Get BNB Burn Status for Sub Account
            tags:
                - Binance Link
    /sapi/v1/broker/subAccount/depositHist:
        get:
            description: '- The query time period must be less than 7 days( default as the recent 7 days).'
            operationId: GetBrokerSubAccountDepositHistV1
            parameters:
                - in: query
                  name: subAccountId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: coin
                  schema:
                    default: ""
                    type: string
                - description: '0(0:pending,6: credited but cannot withdraw, 1:success)'
                  in: query
                  name: status
                  schema:
                    type: integer
                - description: 'Default: 7 days from current timestamp'
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default: present timestamp'
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default：500
                  in: query
                  name: limit
                  schema:
                    type: integer
                - description: Default：0
                  in: query
                  name: offset
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrokerSubAccountDepositHistV1Resp'
                    description: Successful operation
            summary: Get Sub Account Deposit History
            tags:
                - Binance Link
    /sapi/v1/broker/subAccount/futures:
        post:
            operationId: CreateBrokerSubAccountFuturesV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateBrokerSubAccountFuturesV1Req'
                description: The request body for CreateBrokerSubAccountFuturesV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBrokerSubAccountFuturesV1Resp'
                    description: Successful operation
            summary: Enable Futures for Sub Account
            tags:
                - Binance Link
    /sapi/v1/broker/subAccount/marginSummary:
        get:
            description: '- If subaccountId is not sent, the size must be sent'
            operationId: GetBrokerSubAccountMarginSummaryV1
            parameters:
                - in: query
                  name: subAccountId
                  schema:
                    default: ""
                    type: string
                - description: default 1
                  in: query
                  name: page
                  schema:
                    default: 1
                    format: int64
                    type: integer
                - description: default 10, max 20
                  in: query
                  name: size
                  schema:
                    default: 10
                    format: int64
                    maximum: 20
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrokerSubAccountMarginSummaryV1Resp'
                    description: Successful operation
            summary: Query Sub Account Margin Asset info
            tags:
                - Binance Link
    /sapi/v1/broker/subAccount/spotSummary:
        get:
            description: |-
                - If subaccountId is not sent, the size must be sent
                - Requests per UID are limited to 60 requests per minute
            operationId: GetBrokerSubAccountSpotSummaryV1
            parameters:
                - in: query
                  name: subAccountId
                  schema:
                    default: ""
                    type: string
                - description: default 1
                  in: query
                  name: page
                  schema:
                    default: 1
                    format: int64
                    type: integer
                - description: default 10, max 20
                  in: query
                  name: size
                  schema:
                    default: 10
                    format: int64
                    maximum: 20
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrokerSubAccountSpotSummaryV1Resp'
                    description: Successful operation
            summary: Query Sub Account Spot Asset info
            tags:
                - Binance Link
    /sapi/v1/broker/subAccountApi:
        delete:
            description: |-
                Caution:
                - This request will delete a api key for a sub account
                - You need to enable "trade" option for the api key which requests this endpoint
                - You can only delete 1 api key for each sub account per second
            operationId: DeleteBrokerSubAccountApiV1
            parameters:
                - in: query
                  name: subAccountId
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: subAccountApiKey
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteBrokerSubAccountApiV1Resp'
                    description: Successful operation
            summary: Delete Sub Account Api Key
            tags:
                - Binance Link
        get:
            description: |-
                Caution:
                - You need to enable "trade" option for the api key which requests this endpoint
            operationId: GetBrokerSubAccountApiV1
            parameters:
                - in: query
                  name: subAccountId
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: subAccountApiKey
                  schema:
                    default: ""
                    type: string
                - description: default 1
                  in: query
                  name: page
                  schema:
                    default: 1
                    format: int64
                    type: integer
                - description: default 500, max 500
                  in: query
                  name: size
                  schema:
                    default: 500
                    format: int64
                    maximum: 500
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrokerSubAccountApiV1Resp'
                    description: Successful operation
            summary: Query Sub Account Api Key
            tags:
                - Binance Link
        post:
            description: |-
                Caution:
                - This request will generate a api key for a sub account.
                - You need to enable "trade" option for the api key which requests this endpoint
                - Sub account should be enable margin before its api-key's marginTrade being enabled
                - Sub account should be enable futures before its api-key's futuresTrade being enabled
                - You can only create 1 api key for each sub account per second
            operationId: CreateBrokerSubAccountApiV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateBrokerSubAccountApiV1Req'
                description: The request body for CreateBrokerSubAccountApiV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBrokerSubAccountApiV1Resp'
                    description: Successful operation
            summary: Create Api Key for Sub Account
            tags:
                - Binance Link
    /sapi/v1/broker/subAccountApi/commission:
        post:
            description: |-
                This request will change the commission for a sub account.
                You need to enable "trade" option for the api key which requests this endpoint.
            operationId: CreateBrokerSubAccountApiCommissionV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateBrokerSubAccountApiCommissionV1Req'
                description: The request body for CreateBrokerSubAccountApiCommissionV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBrokerSubAccountApiCommissionV1Resp'
                    description: Successful operation
            summary: Change Sub Account Commission
            tags:
                - Binance Link
    /sapi/v1/broker/subAccountApi/commission/coinFutures:
        get:
            description: |-
                - The sub-account's COIN-Ⓜ futures commission of a symbol equals to the base commission of the symbol on the sub-account's fee tier plus the commission adjustment.
                - If symbol not sent, commission adjustment of all symbols will be returned.
                - If futures disabled, it is not allowed to set subaccount's COIN-Ⓜ futures commission adjustment on any symbol.
                - Different symbols have the same commission for the same pair
            operationId: GetBrokerSubAccountApiCommissionCoinFuturesV1
            parameters:
                - in: query
                  name: subAccountId
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: BTCUSD
                  in: query
                  name: pair
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrokerSubAccountApiCommissionCoinFuturesV1Resp'
                    description: Successful operation
            summary: Query Sub Account COIN-Ⓜ Futures Commission Adjustment
            tags:
                - Binance Link
        post:
            description: |-
                This request will change the COIN-Ⓜ futures commission for a sub account.
                You need to enable "trade" option for the api key which requests this endpoint.
                The sub-account's COIN-Ⓜ futures commission of a symbol equals to the base commission of the symbol on the sub-account's fee tier plus the commission adjustment.
            operationId: CreateBrokerSubAccountApiCommissionCoinFuturesV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateBrokerSubAccountApiCommissionCoinFuturesV1Req'
                description: The request body for CreateBrokerSubAccountApiCommissionCoinFuturesV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp'
                    description: Successful operation
            summary: Change Sub Account COIN-Ⓜ Futures Commission Adjustment
            tags:
                - Binance Link
    /sapi/v1/broker/subAccountApi/commission/futures:
        get:
            description: The sub-account's USDT-Ⓜ futures commission of a symbol equals to the base commission of the symbol on the sub-account's fee tier plus the commission adjustment.
            operationId: GetBrokerSubAccountApiCommissionFuturesV1
            parameters:
                - in: query
                  name: subAccountId
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrokerSubAccountApiCommissionFuturesV1Resp'
                    description: Successful operation
            summary: Query Sub Account USDT-Ⓜ Futures Commission Adjustment
            tags:
                - Binance Link
        post:
            description: |-
                This request will change the USDT-Ⓜ futures commission for a sub account.
                You need to enable "trade" option for the api key which requests this endpoint.
                The sub-account's USDT-Ⓜ futures commission of a symbol equals to the base commission of the symbol on the sub-account's fee tier plus the commission adjustment.
            operationId: CreateBrokerSubAccountApiCommissionFuturesV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateBrokerSubAccountApiCommissionFuturesV1Req'
                description: The request body for CreateBrokerSubAccountApiCommissionFuturesV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBrokerSubAccountApiCommissionFuturesV1Resp'
                    description: Successful operation
            summary: Change Sub Account USDT-Ⓜ Futures Commission Adjustment
            tags:
                - Binance Link
    /sapi/v1/broker/subAccountApi/ipRestriction:
        get:
            operationId: GetBrokerSubAccountApiIpRestrictionV1
            parameters:
                - in: query
                  name: subAccountId
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: subAccountApiKey
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrokerSubAccountApiIpRestrictionV1Resp'
                    description: Successful operation
            summary: Get IP Restriction for Sub Account Api Key
            tags:
                - Binance Link
    /sapi/v1/broker/subAccountApi/ipRestriction/ipList:
        delete:
            operationId: DeleteBrokerSubAccountApiIpRestrictionIpListV1
            parameters:
                - in: query
                  name: subAccountId
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: subAccountApiKey
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: ipAddress
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteBrokerSubAccountApiIpRestrictionIpListV1Resp'
                    description: Successful operation
            summary: Delete IP Restriction for Sub Account Api Key
            tags:
                - Binance Link
    /sapi/v1/broker/subAccountApi/permission:
        post:
            description: |-
                Caution:
                - This request will change the api permission for a sub account.
                - You need to enable "trade" option for the api key which requests this endpoint.
                - Sub account should be enable margin before its api-key's marginTrade being enabled.
                - Sub account should be enable futures before its api-key's futuresTrade being enabled.
            operationId: CreateBrokerSubAccountApiPermissionV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateBrokerSubAccountApiPermissionV1Req'
                description: The request body for CreateBrokerSubAccountApiPermissionV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBrokerSubAccountApiPermissionV1Resp'
                    description: Successful operation
            summary: Change Sub Account Api Permission
            tags:
                - Binance Link
    /sapi/v1/broker/subAccountApi/permission/universalTransfer:
        post:
            description: |-
                Caution:
                - This request will enable the api permission for a sub account to use POST /sapi/v1/asset/transferendpoint.
                - You need to enable "trade" option for the api key which requests this endpoint.
            operationId: CreateBrokerSubAccountApiPermissionUniversalTransferV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateBrokerSubAccountApiPermissionUniversalTransferV1Req'
                description: The request body for CreateBrokerSubAccountApiPermissionUniversalTransferV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp'
                    description: Successful operation
            summary: Enable Universal Transfer Permission For Sub Account Api Key
            tags:
                - Binance Link
    /sapi/v1/broker/transfer:
        get:
            description: |-
                Caution:
                - If showAllStatus is true, the status in response will show four types: INIT,PROCESS,SUCCESS,FAILURE.
                - If showAllStatus is false, the status in response will show three types: INIT,PROCESS,SUCCESS.
                - Either fromId or toId must be sent. Return fromId equal master account by default.
                Query scope is limited to 100 days:
                - Both startTime and endTime are provided: If it exceeds, the endTime will be re-calculated 100 days after the startTime.
                - Neither startTime nor endTime are provided: Calculate 100 days before today.
                - endTime is not provided: Calculate 100 days after startTime.
                - startTime is not provided: Calculate 100 days before endTime.
            operationId: GetBrokerTransferV1
            parameters:
                - in: query
                  name: fromId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: toId
                  schema:
                    default: ""
                    type: string
                - description: client transfer id
                  in: query
                  name: clientTranId
                  schema:
                    default: ""
                    type: string
                - description: 'true or false, default: false'
                  in: query
                  name: showAllStatus
                  schema:
                    default: "false"
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: page
                  schema:
                    type: integer
                - description: default 500, max 500
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 500
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrokerTransferV1Resp'
                    description: Successful operation
            summary: Query Sub Account Transfer History（SPOT）
            tags:
                - Binance Link
        post:
            description: |-
                Caution:
                - You need to enable "internal transfer" option for the api key which requests this endpoint.
                - Transfer from master account if fromId not sent.
                - Transfer to master account if toId not sent.
            operationId: CreateBrokerTransferV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateBrokerTransferV1Req'
                description: The request body for CreateBrokerTransferV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBrokerTransferV1Resp'
                    description: Successful operation
            summary: Sub Account Transfer（SPOT）
            tags:
                - Binance Link
    /sapi/v1/broker/transfer/futures:
        get:
            description: '- Only get the latest history of past 30 days.'
            operationId: GetBrokerTransferFuturesV1
            parameters:
                - in: query
                  name: subAccountId
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: '1:USDT Futures,2: COIN Futures'
                  in: query
                  name: futuresType
                  required: true
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: clientTranId
                  schema:
                    default: ""
                    type: string
                - description: default 30 days records
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: default 30 days records
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: default 1
                  in: query
                  name: page
                  schema:
                    default: 1
                    type: integer
                - description: default 50, max 500
                  in: query
                  name: limit
                  schema:
                    default: 50
                    maximum: 500
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrokerTransferFuturesV1Resp'
                    description: Successful operation
            summary: Query Sub Account Transfer History（FUTURES）
            tags:
                - Binance Link
        post:
            description: |-
                Caution:
                - You need to enable "internal transfer" option for the api key which requests this endpoint.
                - Transfer from master account if fromId not sent.
                - Transfer to master account if toId not sent.
                - Each master account could transfer 5000 times/min
            operationId: CreateBrokerTransferFuturesV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateBrokerTransferFuturesV1Req'
                description: The request body for CreateBrokerTransferFuturesV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBrokerTransferFuturesV1Resp'
                    description: Successful operation
            summary: Sub Account Transfer（FUTURES）
            tags:
                - Binance Link
    /sapi/v1/broker/universalTransfer:
        get:
            description: |-
                Caution:
                - Either fromId or toId must be sent.
                - If either fromId or toId is the master account itself, it will not return in response.
                - If showAllStatus is true, the status in response will show four types: INIT,PROCESS,SUCCESS,FAILURE.
                Query scope is limited to 100 days:
                - Both startTime and endTime are provided: If it exceeds, the endTime will be re-calculated 100 days after the startTime.
                - Neither startTime nor endTime are provided: Calculate 30 days before today.
                - endTime is not provided: Calculate as Current time.
                - startTime is not provided: Calculate 30 days before endTime.
            operationId: GetBrokerUniversalTransferV1
            parameters:
                - in: query
                  name: fromId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: toId
                  schema:
                    default: ""
                    type: string
                - description: client transfer id
                  in: query
                  name: clientTranId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: default 1
                  in: query
                  name: page
                  schema:
                    default: 1
                    type: integer
                - description: default 500, max 500
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 500
                    type: integer
                - description: TRUE or FALSE
                  in: query
                  name: showAllStatus
                  schema:
                    type: boolean
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrokerUniversalTransferV1Resp'
                    description: Successful operation
            summary: Query Universal Transfer History
            tags:
                - Binance Link
        post:
            description: |-
                Caution:
                - You need to enable "internal transfer" option for the api key which requests this endpoint.
                - Transfer from master account if fromId not sent.
                - Transfer to master account if toId not sent.
                - Transfer between futures acount is not supported.
            operationId: CreateBrokerUniversalTransferV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateBrokerUniversalTransferV1Req'
                description: The request body for CreateBrokerUniversalTransferV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBrokerUniversalTransferV1Resp'
                    description: Successful operation
            summary: Universal Transfer
            tags:
                - Binance Link
    /sapi/v1/capital/config/getall:
        get:
            description: Get information of coins (available for deposit and withdraw) for user.
            operationId: GetCapitalConfigGetallV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCapitalConfigGetallV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: All Coins' Information (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/capital/deposit/address:
        get:
            description: Fetch deposit address with network.
            operationId: GetCapitalDepositAddressV1
            parameters:
                - in: query
                  name: coin
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: network
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: amount
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCapitalDepositAddressV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Deposit Address(supporting network) (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/capital/deposit/address/list:
        get:
            description: Fetch deposit address list with network.
            operationId: GetCapitalDepositAddressListV1
            parameters:
                - description: '`coin` refers to the parent network address format that the address is using'
                  in: query
                  name: coin
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: network
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCapitalDepositAddressListV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Fetch deposit address list with network(USER_DATA)
            tags:
                - Wallet
    /sapi/v1/capital/deposit/credit-apply:
        post:
            description: Apply deposit credit for expired address (One click arrival)
            operationId: CreateCapitalDepositCreditApplyV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateCapitalDepositCreditApplyV1Req'
                description: The request body for CreateCapitalDepositCreditApplyV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateCapitalDepositCreditApplyV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: One click arrival deposit apply (for expired address deposit) (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/capital/deposit/hisrec:
        get:
            description: Fetch deposit history.
            operationId: GetCapitalDepositHisrecV1
            parameters:
                - description: 'Default: `false`, return `sourceAddress`field when set to `true`'
                  in: query
                  name: includeSource
                  schema:
                    default: false
                    type: boolean
                - in: query
                  name: coin
                  schema:
                    default: ""
                    type: string
                - description: 0(0:pending, 6:credited but cannot withdraw, 7:Wrong Deposit, 8:Waiting User confirm, 1:success, 2:rejected)
                  in: query
                  name: status
                  schema:
                    type: integer
                - description: 'Default: 90 days from current timestamp'
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default: present timestamp'
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default:0
                  in: query
                  name: offset
                  schema:
                    type: integer
                - description: Default:1000, Max:1000
                  in: query
                  name: limit
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: txId
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCapitalDepositHisrecV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Deposit History (supporting network) (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/capital/deposit/subAddress:
        get:
            description: Fetch sub-account deposit address
            operationId: GetCapitalDepositSubAddressV1
            parameters:
                - description: Sub account email
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: coin
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: network
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: amount
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCapitalDepositSubAddressV1Resp'
                    description: Successful operation
            summary: Get Sub-account Deposit Address(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/capital/deposit/subHisrec:
        get:
            description: Fetch sub-account deposit history
            operationId: GetCapitalDepositSubHisrecV1
            parameters:
                - description: Sub account email
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: coin
                  schema:
                    default: ""
                    type: string
                - description: '0(0:pending,6: credited but cannot withdraw,7:Wrong Deposit,8:Waiting User confirm,1:success)'
                  in: query
                  name: status
                  schema:
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: limit
                  schema:
                    type: integer
                - description: default:0
                  in: query
                  name: offset
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: txId
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCapitalDepositSubHisrecV1Resp'
                    description: Successful operation
            summary: Get Sub-account Deposit History(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/capital/withdraw/address/list:
        get:
            description: Fetch withdraw address list
            operationId: GetCapitalWithdrawAddressListV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCapitalWithdrawAddressListV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Fetch withdraw address list (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/capital/withdraw/apply:
        post:
            description: Submit a withdraw request.
            operationId: CreateCapitalWithdrawApplyV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateCapitalWithdrawApplyV1Req'
                description: The request body for CreateCapitalWithdrawApplyV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateCapitalWithdrawApplyV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Withdraw(USER_DATA)
            tags:
                - Wallet
    /sapi/v1/capital/withdraw/history:
        get:
            description: Fetch withdraw history.
            operationId: GetCapitalWithdrawHistoryV1
            parameters:
                - in: query
                  name: coin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: withdrawOrderId
                  schema:
                    default: ""
                    type: string
                - description: 0(0:Email Sent, 2:Awaiting Approval 3:Rejected 4:Processing 6:Completed)
                  in: query
                  name: status
                  schema:
                    type: integer
                - in: query
                  name: offset
                  schema:
                    type: integer
                - description: 'Default: 1000, Max: 1000'
                  in: query
                  name: limit
                  schema:
                    default: 1000
                    maximum: 1000
                    type: integer
                - description: id list returned in the response of POST `/sapi/v1/capital/withdraw/apply`, separated by `,`
                  in: query
                  name: idList
                  schema:
                    default: ""
                    type: string
                - description: 'Default: 90 days from current timestamp'
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default: present timestamp'
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCapitalWithdrawHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Withdraw History (supporting network) (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/convert/acceptQuote:
        post:
            description: Accept the offered quote by quote ID.
            operationId: CreateConvertAcceptQuoteV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateConvertAcceptQuoteV1Req'
                description: The request body for CreateConvertAcceptQuoteV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateConvertAcceptQuoteV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Accept Quote (TRADE)
            tags:
                - Convert
    /sapi/v1/convert/assetInfo:
        get:
            description: Query for supported asset’s precision information
            operationId: GetConvertAssetInfoV1
            parameters:
                - description: The value cannot be greater than 60000
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetConvertAssetInfoV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query order quantity precision per asset(USER_DATA)
            tags:
                - Convert
    /sapi/v1/convert/exchangeInfo:
        get:
            description: Query for all convertible token pairs and the tokens’ respective upper/lower limits
            operationId: GetConvertExchangeInfoV1
            parameters:
                - description: User spends coin
                  in: query
                  name: fromAsset
                  schema:
                    default: ""
                    type: string
                - description: User receives coin
                  in: query
                  name: toAsset
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetConvertExchangeInfoV1Resp'
                    description: Successful operation
            summary: List All Convert Pairs
            tags:
                - Convert
    /sapi/v1/convert/getQuote:
        post:
            description: Request a quote for the requested token pairs
            operationId: CreateConvertGetQuoteV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateConvertGetQuoteV1Req'
                description: The request body for CreateConvertGetQuoteV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateConvertGetQuoteV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Send Quote Request(USER_DATA)
            tags:
                - Convert
    /sapi/v1/convert/limit/cancelOrder:
        post:
            description: Enable users to cancel a limit order
            operationId: CreateConvertLimitCancelOrderV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateConvertLimitCancelOrderV1Req'
                description: The request body for CreateConvertLimitCancelOrderV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateConvertLimitCancelOrderV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Cancel limit order (USER_DATA)
            tags:
                - Convert
    /sapi/v1/convert/limit/placeOrder:
        post:
            description: Enable users to place a limit order
            operationId: CreateConvertLimitPlaceOrderV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateConvertLimitPlaceOrderV1Req'
                description: The request body for CreateConvertLimitPlaceOrderV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateConvertLimitPlaceOrderV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Place limit order (USER_DATA)
            tags:
                - Convert
    /sapi/v1/convert/limit/queryOpenOrders:
        post:
            description: Request a quote for the requested token pairs
            operationId: CreateConvertLimitQueryOpenOrdersV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateConvertLimitQueryOpenOrdersV1Req'
                description: The request body for CreateConvertLimitQueryOpenOrdersV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateConvertLimitQueryOpenOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query limit open orders (USER_DATA)
            tags:
                - Convert
    /sapi/v1/convert/orderStatus:
        get:
            description: Query order status by order ID.
            operationId: GetConvertOrderStatusV1
            parameters:
                - description: Either orderId or quoteId is required
                  in: query
                  name: orderId
                  schema:
                    default: ""
                    type: string
                - description: Either orderId or quoteId is required
                  in: query
                  name: quoteId
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetConvertOrderStatusV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Order status(USER_DATA)
            tags:
                - Convert
    /sapi/v1/convert/tradeFlow:
        get:
            description: Get Convert Trade History
            operationId: GetConvertTradeFlowV1
            parameters:
                - in: query
                  name: startTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: Default 100, Max 1000
                  in: query
                  name: limit
                  schema:
                    default: 100
                    maximum: 1000
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetConvertTradeFlowV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Convert Trade History(USER_DATA)
            tags:
                - Convert
    /sapi/v1/copyTrading/futures/leadSymbol:
        get:
            description: Get Futures Lead Trading Symbol Whitelist
            operationId: GetCopyTradingFuturesLeadSymbolV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCopyTradingFuturesLeadSymbolV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Futures Lead Trading Symbol Whitelist(USER_DATA)
            tags:
                - Copy Trading
    /sapi/v1/copyTrading/futures/userStatus:
        get:
            description: Get Futures Lead Trader Status
            operationId: GetCopyTradingFuturesUserStatusV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCopyTradingFuturesUserStatusV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Futures Lead Trader Status(TRADE)
            tags:
                - Copy Trading
    /sapi/v1/dci/product/accounts:
        get:
            description: Check Dual Investment accounts
            operationId: GetDciProductAccountsV1
            parameters:
                - description: The value cannot be greater than 60000
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDciProductAccountsV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Check Dual Investment accounts(USER_DATA)
            tags:
                - Dual Investment
    /sapi/v1/dci/product/auto_compound/edit-status:
        post:
            description: Change Auto-Compound status
            operationId: CreateDciProductAuto_compoundEditStatusV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateDciProductAuto_compoundEditStatusV1Req'
                description: The request body for CreateDciProductAuto_compoundEditStatusV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateDciProductAuto_compoundEditStatusV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Change Auto-Compound status(USER_DATA)
            tags:
                - Dual Investment
    /sapi/v1/dci/product/list:
        get:
            description: Get Dual Investment product list
            operationId: GetDciProductListV1
            parameters:
                - description: Input CALL or PUT
                  in: query
                  name: optionType
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: 'Target exercised asset, e.g.: if you subscribe to a high sell product (call option), you should input: `optionType`:CALL,`exercisedCoin`:USDT,`investCoin`:BNB; if you subscribe to a low buy product (put option), you should input: `optionType`:PUT,`exercisedCoin`:BNB,`investCoin`:USDT'
                  in: query
                  name: exercisedCoin
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: 'Asset used for subscribing, e.g.: if you subscribe to a high sell product (call option), you should input: `optionType`:CALL,`exercisedCoin`:USDT,`investCoin`:BNB; if you subscribe to a low buy product (put option), you should input: `optionType`:PUT,`exercisedCoin`:BNB,`investCoin`:USDT'
                  in: query
                  name: investCoin
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: 'Default: 10, Maximum: 100'
                  in: query
                  name: pageSize
                  schema:
                    default: 10
                    format: int64
                    type: integer
                - description: 'Default: 1'
                  in: query
                  name: pageIndex
                  schema:
                    default: 1
                    type: integer
                - description: The value cannot be greater than 60000
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDciProductListV1Resp'
                    description: Successful operation
            summary: Get Dual Investment product list
            tags:
                - Dual Investment
    /sapi/v1/dci/product/positions:
        get:
            description: Get Dual Investment positions (batch)
            operationId: GetDciProductPositionsV1
            parameters:
                - description: '`PENDING`:Products are purchasing, will give results later;`PURCHASE_SUCCESS`:purchase successfully;`SETTLED`: Products are finish settling;`PURCHASE_FAIL`:fail to purchase;`REFUNDING`:refund ongoing;`REFUND_SUCCESS`:refund to spot account successfully; `SETTLING`:Products are settling. If don&#39;t fill this field, will response all the position status.'
                  in: query
                  name: status
                  schema:
                    default: ""
                    type: string
                - description: 'Default: 10, Max:100'
                  in: query
                  name: pageSize
                  schema:
                    default: 10
                    format: int64
                    type: integer
                - description: Default:1
                  in: query
                  name: pageIndex
                  schema:
                    type: integer
                - description: The value cannot be greater than 60000
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDciProductPositionsV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Dual Investment positions(USER_DATA)
            tags:
                - Dual Investment
    /sapi/v1/dci/product/subscribe:
        post:
            description: Subscribe Dual Investment products
            operationId: CreateDciProductSubscribeV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateDciProductSubscribeV1Req'
                description: The request body for CreateDciProductSubscribeV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateDciProductSubscribeV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Subscribe Dual Investment products(USER_DATA)
            tags:
                - Dual Investment
    /sapi/v1/eth-staking/eth/history/rateHistory:
        get:
            description: Get WBETH Rate History
            operationId: GetEthStakingEthHistoryRateHistoryV1
            parameters:
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Currently querying page. Start from 1. Default:1
                  in: query
                  name: current
                  schema:
                    format: int64
                    type: integer
                - description: Default:10, Max:100
                  in: query
                  name: size
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEthStakingEthHistoryRateHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get WBETH Rate History(USER_DATA)
            tags:
                - Staking
    /sapi/v1/eth-staking/eth/history/redemptionHistory:
        get:
            description: Get ETH redemption history
            operationId: GetEthStakingEthHistoryRedemptionHistoryV1
            parameters:
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Currently querying page. Start from 1. Default: 1'
                  in: query
                  name: current
                  schema:
                    default: 1
                    format: int64
                    type: integer
                - description: 'Default: 10, Max: 100'
                  in: query
                  name: size
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEthStakingEthHistoryRedemptionHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get ETH redemption history(USER_DATA)
            tags:
                - Staking
    /sapi/v1/eth-staking/eth/history/rewardsHistory:
        get:
            description: Get BETH rewards distribution history
            operationId: GetEthStakingEthHistoryRewardsHistoryV1
            parameters:
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Currently querying page. Start from 1. Default: 1'
                  in: query
                  name: current
                  schema:
                    default: 1
                    format: int64
                    type: integer
                - description: 'Default: 10, Max: 100'
                  in: query
                  name: size
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEthStakingEthHistoryRewardsHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get BETH rewards distribution history(USER_DATA)
            tags:
                - Staking
    /sapi/v1/eth-staking/eth/history/stakingHistory:
        get:
            description: Get ETH staking history
            operationId: GetEthStakingEthHistoryStakingHistoryV1
            parameters:
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Currently querying page. Start from 1. Default: 1'
                  in: query
                  name: current
                  schema:
                    default: 1
                    format: int64
                    type: integer
                - description: 'Default: 10, Max: 100'
                  in: query
                  name: size
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEthStakingEthHistoryStakingHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get ETH staking history(USER_DATA)
            tags:
                - Staking
    /sapi/v1/eth-staking/eth/history/wbethRewardsHistory:
        get:
            description: Get WBETH rewards history
            operationId: GetEthStakingEthHistoryWbethRewardsHistoryV1
            parameters:
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Currently querying page. Start from 1. Default: 1'
                  in: query
                  name: current
                  schema:
                    default: 1
                    format: int64
                    type: integer
                - description: 'Default: 10, Max: 100'
                  in: query
                  name: size
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEthStakingEthHistoryWbethRewardsHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get WBETH rewards history(USER_DATA)
            tags:
                - Staking
    /sapi/v1/eth-staking/eth/quota:
        get:
            description: Get current ETH staking quota
            operationId: GetEthStakingEthQuotaV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEthStakingEthQuotaV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get current ETH staking quota(USER_DATA)
            tags:
                - Staking
    /sapi/v1/eth-staking/eth/redeem:
        post:
            description: Redeem WBETH or BETH and get ETH
            operationId: CreateEthStakingEthRedeemV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateEthStakingEthRedeemV1Req'
                description: The request body for CreateEthStakingEthRedeemV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEthStakingEthRedeemV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Redeem ETH(TRADE)
            tags:
                - Staking
    /sapi/v1/eth-staking/wbeth/history/unwrapHistory:
        get:
            description: Get WBETH unwrap history
            operationId: GetEthStakingWbethHistoryUnwrapHistoryV1
            parameters:
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Currently querying page. Start from 1. Default:1
                  in: query
                  name: current
                  schema:
                    format: int64
                    type: integer
                - description: Default:10, Max:100
                  in: query
                  name: size
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEthStakingWbethHistoryUnwrapHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get WBETH unwrap history(USER_DATA)
            tags:
                - Staking
    /sapi/v1/eth-staking/wbeth/history/wrapHistory:
        get:
            description: Get WBETH wrap history
            operationId: GetEthStakingWbethHistoryWrapHistoryV1
            parameters:
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Currently querying page. Start from 1. Default:1
                  in: query
                  name: current
                  schema:
                    format: int64
                    type: integer
                - description: Default:10, Max:100
                  in: query
                  name: size
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEthStakingWbethHistoryWrapHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get WBETH wrap history(USER_DATA)
            tags:
                - Staking
    /sapi/v1/eth-staking/wbeth/wrap:
        post:
            description: Wrap BETH
            operationId: CreateEthStakingWbethWrapV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateEthStakingWbethWrapV1Req'
                description: The request body for CreateEthStakingWbethWrapV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEthStakingWbethWrapV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Wrap BETH(TRADE)
            tags:
                - Staking
    /sapi/v1/futures/histDataLink:
        get:
            description: Get Future TickLevel Orderbook Historical Data Download Link
            operationId: GetFuturesHistDataLinkV1
            parameters:
                - description: symbol name, e.g. BTCUSDT or BTCUSD_PERP ｜
                  in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: '`T_DEPTH` for ticklevel orderbook data, `S_DEPTH` for orderbook snapshot data'
                  in: query
                  name: dataType
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetFuturesHistDataLinkV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Future TickLevel Orderbook Historical Data Download Link(USER_DATA)
            tags:
                - Futures Data
    /sapi/v1/loan/borrow/history:
        get:
            description: Get Loan Borrow History
            operationId: GetLoanBorrowHistoryV1
            parameters:
                - description: orderId in `POST /sapi/v1/loan/borrow`
                  in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: loanCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: collateralCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Current querying page. Start from 1; default: 1; max: 1000.'
                  in: query
                  name: current
                  schema:
                    default: 1
                    format: int64
                    maximum: 1000
                    type: integer
                - description: 'Default: 10; max: 100.'
                  in: query
                  name: limit
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanBorrowHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Loan Borrow History(USER_DATA)
            tags:
                - Crypto Loan
    /sapi/v1/loan/income:
        get:
            description: Get Crypto Loans Income History
            operationId: GetLoanIncomeV1
            parameters:
                - in: query
                  name: asset
                  schema:
                    default: ""
                    type: string
                - description: All types will be returned by default. Enum：`borrowIn` ,`collateralSpent`, `repayAmount`, `collateralReturn`(Collateral return after repayment), `addCollateral`, `removeCollateral`, `collateralReturnAfterLiquidation`
                  in: query
                  name: type
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: default 20, max 100
                  in: query
                  name: limit
                  schema:
                    default: 20
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanIncomeV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Crypto Loans Income History(USER_DATA)
            tags:
                - Crypto Loan
    /sapi/v1/loan/ltv/adjustment/history:
        get:
            description: Get Loan LTV Adjustment History
            operationId: GetLoanLtvAdjustmentHistoryV1
            parameters:
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: loanCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: collateralCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Current querying page. Start from 1; default: 1; max: 1000'
                  in: query
                  name: current
                  schema:
                    default: 1
                    format: int64
                    maximum: 1000
                    type: integer
                - description: 'Default: 10; max: 100'
                  in: query
                  name: limit
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanLtvAdjustmentHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Loan LTV Adjustment History(USER_DATA)
            tags:
                - Crypto Loan
    /sapi/v1/loan/repay/history:
        get:
            description: Get Loan Repayment History
            operationId: GetLoanRepayHistoryV1
            parameters:
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: loanCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: collateralCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Current querying page. Start from 1; default: 1; max: 1000'
                  in: query
                  name: current
                  schema:
                    default: 1
                    format: int64
                    maximum: 1000
                    type: integer
                - description: 'Default: 10; max: 100'
                  in: query
                  name: limit
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanRepayHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Loan Repayment History(USER_DATA)
            tags:
                - Crypto Loan
    /sapi/v1/loan/vip/accruedInterest:
        get:
            description: GET /sapi/v1/loan/vip/accruedInterest
            operationId: GetLoanVipAccruedInterestV1
            parameters:
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: loanCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Current querying page. Start from 1; default: 1; max: 1000'
                  in: query
                  name: current
                  schema:
                    default: 1
                    format: int64
                    maximum: 1000
                    type: integer
                - description: 'Default: 10; max: 100'
                  in: query
                  name: limit
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  required: true
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanVipAccruedInterestV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get VIP Loan Accrued Interest(USER_DATA)
            tags:
                - Vip Loan
    /sapi/v1/loan/vip/borrow:
        post:
            description: VIP loan is available for VIP users only.
            operationId: CreateLoanVipBorrowV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateLoanVipBorrowV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: VIP Loan Borrow(TRADE)
            tags:
                - Vip Loan
    /sapi/v1/loan/vip/collateral/account:
        get:
            description: VIP loan is available for VIP users only
            operationId: GetLoanVipCollateralAccountV1
            parameters:
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: collateralAccountId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanVipCollateralAccountV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Check VIP Loan Collateral Account (USER_DATA)
            tags:
                - Vip Loan
    /sapi/v1/loan/vip/collateral/data:
        get:
            description: Get Collateral Asset Data
            operationId: GetLoanVipCollateralDataV1
            parameters:
                - in: query
                  name: collateralCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanVipCollateralDataV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Collateral Asset Data(USER_DATA)
            tags:
                - Vip Loan
    /sapi/v1/loan/vip/interestRateHistory:
        get:
            description: Get VIP Loan Interest Rate History
            operationId: GetLoanVipInterestRateHistoryV1
            parameters:
                - in: query
                  name: coin
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Check current querying page, start from 1. Default：1；Max：1000.
                  in: query
                  name: current
                  schema:
                    format: int64
                    type: integer
                - description: Default：10; Max：100.
                  in: query
                  name: limit
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  required: true
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanVipInterestRateHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get VIP Loan Interest Rate History (USER_DATA)
            tags:
                - Vip Loan
    /sapi/v1/loan/vip/loanable/data:
        get:
            description: Get interest rate and borrow limit of loanable assets. The borrow limit is shown in USD value.
            operationId: GetLoanVipLoanableDataV1
            parameters:
                - in: query
                  name: loanCoin
                  schema:
                    default: ""
                    type: string
                - description: default:user&#39;s vip level
                  in: query
                  name: vipLevel
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanVipLoanableDataV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Loanable Assets Data(USER_DATA)
            tags:
                - Vip Loan
    /sapi/v1/loan/vip/ongoing/orders:
        get:
            description: VIP loan is available for VIP users only.
            operationId: GetLoanVipOngoingOrdersV1
            parameters:
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: collateralAccountId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: loanCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: collateralCoin
                  schema:
                    default: ""
                    type: string
                - description: 'Currently querying page. Start from 1, Default:1, Max: 1000.'
                  in: query
                  name: current
                  schema:
                    format: int64
                    maximum: 1000
                    type: integer
                - description: 'Default: 10, Max: 100'
                  in: query
                  name: limit
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanVipOngoingOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get VIP Loan Ongoing Orders(USER_DATA)
            tags:
                - Vip Loan
    /sapi/v1/loan/vip/renew:
        post:
            description: VIP loan is available for VIP users only.
            operationId: CreateLoanVipRenewV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateLoanVipRenewV1Req'
                description: The request body for CreateLoanVipRenewV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateLoanVipRenewV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: VIP Loan Renew(TRADE)
            tags:
                - Vip Loan
    /sapi/v1/loan/vip/repay:
        post:
            description: VIP loan is available for VIP users only.
            operationId: CreateLoanVipRepayV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateLoanVipRepayV1Req'
                description: The request body for CreateLoanVipRepayV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateLoanVipRepayV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: VIP Loan Repay(TRADE)
            tags:
                - Vip Loan
    /sapi/v1/loan/vip/repay/history:
        get:
            description: GET /sapi/v1/loan/vip/repay/history
            operationId: GetLoanVipRepayHistoryV1
            parameters:
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: loanCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Currently querying page. Start from 1, Default:1, Max: 1000'
                  in: query
                  name: current
                  schema:
                    format: int64
                    maximum: 1000
                    type: integer
                - description: 'Default: 10, Max: 100'
                  in: query
                  name: limit
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanVipRepayHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get VIP Loan Repayment History(USER_DATA)
            tags:
                - Vip Loan
    /sapi/v1/loan/vip/request/data:
        get:
            description: Query Application Status
            operationId: GetLoanVipRequestDataV1
            parameters:
                - description: 'Currently querying page. Start from 1, Default:1, Max: 1000'
                  in: query
                  name: current
                  schema:
                    format: int64
                    maximum: 1000
                    type: integer
                - description: 'Default: 10, Max: 100'
                  in: query
                  name: limit
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanVipRequestDataV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Application Status(USER_DATA)
            tags:
                - Vip Loan
    /sapi/v1/loan/vip/request/interestRate:
        get:
            description: Get Borrow Interest Rate
            operationId: GetLoanVipRequestInterestRateV1
            parameters:
                - description: Max 10 assets, Multiple split by &#34;,&#34;
                  in: query
                  name: loanCoin
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanVipRequestInterestRateV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Borrow Interest Rate(USER_DATA)
            tags:
                - Vip Loan
    /sapi/v1/localentity/broker/deposit/provide-info:
        put:
            description: |-
                Submit questionnaire for brokers of local entities that require travel rule.
                The questionnaire is only applies to transactions from un-hosted wallets or VASPs that are not
                yet onboarded with GTR.
            operationId: UpdateLocalentityBrokerDepositProvideInfoV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UpdateLocalentityBrokerDepositProvideInfoV1Req'
                description: The request body for UpdateLocalentityBrokerDepositProvideInfoV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateLocalentityBrokerDepositProvideInfoV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Submit Deposit Questionnaire (For local entities that require travel rule) (supporting network) (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/localentity/broker/withdraw/apply:
        post:
            description: Submit a withdrawal request for brokers of local entities that required travel rule.
            operationId: CreateLocalentityBrokerWithdrawApplyV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateLocalentityBrokerWithdrawApplyV1Req'
                description: The request body for CreateLocalentityBrokerWithdrawApplyV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateLocalentityBrokerWithdrawApplyV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Broker Withdraw (for brokers of local entities that require travel rule) (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/localentity/deposit/history:
        get:
            description: Fetch deposit history for local entities that required travel rule.
            operationId: GetLocalentityDepositHistoryV1
            parameters:
                - description: Comma(,) separated list of travel rule record Ids.
                  in: query
                  name: trId
                  schema:
                    default: ""
                    type: string
                - description: Comma(,) separated list of transaction Ids.
                  in: query
                  name: txId
                  schema:
                    default: ""
                    type: string
                - description: Comma(,) separated list of wallet tran Ids.
                  in: query
                  name: tranId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: network
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: coin
                  schema:
                    default: ""
                    type: string
                - description: 0:Completed,1:Pending,2:Failed
                  in: query
                  name: travelRuleStatus
                  schema:
                    type: integer
                - description: 'true: Only return records that pending deposit questionnaire. false/not provided: return all records.'
                  in: query
                  name: pendingQuestionnaire
                  schema:
                    type: boolean
                - description: 'Default: 90 days from current timestamp'
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default: present timestamp'
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default:0
                  in: query
                  name: offset
                  schema:
                    type: integer
                - description: Default:1000, Max:1000
                  in: query
                  name: limit
                  schema:
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLocalentityDepositHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Deposit History (for local entities that required travel rule) (supporting network) (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/localentity/deposit/provide-info:
        put:
            description: |-
                Submit questionnaire for local entities that require travel rule.
                The questionnaire is only applies to transactions from unhosted wallets or VASPs that are not
                yet onboarded with GTR.
            operationId: UpdateLocalentityDepositProvideInfoV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UpdateLocalentityDepositProvideInfoV1Req'
                description: The request body for UpdateLocalentityDepositProvideInfoV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateLocalentityDepositProvideInfoV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Submit Deposit Questionnaire (For local entities that require travel rule) (supporting network) (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/localentity/vasp:
        get:
            description: Fetch the onboarded VASP list for local entities that required travel rule.
            operationId: GetLocalentityVaspV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLocalentityVaspV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Onboarded VASP list (for local entities that require travel rule) (supporting network) (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/localentity/withdraw/apply:
        post:
            description: Submit a withdrawal request for local entities that required travel rule.
            operationId: CreateLocalentityWithdrawApplyV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateLocalentityWithdrawApplyV1Req'
                description: The request body for CreateLocalentityWithdrawApplyV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateLocalentityWithdrawApplyV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Withdraw (for local entities that require travel rule) (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/localentity/withdraw/history:
        get:
            description: Fetch withdraw history for local entities that required travel rule.
            operationId: GetLocalentityWithdrawHistoryV1
            parameters:
                - description: Comma(,) separated list of travel rule record Ids.
                  in: query
                  name: trId
                  schema:
                    default: ""
                    type: string
                - description: Comma(,) separated list of transaction Ids.
                  in: query
                  name: txId
                  schema:
                    default: ""
                    type: string
                - description: Comma(,) separated list of withdrawID defined by the client (i.e. client&#39;s internal withdrawID).
                  in: query
                  name: withdrawOrderId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: network
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: coin
                  schema:
                    default: ""
                    type: string
                - description: 0:Completed,1:Pending,2:Failed
                  in: query
                  name: travelRuleStatus
                  schema:
                    type: integer
                - description: 'Default: 0'
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
                - description: 'Default: 1000, Max: 1000'
                  in: query
                  name: limit
                  schema:
                    default: 1000
                    maximum: 1000
                    type: integer
                - description: 'Default: 90 days from current timestamp'
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default: present timestamp'
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLocalentityWithdrawHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Withdraw History (for local entities that require travel rule) (supporting network) (USER_DATA)
            tags:
                - Wallet
    /sapi/v1/managed-subaccount/accountSnapshot:
        get:
            description: Query Managed Sub-account Snapshot
            operationId: GetManagedSubaccountAccountSnapshotV1
            parameters:
                - in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: '&#34;SPOT&#34;, &#34;MARGIN&#34;（cross）, &#34;FUTURES&#34;（UM）'
                  in: query
                  name: type
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: min 7, max 30, default 7
                  in: query
                  name: limit
                  schema:
                    default: 7
                    maximum: 30
                    minimum: 7
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetManagedSubaccountAccountSnapshotV1Resp'
                    description: Successful operation
            summary: Query Managed Sub-account Snapshot(For Investor Master Account)
            tags:
                - Sub Account
    /sapi/v1/managed-subaccount/asset:
        get:
            description: Query Managed Sub-account Asset Details
            operationId: GetManagedSubaccountAssetV1
            parameters:
                - in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetManagedSubaccountAssetV1Resp'
                    description: Successful operation
            summary: Query Managed Sub-account Asset Details(For Investor Master Account)
            tags:
                - Sub Account
    /sapi/v1/managed-subaccount/deposit:
        post:
            description: Deposit Assets Into The Managed Sub-account
            operationId: CreateManagedSubaccountDepositV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateManagedSubaccountDepositV1Req'
                description: The request body for CreateManagedSubaccountDepositV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateManagedSubaccountDepositV1Resp'
                    description: Successful operation
            summary: Deposit Assets Into The Managed Sub-account(For Investor Master Account)
            tags:
                - Sub Account
    /sapi/v1/managed-subaccount/deposit/address:
        get:
            description: Get investor's managed sub-account deposit address.
            operationId: GetManagedSubaccountDepositAddressV1
            parameters:
                - description: Sub user email
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: coin
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: networks can be found in `GET /sapi/v1/capital/deposit/address`
                  in: query
                  name: network
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: amount
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetManagedSubaccountDepositAddressV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Managed Sub-account Deposit Address (For Investor Master Account)(USER_DATA)
            tags:
                - Sub Account
    /sapi/v1/managed-subaccount/fetch-future-asset:
        get:
            description: Investor can use this api to query managed sub account futures asset details
            operationId: GetManagedSubaccountFetchFutureAssetV1
            parameters:
                - description: Managed Sub Account Email
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: No input or input &#34;USDT_FUTURE&#34; to get UM Futures account details. Input &#34;COIN_FUTURE&#34; to get CM Futures account details.
                  in: query
                  name: accountType
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetManagedSubaccountFetchFutureAssetV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Managed Sub-account Futures Asset Details(For Investor Master Account)(USER_DATA)
            tags:
                - Sub Account
    /sapi/v1/managed-subaccount/info:
        get:
            description: Get investor's managed sub-account list.
            operationId: GetManagedSubaccountInfoV1
            parameters:
                - description: Managed sub-account email
                  in: query
                  name: email
                  schema:
                    default: ""
                    type: string
                - description: 'Default value: 1'
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: 'Default value: 20, Max value: 20'
                  in: query
                  name: limit
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetManagedSubaccountInfoV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Managed Sub-account List(For Investor)(USER_DATA)
            tags:
                - Sub Account
    /sapi/v1/managed-subaccount/marginAsset:
        get:
            description: Investor can use this api to query managed sub account margin asset details
            operationId: GetManagedSubaccountMarginAssetV1
            parameters:
                - description: Managed Sub Account Email
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: No input or input &#34;MARGIN&#34; to get Cross Margin account details. Input &#34;ISOLATED_MARGIN&#34; to get Isolated Margin account details.
                  in: query
                  name: accountType
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetManagedSubaccountMarginAssetV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Managed Sub-account Margin Asset Details(For Investor Master Account)(USER_DATA)
            tags:
                - Sub Account
    /sapi/v1/managed-subaccount/query-trans-log:
        get:
            description: Query Managed Sub Account Transfer Log (For Trading Team Sub Account)
            operationId: GetManagedSubaccountQueryTransLogV1
            parameters:
                - description: Start Time
                  in: query
                  name: startTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: End Time (The start time and end time interval cannot exceed half a year)
                  in: query
                  name: endTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: Page
                  in: query
                  name: page
                  required: true
                  schema:
                    type: integer
                - description: 'Limit (Max: 500)'
                  in: query
                  name: limit
                  required: true
                  schema:
                    maximum: 500
                    type: integer
                - description: Transfer Direction (FROM/TO)
                  in: query
                  name: transfers
                  schema:
                    default: ""
                    type: string
                - description: Transfer function account type (SPOT/MARGIN/ISOLATED_MARGIN/USDT_FUTURE/COIN_FUTURE)
                  in: query
                  name: transferFunctionAccountType
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetManagedSubaccountQueryTransLogV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Managed Sub Account Transfer Log (For Trading Team Sub Account)(USER_DATA)
            tags:
                - Sub Account
    /sapi/v1/managed-subaccount/queryTransLogForInvestor:
        get:
            description: |-
                Investor can use this api to query managed sub account transfer log. This endpoint is available for investor of Managed Sub-Account. A Managed Sub-Account is an account type for investors who value flexibility in asset allocation and account application, while delegating trades to a professional trading team.
                Please refer to link
            operationId: GetManagedSubaccountQueryTransLogForInvestorV1
            parameters:
                - description: Managed Sub Account Email
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Start Time
                  in: query
                  name: startTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: End Time (The start time and end time interval cannot exceed half a year)
                  in: query
                  name: endTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: Page
                  in: query
                  name: page
                  required: true
                  schema:
                    type: integer
                - description: 'Limit (Max: 500)'
                  in: query
                  name: limit
                  required: true
                  schema:
                    maximum: 500
                    type: integer
                - description: Transfer Direction (FROM/TO)
                  in: query
                  name: transfers
                  schema:
                    default: ""
                    type: string
                - description: Transfer function account type (SPOT/MARGIN/ISOLATED_MARGIN/USDT_FUTURE/COIN_FUTURE)
                  in: query
                  name: transferFunctionAccountType
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetManagedSubaccountQueryTransLogForInvestorV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Managed Sub Account Transfer Log(For Investor Master Account)(USER_DATA)
            tags:
                - Sub Account
    /sapi/v1/managed-subaccount/queryTransLogForTradeParent:
        get:
            description: |-
                Trading team can use this api to query managed sub account transfer log. This endpoint is available for trading team of Managed Sub-Account. A Managed Sub-Account is an account type for investors who value flexibility in asset allocation and account application, while delegating trades to a professional trading team.
                Please refer to link
            operationId: GetManagedSubaccountQueryTransLogForTradeParentV1
            parameters:
                - description: Managed Sub Account Email
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Start Time
                  in: query
                  name: startTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: End Time (The start time and end time interval cannot exceed half a year)
                  in: query
                  name: endTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: Page
                  in: query
                  name: page
                  required: true
                  schema:
                    type: integer
                - description: 'Limit (Max: 500)'
                  in: query
                  name: limit
                  required: true
                  schema:
                    maximum: 500
                    type: integer
                - description: Transfer Direction (FROM/TO)
                  in: query
                  name: transfers
                  schema:
                    default: ""
                    type: string
                - description: Transfer function account type (SPOT/MARGIN/ISOLATED_MARGIN/USDT_FUTURE/COIN_FUTURE)
                  in: query
                  name: transferFunctionAccountType
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetManagedSubaccountQueryTransLogForTradeParentV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Managed Sub Account Transfer Log(For Trading Team Master Account)(USER_DATA)
            tags:
                - Sub Account
    /sapi/v1/managed-subaccount/withdraw:
        post:
            description: Withdrawl Assets From The Managed Sub-account
            operationId: CreateManagedSubaccountWithdrawV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateManagedSubaccountWithdrawV1Req'
                description: The request body for CreateManagedSubaccountWithdrawV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateManagedSubaccountWithdrawV1Resp'
                    description: Successful operation
            summary: Withdrawl Assets From The Managed Sub-account(For Investor Master Account)
            tags:
                - Sub Account
    /sapi/v1/margin/account:
        get:
            description: Query Cross Margin Account Details
            operationId: GetMarginAccountV1
            parameters:
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginAccountV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Cross Margin Account Details (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/allAssets:
        get:
            description: Get All Margin Assets.
            operationId: GetMarginAllAssetsV1
            parameters:
                - in: query
                  name: asset
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginAllAssetsV1Resp'
                    description: Successful operation
            summary: Get All Margin Assets (MARKET_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/allOrderList:
        get:
            description: Retrieves all OCO for a specific margin account based on provided optional parameters
            operationId: GetMarginAllOrderListV1
            parameters:
                - description: for isolated margin or not, &#34;TRUE&#34;, &#34;FALSE&#34;，default &#34;FALSE&#34;
                  in: query
                  name: isIsolated
                  schema:
                    default: ""
                    type: string
                - description: mandatory for isolated margin, not supported for cross margin
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: If supplied, neither `startTime` or `endTime` can be provided
                  in: query
                  name: fromId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default Value: 500; Max Value: 1000'
                  in: query
                  name: limit
                  schema:
                    type: integer
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginAllOrderListV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Margin Account's all OCO (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/allOrders:
        get:
            description: Query Margin Account's All Orders
            operationId: GetMarginAllOrdersV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: for isolated margin or not, &#34;TRUE&#34;, &#34;FALSE&#34;，default &#34;FALSE&#34;
                  in: query
                  name: isIsolated
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 500; max 500.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 500
                    type: integer
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginAllOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Margin Account's All Orders (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/allPairs:
        get:
            description: Get All Cross Margin Pairs
            operationId: GetMarginAllPairsV1
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginAllPairsV1Resp'
                    description: Successful operation
            summary: Get All Cross Margin Pairs (MARKET_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/api-key-list:
        get:
            description: This only applies to Special Key for Low Latency Trading.
            operationId: GetMarginApiKeyListV1
            parameters:
                - description: isolated margin pair
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginApiKeyListV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Special key List(Low Latency Trading)(TRADE)
            tags:
                - Margin Trading
    /sapi/v1/margin/apiKey:
        delete:
            description: This only applies to Special Key for Low Latency Trading.
            operationId: DeleteMarginApiKeyV1
            parameters:
                - in: query
                  name: apiKey
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: apiName
                  schema:
                    default: ""
                    type: string
                - description: isolated margin pair
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteMarginApiKeyV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Delete Special Key(Low-Latency Trading)(TRADE)
            tags:
                - Margin Trading
        get:
            description: Query Special Key Information.
            operationId: GetMarginApiKeyV1
            parameters:
                - in: query
                  name: apiKey
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: isolated margin pair
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginApiKeyV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Special key(Low Latency Trading)(TRADE)
            tags:
                - Margin Trading
        post:
            description: '**Binance Margin offers low-latency trading through a special key, available exclusively to users with VIP level 4 or higher. **'
            operationId: CreateMarginApiKeyV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateMarginApiKeyV1Req'
                description: The request body for CreateMarginApiKeyV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMarginApiKeyV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Create Special Key(Low-Latency Trading)(TRADE)
            tags:
                - Margin Trading
    /sapi/v1/margin/apiKey/ip:
        put:
            description: Edit ip restriction. This only applies to Special Key for Low Latency Trading.
            operationId: UpdateMarginApiKeyIpV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UpdateMarginApiKeyIpV1Req'
                description: The request body for UpdateMarginApiKeyIpV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateMarginApiKeyIpV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Edit ip for Special Key(Low-Latency Trading)(TRADE)
            tags:
                - Margin Trading
    /sapi/v1/margin/available-inventory:
        get:
            description: Margin available Inventory query
            operationId: GetMarginAvailableInventoryV1
            parameters:
                - description: MARGIN,ISOLATED
                  in: query
                  name: type
                  required: true
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MarginGetMarginAvailableInventoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Margin Available Inventory(USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/borrow-repay:
        get:
            description: Query borrow/repay records in Margin account
            operationId: GetMarginBorrowRepayV1
            parameters:
                - in: query
                  name: asset
                  schema:
                    default: ""
                    type: string
                - description: Symbol in Isolated Margin
                  in: query
                  name: isolatedSymbol
                  schema:
                    default: ""
                    type: string
                - description: '`tranId` in `POST /sapi/v1/margin/loan`'
                  in: query
                  name: txId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Current querying page. Start from 1. Default:1
                  in: query
                  name: current
                  schema:
                    format: int64
                    type: integer
                - description: Default:10 Max:100
                  in: query
                  name: size
                  schema:
                    format: int64
                    type: integer
                - description: '`BORROW` or `REPAY`'
                  in: query
                  name: type
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than 60000
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginBorrowRepayV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query borrow/repay records in Margin account(USER_DATA)
            tags:
                - Margin Trading
        post:
            description: Margin account borrow/repay(MARGIN)
            operationId: CreateMarginBorrowRepayV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateMarginBorrowRepayV1Req'
                description: The request body for CreateMarginBorrowRepayV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMarginBorrowRepayV1Resp'
                    description: Successful operation
            summary: Margin account borrow/repay(MARGIN)
            tags:
                - Margin Trading
    /sapi/v1/margin/capital-flow:
        get:
            description: Query Cross Isolated Margin Capital Flow
            operationId: GetMarginCapitalFlowV1
            parameters:
                - in: query
                  name: asset
                  schema:
                    default: ""
                    type: string
                - description: 查询逐仓数据时必填
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: type
                  schema:
                    default: ""
                    type: string
                - description: 只支持查询最近90天的数据
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 如设置fromId, 将返回id &gt; fromId的数据。否则将返回最新数据
                  in: query
                  name: fromId
                  schema:
                    format: int64
                    type: integer
                - description: 每次返回的数据条数限制。默认 500; 最大 1000.
                  in: query
                  name: limit
                  schema:
                    format: int64
                    type: integer
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginCapitalFlowV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Cross Isolated Margin Capital Flow (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/crossMarginCollateralRatio:
        get:
            description: Cross margin collateral ratio
            operationId: GetMarginCrossMarginCollateralRatioV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginCrossMarginCollateralRatioV1Resp'
                    description: Successful operation
            summary: Cross margin collateral ratio (MARKET_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/crossMarginData:
        get:
            description: Get cross margin fee data collection with any vip level or user's current specific data as https://www.binance.com/en/margin-fee
            operationId: GetMarginCrossMarginDataV1
            parameters:
                - description: User&#39;s current specific margin data will be returned if vipLevel is omitted
                  in: query
                  name: vipLevel
                  schema:
                    type: integer
                - in: query
                  name: coin
                  schema:
                    default: ""
                    type: string
                - description: No more than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginCrossMarginDataV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Cross Margin Fee Data (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/delist-schedule:
        get:
            description: Get tokens or symbols delist schedule for cross margin and isolated margin
            operationId: GetMarginDelistScheduleV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginDelistScheduleV1Resp'
                    description: Successful operation
            summary: Get Delist Schedule (MARKET_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/exchange-small-liability:
        get:
            description: Query the coins which can be small liability exchange
            operationId: GetMarginExchangeSmallLiabilityV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginExchangeSmallLiabilityV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Small Liability Exchange Coin List (USER_DATA)
            tags:
                - Margin Trading
        post:
            description: Small Liability Exchange
            operationId: CreateMarginExchangeSmallLiabilityV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/MarginCreateMarginExchangeSmallLiabilityV1Req'
                description: The request body for MarginCreateMarginExchangeSmallLiabilityV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MarginCreateMarginExchangeSmallLiabilityV1Resp'
                    description: Successful operation
            summary: Small Liability Exchange (MARGIN)
            tags:
                - Margin Trading
    /sapi/v1/margin/exchange-small-liability-history:
        get:
            description: Get Small liability Exchange History
            operationId: GetMarginExchangeSmallLiabilityHistoryV1
            parameters:
                - description: Currently querying page. Start from 1. Default:1
                  in: query
                  name: current
                  required: true
                  schema:
                    type: integer
                - description: Default:10, Max:100
                  in: query
                  name: size
                  required: true
                  schema:
                    type: integer
                - description: 'Default: 30 days from current timestamp'
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default: present timestamp'
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginExchangeSmallLiabilityHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Small Liability Exchange History (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/forceLiquidationRec:
        get:
            description: Get Force Liquidation Record
            operationId: GetMarginForceLiquidationRecV1
            parameters:
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: isolatedSymbol
                  schema:
                    default: ""
                    type: string
                - description: Currently querying page. Start from 1. Default:1
                  in: query
                  name: current
                  schema:
                    format: int64
                    type: integer
                - description: Default:10 Max:100
                  in: query
                  name: size
                  schema:
                    format: int64
                    type: integer
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginForceLiquidationRecV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Force Liquidation Record (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/interestHistory:
        get:
            description: Get Interest History
            operationId: GetMarginInterestHistoryV1
            parameters:
                - in: query
                  name: asset
                  schema:
                    default: ""
                    type: string
                - description: isolated symbol
                  in: query
                  name: isolatedSymbol
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Currently querying page. Start from 1. Default:1
                  in: query
                  name: current
                  schema:
                    format: int64
                    type: integer
                - description: Default:10 Max:100
                  in: query
                  name: size
                  schema:
                    format: int64
                    type: integer
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginInterestHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Interest History (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/interestRateHistory:
        get:
            description: Query Margin Interest Rate History
            operationId: GetMarginInterestRateHistoryV1
            parameters:
                - in: query
                  name: asset
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: 'Default: user&#39;s vip level'
                  in: query
                  name: vipLevel
                  schema:
                    type: integer
                - description: 'Default: 7 days ago'
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default: present. Maximum range: 1 months.'
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: No more than 60000
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginInterestRateHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Margin Interest Rate History (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/isolated/account:
        delete:
            description: |-
                Disable isolated margin account for a specific symbol. Each trading pair can only be deactivated once every 24
                hours.
            operationId: DeleteMarginIsolatedAccountV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: No more than 60000
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteMarginIsolatedAccountV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Disable Isolated Margin Account (TRADE)
            tags:
                - Margin Trading
        get:
            description: Query Isolated Margin Account Info
            operationId: GetMarginIsolatedAccountV1
            parameters:
                - description: Max 5 symbols can be sent; separated by &#34;,&#34;. e.g. &#34;BTCUSDT,BNBUSDT,ADAUSDT&#34;
                  in: query
                  name: symbols
                  schema:
                    default: ""
                    type: string
                - description: No more than 60000
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginIsolatedAccountV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Isolated Margin Account Info (USER_DATA)
            tags:
                - Margin Trading
        post:
            description: Enable isolated margin account for a specific symbol(Only supports activation of previously disabled accounts).
            operationId: CreateMarginIsolatedAccountV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateMarginIsolatedAccountV1Req'
                description: The request body for CreateMarginIsolatedAccountV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMarginIsolatedAccountV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Enable Isolated Margin Account (TRADE)
            tags:
                - Margin Trading
    /sapi/v1/margin/isolated/accountLimit:
        get:
            description: Query enabled isolated margin account limit.
            operationId: GetMarginIsolatedAccountLimitV1
            parameters:
                - description: No more than 60000
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginIsolatedAccountLimitV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Enabled Isolated Margin Account Limit (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/isolated/allPairs:
        get:
            description: Get All Isolated Margin Symbol
            operationId: GetMarginIsolatedAllPairsV1
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: No more than 60000
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginIsolatedAllPairsV1Resp'
                    description: Successful operation
            summary: Get All Isolated Margin Symbol(MARKET_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/isolatedMarginData:
        get:
            description: Get isolated margin fee data collection with any vip level or user's current specific data as https://www.binance.com/en/margin-fee
            operationId: GetMarginIsolatedMarginDataV1
            parameters:
                - description: User&#39;s current specific margin data will be returned if vipLevel is omitted
                  in: query
                  name: vipLevel
                  schema:
                    type: integer
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: No more than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginIsolatedMarginDataV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Isolated Margin Fee Data (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/isolatedMarginTier:
        get:
            description: Get isolated margin tier data collection with any tier as https://www.binance.com/en/margin-data
            operationId: GetMarginIsolatedMarginTierV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: All margin tier data will be returned if tier is omitted
                  in: query
                  name: tier
                  schema:
                    type: integer
                - description: No more than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginIsolatedMarginTierV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Isolated Margin Tier Data (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/leverageBracket:
        get:
            description: Liability Coin Leverage Bracket in Cross Margin Pro Mode
            operationId: GetMarginLeverageBracketV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginLeverageBracketV1Resp'
                    description: Successful operation
            summary: Query Liability Coin Leverage Bracket in Cross Margin Pro Mode(MARKET_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/listen-key:
        delete:
            description: Close out a user data stream.
            operationId: DeleteMarginListenKeyV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteMarginListenKeyV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Close User Data Stream (USER_STREAM)
            tags:
                - Margin Trading
        post:
            description: Start a new user data stream.
            operationId: CreateMarginListenKeyV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMarginListenKeyV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Start User Data Stream (USER_STREAM)
            tags:
                - Margin Trading
        put:
            description: Keepalive a user data stream to prevent a time out.
            operationId: UpdateMarginListenKeyV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UpdateMarginListenKeyV1Req'
                description: The request body for UpdateMarginListenKeyV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateMarginListenKeyV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Keepalive User Data Stream (USER_STREAM)
            tags:
                - Margin Trading
    /sapi/v1/margin/manual-liquidation:
        post:
            description: Margin Manual Liquidation
            operationId: CreateMarginManualLiquidationV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateMarginManualLiquidationV1Req'
                description: The request body for CreateMarginManualLiquidationV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMarginManualLiquidationV1Resp'
                    description: Successful operation
            summary: Margin Manual Liquidation(MARGIN)
            tags:
                - Margin Trading
    /sapi/v1/margin/max-leverage:
        post:
            description: Adjust cross margin max leverage
            operationId: CreateMarginMaxLeverageV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateMarginMaxLeverageV1Req'
                description: The request body for CreateMarginMaxLeverageV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMarginMaxLeverageV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Adjust cross margin max leverage (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/maxBorrowable:
        get:
            description: Query Max Borrow
            operationId: GetMarginMaxBorrowableV1
            parameters:
                - in: query
                  name: asset
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: isolated symbol
                  in: query
                  name: isolatedSymbol
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginMaxBorrowableV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Max Borrow (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/maxTransferable:
        get:
            description: Query Max Transfer-Out Amount
            operationId: GetMarginMaxTransferableV1
            parameters:
                - in: query
                  name: asset
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: isolated symbol
                  in: query
                  name: isolatedSymbol
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginMaxTransferableV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Max Transfer-Out Amount (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/myTrades:
        get:
            description: Query Margin Account's Trade List
            operationId: GetMarginMyTradesV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: for isolated margin or not, &#34;TRUE&#34;, &#34;FALSE&#34;，default &#34;FALSE&#34;
                  in: query
                  name: isIsolated
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: TradeId to fetch from. Default gets most recent trades.
                  in: query
                  name: fromId
                  schema:
                    format: int64
                    type: integer
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginMyTradesV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Margin Account's Trade List (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/next-hourly-interest-rate:
        get:
            description: Get future hourly interest rate
            operationId: GetMarginNextHourlyInterestRateV1
            parameters:
                - description: List of assets, separated by commas, up to 20
                  in: query
                  name: assets
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: for isolated margin or not, &#34;TRUE&#34;, &#34;FALSE&#34;
                  in: query
                  name: isIsolated
                  required: true
                  schema:
                    type: boolean
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginNextHourlyInterestRateV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get future hourly interest rate (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/openOrderList:
        get:
            description: Query Margin Account's Open OCO
            operationId: GetMarginOpenOrderListV1
            parameters:
                - description: for isolated margin or not, &#34;TRUE&#34;, &#34;FALSE&#34;，default &#34;FALSE&#34;
                  in: query
                  name: isIsolated
                  schema:
                    default: ""
                    type: string
                - description: mandatory for isolated margin, not supported for cross margin
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginOpenOrderListV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Margin Account's Open OCO (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/openOrders:
        delete:
            description: |-
                Cancels all active orders on a symbol for margin account.
                This includes OCO orders.
            operationId: DeleteMarginOpenOrdersV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: for isolated margin or not, &#34;TRUE&#34;, &#34;FALSE&#34;，default &#34;FALSE&#34;
                  in: query
                  name: isIsolated
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteMarginOpenOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Margin Account Cancel all Open Orders on a Symbol (TRADE)
            tags:
                - Margin Trading
        get:
            description: Query Margin Account's Open Orders
            operationId: GetMarginOpenOrdersV1
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: for isolated margin or not, &#34;TRUE&#34;, &#34;FALSE&#34;，default &#34;FALSE&#34;
                  in: query
                  name: isIsolated
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MarginGetMarginOpenOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Margin Account's Open Orders (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/order:
        delete:
            description: Cancel an active order for margin account.
            operationId: DeleteMarginOrderV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: for isolated margin or not, &#34;TRUE&#34;, &#34;FALSE&#34;，default &#34;FALSE&#34;
                  in: query
                  name: isIsolated
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: origClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: Used to uniquely identify this cancel. Automatically generated by default.
                  in: query
                  name: newClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteMarginOrderV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Margin Account Cancel Order (TRADE)
            tags:
                - Margin Trading
        get:
            description: Query Margin Account's Order
            operationId: GetMarginOrderV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: for isolated margin or not, &#34;TRUE&#34;, &#34;FALSE&#34;，default &#34;FALSE&#34;
                  in: query
                  name: isIsolated
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: origClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginOrderV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Margin Account's Order (USER_DATA)
            tags:
                - Margin Trading
        post:
            description: Post a new order for margin account.
            operationId: CreateMarginOrderV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/MarginCreateMarginOrderV1Req'
                description: The request body for MarginCreateMarginOrderV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MarginCreateMarginOrderV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Margin Account New Order (TRADE)
            tags:
                - Margin Trading
    /sapi/v1/margin/order/oco:
        post:
            description: Send in a new OCO for a margin account
            operationId: CreateMarginOrderOcoV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateMarginOrderOcoV1Req'
                description: The request body for CreateMarginOrderOcoV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMarginOrderOcoV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Margin Account New OCO (TRADE)
            tags:
                - Margin Trading
    /sapi/v1/margin/order/oto:
        post:
            description: 'Post a new OTO order for margin account:'
            operationId: CreateMarginOrderOtoV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateMarginOrderOtoV1Req'
                description: The request body for CreateMarginOrderOtoV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMarginOrderOtoV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Margin Account New OTO (TRADE)
            tags:
                - Margin Trading
    /sapi/v1/margin/order/otoco:
        post:
            description: Post a new OTOCO order for margin account：
            operationId: CreateMarginOrderOtocoV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateMarginOrderOtocoV1Req'
                description: The request body for CreateMarginOrderOtocoV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMarginOrderOtocoV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Margin Account New OTOCO (TRADE)
            tags:
                - Margin Trading
    /sapi/v1/margin/orderList:
        delete:
            description: Cancel an entire Order List for a margin account.
            operationId: DeleteMarginOrderListV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: for isolated margin or not, &#34;TRUE&#34;, &#34;FALSE&#34;，default &#34;FALSE&#34;
                  in: query
                  name: isIsolated
                  schema:
                    default: ""
                    type: string
                - description: Either `orderListId` or `listClientOrderId` must be provided
                  in: query
                  name: orderListId
                  schema:
                    format: int64
                    type: integer
                - description: Either `orderListId` or `listClientOrderId` must be provided
                  in: query
                  name: listClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: Used to uniquely identify this cancel. Automatically generated by default
                  in: query
                  name: newClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteMarginOrderListV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Margin Account Cancel OCO (TRADE)
            tags:
                - Margin Trading
        get:
            description: Retrieves a specific OCO based on provided optional parameters
            operationId: GetMarginOrderListV1
            parameters:
                - description: for isolated margin or not, &#34;TRUE&#34;, &#34;FALSE&#34;，default &#34;FALSE&#34;
                  in: query
                  name: isIsolated
                  schema:
                    default: ""
                    type: string
                - description: mandatory for isolated margin, not supported for cross margin
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: Either `orderListId` or `origClientOrderId` must be provided
                  in: query
                  name: orderListId
                  schema:
                    format: int64
                    type: integer
                - description: Either `orderListId` or `origClientOrderId` must be provided
                  in: query
                  name: origClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginOrderListV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Margin Account's OCO (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/priceIndex:
        get:
            description: Query Margin PriceIndex
            operationId: GetMarginPriceIndexV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginPriceIndexV1Resp'
                    description: Successful operation
            summary: Query Margin PriceIndex (MARKET_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/rateLimit/order:
        get:
            description: Displays the user's current margin order count usage for all intervals.
            operationId: GetMarginRateLimitOrderV1
            parameters:
                - description: for isolated margin or not, &#34;TRUE&#34;, &#34;FALSE&#34;，default &#34;FALSE&#34;
                  in: query
                  name: isIsolated
                  schema:
                    default: ""
                    type: string
                - description: isolated symbol, mandatory for isolated margin
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginRateLimitOrderV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Current Margin Order Count Usage (TRADE)
            tags:
                - Margin Trading
    /sapi/v1/margin/tradeCoeff:
        get:
            description: Get personal margin level information
            operationId: GetMarginTradeCoeffV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginTradeCoeffV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Summary of Margin account (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/margin/transfer:
        get:
            description: Get Cross Margin Transfer History
            operationId: GetMarginTransferV1
            parameters:
                - in: query
                  name: asset
                  schema:
                    default: ""
                    type: string
                - description: 'Transfer Type: ROLL_IN, ROLL_OUT'
                  in: query
                  name: type
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Currently querying page. Start from 1. Default:1
                  in: query
                  name: current
                  schema:
                    format: int64
                    type: integer
                - description: Default:10 Max:100
                  in: query
                  name: size
                  schema:
                    format: int64
                    type: integer
                - description: Symbol in Isolated Margin
                  in: query
                  name: isolatedSymbol
                  schema:
                    default: ""
                    type: string
                - description: The value cannot be greater than `60000`
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMarginTransferV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Cross Margin Transfer History (USER_DATA)
            tags:
                - Margin Trading
    /sapi/v1/mining/hash-transfer/config:
        post:
            description: Hashrate Resale Request
            operationId: CreateMiningHashTransferConfigV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateMiningHashTransferConfigV1Req'
                description: The request body for CreateMiningHashTransferConfigV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMiningHashTransferConfigV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Hashrate Resale Request(USER_DATA)
            tags:
                - Mining
    /sapi/v1/mining/hash-transfer/config/cancel:
        post:
            operationId: CreateMiningHashTransferConfigCancelV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateMiningHashTransferConfigCancelV1Req'
                description: The request body for CreateMiningHashTransferConfigCancelV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMiningHashTransferConfigCancelV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Cancel hashrate resale configuration(USER_DATA)
            tags:
                - Mining
    /sapi/v1/mining/hash-transfer/config/details/list:
        get:
            description: Hashrate Resale List
            operationId: GetMiningHashTransferConfigDetailsListV1
            parameters:
                - description: Page number, empty default first page, starting from 1
                  in: query
                  name: pageIndex
                  schema:
                    type: integer
                - description: Number of pages, minimum 10, maximum 200
                  in: query
                  name: pageSize
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMiningHashTransferConfigDetailsListV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Hashrate Resale List (USER_DATA)
            tags:
                - Mining
    /sapi/v1/mining/hash-transfer/profit/details:
        get:
            description: Hashrate Resale Detail(USER_DATA)
            operationId: GetMiningHashTransferProfitDetailsV1
            parameters:
                - description: Mining ID
                  in: query
                  name: configId
                  required: true
                  schema:
                    type: integer
                - description: Mining Account
                  in: query
                  name: userName
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Page number, empty default first page, starting from 1
                  in: query
                  name: pageIndex
                  schema:
                    type: integer
                - description: Number of pages, minimum 10, maximum 200
                  in: query
                  name: pageSize
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMiningHashTransferProfitDetailsV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Hashrate Resale Detail(USER_DATA)
            tags:
                - Mining
    /sapi/v1/mining/payment/list:
        get:
            description: Query Earnings List
            operationId: GetMiningPaymentListV1
            parameters:
                - description: Transfer algorithm(sha256)
                  in: query
                  name: algo
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Mining account
                  in: query
                  name: userName
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Coin name
                  in: query
                  name: coin
                  schema:
                    default: ""
                    type: string
                - description: Search date, millisecond timestamp, while empty query all
                  in: query
                  name: startDate
                  schema:
                    format: int64
                    type: integer
                - description: Search date, millisecond timestamp, while empty query all
                  in: query
                  name: endDate
                  schema:
                    format: int64
                    type: integer
                - description: Page number, empty default first page, starting from 1
                  in: query
                  name: pageIndex
                  schema:
                    type: integer
                - description: Number of pages, minimum 10, maximum 200
                  in: query
                  name: pageSize
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMiningPaymentListV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Earnings List(USER_DATA)
            tags:
                - Mining
    /sapi/v1/mining/payment/other:
        get:
            description: Extra Bonus List
            operationId: GetMiningPaymentOtherV1
            parameters:
                - description: Transfer algorithm(sha256)
                  in: query
                  name: algo
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Mining Account
                  in: query
                  name: userName
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Coin Name
                  in: query
                  name: coin
                  schema:
                    default: ""
                    type: string
                - description: Search date, millisecond timestamp, while empty query all
                  in: query
                  name: startDate
                  schema:
                    format: int64
                    type: integer
                - description: Search date, millisecond timestamp, while empty query all
                  in: query
                  name: endDate
                  schema:
                    format: int64
                    type: integer
                - description: Page number, empty default first page, starting from 1
                  in: query
                  name: pageIndex
                  schema:
                    type: integer
                - description: Number of pages, minimum 10, maximum 200
                  in: query
                  name: pageSize
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMiningPaymentOtherV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Extra Bonus List(USER_DATA)
            tags:
                - Mining
    /sapi/v1/mining/payment/uid:
        get:
            description: Mining Account Earning
            operationId: GetMiningPaymentUidV1
            parameters:
                - description: Algorithm(sha256)
                  in: query
                  name: algo
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Millisecond timestamp
                  in: query
                  name: startDate
                  schema:
                    format: int64
                    type: integer
                - description: Millisecond timestamp
                  in: query
                  name: endDate
                  schema:
                    format: int64
                    type: integer
                - description: Default 1
                  in: query
                  name: pageIndex
                  schema:
                    default: 1
                    type: integer
                - description: Min 10,Max 200
                  in: query
                  name: pageSize
                  schema:
                    maximum: 200
                    minimum: 10
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMiningPaymentUidV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Mining Account Earning(USER_DATA)
            tags:
                - Mining
    /sapi/v1/mining/pub/algoList:
        get:
            description: Acquiring Algorithm
            operationId: GetMiningPubAlgoListV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMiningPubAlgoListV1Resp'
                    description: Successful operation
            summary: Acquiring Algorithm(MARKET_DATA)
            tags:
                - Mining
    /sapi/v1/mining/pub/coinList:
        get:
            description: Acquiring CoinName
            operationId: GetMiningPubCoinListV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMiningPubCoinListV1Resp'
                    description: Successful operation
            summary: Acquiring CoinName(MARKET_DATA)
            tags:
                - Mining
    /sapi/v1/mining/statistics/user/list:
        get:
            description: Query Account List
            operationId: GetMiningStatisticsUserListV1
            parameters:
                - description: Algorithm(sha256)
                  in: query
                  name: algo
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Mining account
                  in: query
                  name: userName
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMiningStatisticsUserListV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Account List(USER_DATA)
            tags:
                - Mining
    /sapi/v1/mining/statistics/user/status:
        get:
            description: Statistic List
            operationId: GetMiningStatisticsUserStatusV1
            parameters:
                - description: Algorithm(sha256)
                  in: query
                  name: algo
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Mining account
                  in: query
                  name: userName
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMiningStatisticsUserStatusV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Statistic List(USER_DATA)
            tags:
                - Mining
    /sapi/v1/mining/worker/detail:
        get:
            description: Request for Detail Miner List
            operationId: GetMiningWorkerDetailV1
            parameters:
                - description: Algorithm(sha256)
                  in: query
                  name: algo
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Mining account
                  in: query
                  name: userName
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Miner’s name(required)
                  in: query
                  name: workerName
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMiningWorkerDetailV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Request for Detail Miner List(USER_DATA)
            tags:
                - Mining
    /sapi/v1/mining/worker/list:
        get:
            description: Request for Miner List
            operationId: GetMiningWorkerListV1
            parameters:
                - description: Algorithm(sha256)
                  in: query
                  name: algo
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Mining account
                  in: query
                  name: userName
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Page number，default is first page，start form 1
                  in: query
                  name: pageIndex
                  schema:
                    type: integer
                - description: sort sequence(default=0)0 positive sequence，1 negative sequence
                  in: query
                  name: sort
                  schema:
                    type: integer
                - description: 'Sort by( default 1): <br/><br/>1: miner name, <br/><br/>2: real-time computing power, <br/><br/>3: daily average computing power, <br/><br/>4: real-time rejection rate, <br/><br/>5: last submission time'
                  in: query
                  name: sortColumn
                  schema:
                    default: 1
                    type: integer
                - description: miners status(default=0),0 all，1 valid，2 invalid，3 failure
                  in: query
                  name: workerStatus
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMiningWorkerListV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Request for Miner List(USER_DATA)
            tags:
                - Mining
    /sapi/v1/portfolio/account:
        get:
            description: Get Portfolio Margin Pro Account Info
            operationId: GetPortfolioAccountV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPortfolioAccountV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Portfolio Margin Pro Account Info(USER_DATA)
            tags:
                - Portfolio Margin Pro
    /sapi/v1/portfolio/asset-collection:
        post:
            description: Transfers specific asset from Futures Account to Margin account
            operationId: CreatePortfolioAssetCollectionV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreatePortfolioAssetCollectionV1Req'
                description: The request body for CreatePortfolioAssetCollectionV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePortfolioAssetCollectionV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Fund Collection by Asset(USER_DATA)
            tags:
                - Portfolio Margin Pro
    /sapi/v1/portfolio/asset-index-price:
        get:
            description: Query Portfolio Margin Asset Index Price
            operationId: GetPortfolioAssetIndexPriceV1
            parameters:
                - in: query
                  name: asset
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPortfolioAssetIndexPriceV1Resp'
                    description: Successful operation
            summary: Query Portfolio Margin Asset Index Price (MARKET_DATA)
            tags:
                - Portfolio Margin Pro
    /sapi/v1/portfolio/auto-collection:
        post:
            description: Transfers all assets from Futures Account to Margin account
            operationId: CreatePortfolioAutoCollectionV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreatePortfolioAutoCollectionV1Req'
                description: The request body for CreatePortfolioAutoCollectionV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePortfolioAutoCollectionV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Fund Auto-collection(USER_DATA)
            tags:
                - Portfolio Margin Pro
    /sapi/v1/portfolio/balance:
        get:
            description: Query Portfolio Margin Pro account balance
            operationId: GetPortfolioBalanceV1
            parameters:
                - in: query
                  name: asset
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPortfolioBalanceV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Portfolio Margin Pro Account Balance(USER_DATA)
            tags:
                - Portfolio Margin Pro
    /sapi/v1/portfolio/bnb-transfer:
        post:
            description: BNB transfer can be between Margin Account and USDM Account
            operationId: CreatePortfolioBnbTransferV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreatePortfolioBnbTransferV1Req'
                description: The request body for CreatePortfolioBnbTransferV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePortfolioBnbTransferV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: BNB transfer(USER_DATA)
            tags:
                - Portfolio Margin Pro
    /sapi/v1/portfolio/collateralRate:
        get:
            description: Portfolio Margin Collateral Rate
            operationId: GetPortfolioCollateralRateV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPortfolioCollateralRateV1Resp'
                    description: Successful operation
            summary: Portfolio Margin Collateral Rate(MARKET_DATA)
            tags:
                - Portfolio Margin Pro
    /sapi/v1/portfolio/interest-history:
        get:
            description: Query interest history of negative balance for portfolio margin.
            operationId: GetPortfolioInterestHistoryV1
            parameters:
                - in: query
                  name: asset
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default:10 Max:100
                  in: query
                  name: size
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPortfolioInterestHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Portfolio Margin Pro Negative Balance Interest History(USER_DATA)
            tags:
                - Portfolio Margin Pro
    /sapi/v1/portfolio/margin-asset-leverage:
        get:
            description: Get Portfolio Margin Asset Leverage
            operationId: GetPortfolioMarginAssetLeverageV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPortfolioMarginAssetLeverageV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Portfolio Margin Asset Leverage(USER_DATA)
            tags:
                - Portfolio Margin Pro
    /sapi/v1/portfolio/mint:
        post:
            description: Mint BFUSD for all types of Portfolio Margin account
            operationId: CreatePortfolioMintV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreatePortfolioMintV1Req'
                description: The request body for CreatePortfolioMintV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePortfolioMintV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Mint BFUSD for Portfolio Margin(TRADE)
            tags:
                - Portfolio Margin Pro
    /sapi/v1/portfolio/pmLoan:
        get:
            description: Query Portfolio Margin Pro Bankruptcy Loan Amount
            operationId: GetPortfolioPmLoanV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPortfolioPmLoanV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Portfolio Margin Pro Bankruptcy Loan Amount(USER_DATA)
            tags:
                - Portfolio Margin Pro
    /sapi/v1/portfolio/pmLoan-history:
        get:
            description: Query repay history of pmloan for portfolio margin pro.
            operationId: GetPortfolioPmLoanHistoryV1
            parameters:
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Currently querying page. Start from 1. Default:1
                  in: query
                  name: current
                  schema:
                    format: int64
                    type: integer
                - description: Default:10 Max:100
                  in: query
                  name: size
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPortfolioPmLoanHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Portfolio Margin Pro Bankruptcy Loan Repay History(USER_DATA)
            tags:
                - Portfolio Margin Pro
    /sapi/v1/portfolio/redeem:
        post:
            description: Redeem BFUSD for all types of Portfolio Margin account
            operationId: CreatePortfolioRedeemV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreatePortfolioRedeemV1Req'
                description: The request body for CreatePortfolioRedeemV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePortfolioRedeemV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Redeem BFUSD for Portfolio Margin(TRADE)
            tags:
                - Portfolio Margin Pro
    /sapi/v1/portfolio/repay:
        post:
            description: Repay Portfolio Margin Pro Bankruptcy Loan
            operationId: CreatePortfolioRepayV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreatePortfolioRepayV1Req'
                description: The request body for CreatePortfolioRepayV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePortfolioRepayV1Resp'
                    description: Successful operation
            summary: Portfolio Margin Pro Bankruptcy Loan Repay
            tags:
                - Portfolio Margin Pro
    /sapi/v1/portfolio/repay-futures-negative-balance:
        post:
            description: Repay futures Negative Balance
            operationId: CreatePortfolioRepayFuturesNegativeBalanceV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreatePortfolioRepayFuturesNegativeBalanceV1Req'
                description: The request body for CreatePortfolioRepayFuturesNegativeBalanceV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePortfolioRepayFuturesNegativeBalanceV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Repay futures Negative Balance(USER_DATA)
            tags:
                - Portfolio Margin Pro
    /sapi/v1/portfolio/repay-futures-switch:
        get:
            description: Query Auto-repay-futures Status
            operationId: GetPortfolioRepayFuturesSwitchV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPortfolioRepayFuturesSwitchV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Auto-repay-futures Status(USER_DATA)
            tags:
                - Portfolio Margin Pro
        post:
            description: Change Auto-repay-futures Status
            operationId: CreatePortfolioRepayFuturesSwitchV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreatePortfolioRepayFuturesSwitchV1Req'
                description: The request body for CreatePortfolioRepayFuturesSwitchV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePortfolioRepayFuturesSwitchV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Change Auto-repay-futures Status(TRADE)
            tags:
                - Portfolio Margin Pro
    /sapi/v1/sol-staking/account:
        get:
            description: SOL Staking account
            operationId: GetSolStakingAccountV1
            parameters:
                - description: The value cannot be greater than 60000
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSolStakingAccountV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: SOL Staking account(USER_DATA)
            tags:
                - Staking
    /sapi/v1/sol-staking/sol/claim:
        post:
            description: Claim Boost APR Airdrop Rewards
            operationId: CreateSolStakingSolClaimV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateSolStakingSolClaimV1Req'
                description: The request body for CreateSolStakingSolClaimV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSolStakingSolClaimV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Claim Boost Rewards(TRADE)
            tags:
                - Staking
    /sapi/v1/sol-staking/sol/history/bnsolRewardsHistory:
        get:
            description: Get BNSOL rewards history
            operationId: GetSolStakingSolHistoryBnsolRewardsHistoryV1
            parameters:
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Currently querying page. Start from 1. Default: 1'
                  in: query
                  name: current
                  schema:
                    default: 1
                    format: int64
                    type: integer
                - description: 'Default: 10, Max: 100'
                  in: query
                  name: size
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSolStakingSolHistoryBnsolRewardsHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get BNSOL rewards history(USER_DATA)
            tags:
                - Staking
    /sapi/v1/sol-staking/sol/history/boostRewardsHistory:
        get:
            description: Get Boost rewards history
            operationId: GetSolStakingSolHistoryBoostRewardsHistoryV1
            parameters:
                - description: '&#34;CLAIM&#34;, &#34;DISTRIBUTE&#34;, default &#34;CLAIM&#34;'
                  in: query
                  name: type
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Currently querying page. Start from 1. Default: 1'
                  in: query
                  name: current
                  schema:
                    default: 1
                    format: int64
                    type: integer
                - description: 'Default: 10, Max: 100'
                  in: query
                  name: size
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSolStakingSolHistoryBoostRewardsHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Boost Rewards History(USER_DATA)
            tags:
                - Staking
    /sapi/v1/sol-staking/sol/history/rateHistory:
        get:
            description: Get BNSOL Rate History
            operationId: GetSolStakingSolHistoryRateHistoryV1
            parameters:
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Currently querying page. Start from 1. Default:1
                  in: query
                  name: current
                  schema:
                    format: int64
                    type: integer
                - description: Default:10, Max:100
                  in: query
                  name: size
                  schema:
                    format: int64
                    type: integer
                - description: The value cannot be greater than 60000
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSolStakingSolHistoryRateHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get BNSOL Rate History(USER_DATA)
            tags:
                - Staking
    /sapi/v1/sol-staking/sol/history/redemptionHistory:
        get:
            description: Get SOL redemption history
            operationId: GetSolStakingSolHistoryRedemptionHistoryV1
            parameters:
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Currently querying page. Start from 1. Default: 1'
                  in: query
                  name: current
                  schema:
                    default: 1
                    format: int64
                    type: integer
                - description: 'Default: 10, Max: 100'
                  in: query
                  name: size
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSolStakingSolHistoryRedemptionHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get SOL redemption history(USER_DATA)
            tags:
                - Staking
    /sapi/v1/sol-staking/sol/history/stakingHistory:
        get:
            description: Get SOL staking history
            operationId: GetSolStakingSolHistoryStakingHistoryV1
            parameters:
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Currently querying page. Start from 1. Default: 1'
                  in: query
                  name: current
                  schema:
                    default: 1
                    format: int64
                    type: integer
                - description: 'Default: 10, Max: 100'
                  in: query
                  name: size
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSolStakingSolHistoryStakingHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get SOL staking history(USER_DATA)
            tags:
                - Staking
    /sapi/v1/sol-staking/sol/history/unclaimedRewards:
        get:
            description: Get Unclaimed rewards
            operationId: GetSolStakingSolHistoryUnclaimedRewardsV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSolStakingSolHistoryUnclaimedRewardsV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Unclaimed Rewards(USER_DATA)
            tags:
                - Staking
    /sapi/v1/sol-staking/sol/quota:
        get:
            description: Get SOL staking quota
            operationId: GetSolStakingSolQuotaV1
            parameters:
                - description: The value cannot be greater than 60000
                  in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSolStakingSolQuotaV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get SOL staking quota details(USER_DATA)
            tags:
                - Staking
    /sapi/v1/sol-staking/sol/redeem:
        post:
            description: Redeem BNSOL get SOL
            operationId: CreateSolStakingSolRedeemV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateSolStakingSolRedeemV1Req'
                description: The request body for CreateSolStakingSolRedeemV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSolStakingSolRedeemV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Redeem SOL(TRADE)
            tags:
                - Staking
    /sapi/v1/sol-staking/sol/stake:
        post:
            description: Subscribe SOL Staking
            operationId: CreateSolStakingSolStakeV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateSolStakingSolStakeV1Req'
                description: The request body for CreateSolStakingSolStakeV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSolStakingSolStakeV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Subscribe SOL Staking(TRADE)
            tags:
                - Staking
    /sapi/v1/spot/delist-schedule:
        get:
            description: Get symbols delist schedule for spot
            operationId: GetSpotDelistScheduleV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSpotDelistScheduleV1Resp'
                    description: Successful operation
            summary: Get Spot Delist Schedule (MARKET_DATA)
            tags:
                - Wallet
    /sapi/v1/spot/open-symbol-list:
        get:
            description: Get the list of symbols that are scheduled to be opened for trading in the market.
            operationId: GetSpotOpenSymbolListV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSpotOpenSymbolListV1Resp'
                    description: Successful operation
            summary: Get Open Symbol List (MARKET_DATA)
            tags:
                - Wallet
    /sapi/v1/sub-account/blvt/enable:
        post:
            description: Enable Leverage Token for Sub-account
            operationId: CreateSubAccountBlvtEnableV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateSubAccountBlvtEnableV1Req'
                description: The request body for CreateSubAccountBlvtEnableV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSubAccountBlvtEnableV1Resp'
                    description: Successful operation
            summary: Enable Leverage Token for Sub-account(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/eoptions/enable:
        post:
            description: Enable Options for Sub-account (For Master Account).
            operationId: CreateSubAccountEoptionsEnableV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateSubAccountEoptionsEnableV1Req'
                description: The request body for CreateSubAccountEoptionsEnableV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSubAccountEoptionsEnableV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Enable Options for Sub-account(For Master Account)(USER_DATA)
            tags:
                - Sub Account
    /sapi/v1/sub-account/futures/account:
        get:
            description: Get Detail on Sub-account's Futures Account
            operationId: GetSubAccountFuturesAccountV1
            parameters:
                - description: <a href="/docs/sub_account/asset-management/Get-Detail-on-Sub-accounts-Futures-Account#email-address">Sub-account email</a>
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountFuturesAccountV1Resp'
                    description: Successful operation
            summary: Get Detail on Sub-account's Futures Account(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/futures/accountSummary:
        get:
            description: Get Summary of Sub-account's Futures Account
            operationId: GetSubAccountFuturesAccountSummaryV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountFuturesAccountSummaryV1Resp'
                    description: Successful operation
            summary: Get Summary of Sub-account's Futures Account(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/futures/enable:
        post:
            description: Enable Futures for Sub-account for Master Account
            operationId: CreateSubAccountFuturesEnableV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateSubAccountFuturesEnableV1Req'
                description: The request body for CreateSubAccountFuturesEnableV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSubAccountFuturesEnableV1Resp'
                    description: Successful operation
            summary: Enable Futures for Sub-account(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/futures/internalTransfer:
        get:
            description: Query Sub-account Futures Asset Transfer History
            operationId: GetSubAccountFuturesInternalTransferV1
            parameters:
                - description: <a href="/docs/sub_account/asset-management/Query-Sub-account-Futures-Asset-Transfer-History#email-address">Sub-account email</a>
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: '1:USDT-margined Futures，2: Coin-margined Futures'
                  in: query
                  name: futuresType
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: Cannot be earlier than 1 month ago
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default value: 1'
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: 'Default value: 50, Max value: 500'
                  in: query
                  name: limit
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountFuturesInternalTransferV1Resp'
                    description: Successful operation
            summary: Query Sub-account Futures Asset Transfer History(For Master Account)
            tags:
                - Sub Account
        post:
            description: Sub-account Futures Asset Transfer
            operationId: CreateSubAccountFuturesInternalTransferV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateSubAccountFuturesInternalTransferV1Req'
                description: The request body for CreateSubAccountFuturesInternalTransferV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSubAccountFuturesInternalTransferV1Resp'
                    description: Successful operation
            summary: Sub-account Futures Asset Transfer(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/futures/move-position:
        get:
            description: Query move position history
            operationId: GetSubAccountFuturesMovePositionV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: page
                  required: true
                  schema:
                    type: integer
                - in: query
                  name: row
                  required: true
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountFuturesMovePositionV1Resp'
                    description: Successful operation
            summary: Get Move Position History for Sub-account (For Master Account)
            tags:
                - Sub Account
        post:
            description: Move position between sub-master, master-sub, or sub-sub accounts when necessary
            operationId: CreateSubAccountFuturesMovePositionV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateSubAccountFuturesMovePositionV1Req'
                description: The request body for CreateSubAccountFuturesMovePositionV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSubAccountFuturesMovePositionV1Resp'
                    description: Successful operation
            summary: Move Position for Sub-account (For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/futures/positionRisk:
        get:
            description: Get Futures Position-Risk of Sub-account
            operationId: GetSubAccountFuturesPositionRiskV1
            parameters:
                - description: <a href="/docs/sub_account/account-management/Get-Futures-Position-Risk-of-Sub-account#email-address">Sub-account email</a>
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountFuturesPositionRiskV1Resp'
                    description: Successful operation
            summary: Get Futures Position-Risk of Sub-account(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/futures/transfer:
        post:
            description: Futures Transfer for Sub-account
            operationId: CreateSubAccountFuturesTransferV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateSubAccountFuturesTransferV1Req'
                description: The request body for CreateSubAccountFuturesTransferV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSubAccountFuturesTransferV1Resp'
                    description: Successful operation
            summary: Futures Transfer for Sub-account(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/list:
        get:
            description: Query Sub-account List
            operationId: GetSubAccountListV1
            parameters:
                - description: <a href="/docs/sub_account/account-management/Query-Sub-account-List#email-address">Sub-account email</a>
                  in: query
                  name: email
                  schema:
                    default: ""
                    type: string
                - description: true or false
                  in: query
                  name: isFreeze
                  schema:
                    default: ""
                    type: string
                - description: 'Default value: 1'
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: 'Default value: 1, Max value: 200'
                  in: query
                  name: limit
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountListV1Resp'
                    description: Successful operation
            summary: Query Sub-account List(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/margin/account:
        get:
            description: Get Detail on Sub-account's Margin Account
            operationId: GetSubAccountMarginAccountV1
            parameters:
                - description: <a href="/docs/sub_account/asset-management/Get-Detail-on-Sub-accounts-Margin-Account#email-address">Sub-account email</a>
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountMarginAccountV1Resp'
                    description: Successful operation
            summary: Get Detail on Sub-account's Margin Account(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/margin/accountSummary:
        get:
            description: Get Summary of Sub-account's Margin Account
            operationId: GetSubAccountMarginAccountSummaryV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountMarginAccountSummaryV1Resp'
                    description: Successful operation
            summary: Get Summary of Sub-account's Margin Account(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/margin/enable:
        post:
            description: Enable Margin for Sub-account
            operationId: CreateSubAccountMarginEnableV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateSubAccountMarginEnableV1Req'
                description: The request body for CreateSubAccountMarginEnableV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSubAccountMarginEnableV1Resp'
                    description: Successful operation
            summary: Enable Margin for Sub-account(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/margin/transfer:
        post:
            description: Margin Transfer for Sub-account
            operationId: CreateSubAccountMarginTransferV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateSubAccountMarginTransferV1Req'
                description: The request body for CreateSubAccountMarginTransferV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSubAccountMarginTransferV1Resp'
                    description: Successful operation
            summary: Margin Transfer for Sub-account(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/spotSummary:
        get:
            description: Get BTC valued asset summary of subaccounts.
            operationId: GetSubAccountSpotSummaryV1
            parameters:
                - description: Sub account email
                  in: query
                  name: email
                  schema:
                    default: ""
                    type: string
                - description: default 1
                  in: query
                  name: page
                  schema:
                    default: 1
                    format: int64
                    type: integer
                - description: default 10, max 20
                  in: query
                  name: size
                  schema:
                    default: 10
                    format: int64
                    maximum: 20
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountSpotSummaryV1Resp'
                    description: Successful operation
            summary: Query Sub-account Spot Assets Summary(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/status:
        get:
            description: Get Sub-account's Status on Margin Or Futures
            operationId: GetSubAccountStatusV1
            parameters:
                - description: <a href="/docs/sub_account/account-management/Get-Sub-accounts-Status-on-Margin-Or-Futures#email-address">Sub-account email</a>
                  in: query
                  name: email
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountStatusV1Resp'
                    description: Successful operation
            summary: Get Sub-account's Status on Margin Or Futures(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/sub/transfer/history:
        get:
            description: Query Sub-account Spot Asset Transfer History
            operationId: GetSubAccountSubTransferHistoryV1
            parameters:
                - in: query
                  name: fromEmail
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: toEmail
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default value: 1'
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: 'Default value: 500'
                  in: query
                  name: limit
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountSubTransferHistoryV1Resp'
                    description: Successful operation
            summary: Query Sub-account Spot Asset Transfer History(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/subAccountApi/ipRestriction:
        get:
            description: Get IP Restriction for a Sub-account API Key
            operationId: GetSubAccountSubAccountApiIpRestrictionV1
            parameters:
                - description: <a href="/docs/sub_account/api-management#email-address">Sub-account email</a>
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: subAccountApiKey
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountSubAccountApiIpRestrictionV1Resp'
                    description: Successful operation
            summary: Get IP Restriction for a Sub-account API Key(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/subAccountApi/ipRestriction/ipList:
        delete:
            description: Delete IP List For a Sub-account API Key
            operationId: DeleteSubAccountSubAccountApiIpRestrictionIpListV1
            parameters:
                - description: <a href="/docs/sub_account/api-management/Delete-IP-List-For-a-Sub-account-API-Key#email-address">Sub-account email</a>
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: subAccountApiKey
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Can be added in batches, separated by commas
                  in: query
                  name: ipAddress
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSubAccountSubAccountApiIpRestrictionIpListV1Resp'
                    description: Successful operation
            summary: Delete IP List For a Sub-account API Key(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/transaction-statistics:
        get:
            description: Query Sub-account Transaction statistics (For Master Account).
            operationId: GetSubAccountTransactionStatisticsV1
            parameters:
                - description: Sub user email
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SubaccountGetSubAccountTransactionStatisticsV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Sub-account Transaction Statistics(For Master Account)(USER_DATA)
            tags:
                - Sub Account
    /sapi/v1/sub-account/transfer/subToMaster:
        post:
            description: Transfer to Master
            operationId: CreateSubAccountTransferSubToMasterV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateSubAccountTransferSubToMasterV1Req'
                description: The request body for CreateSubAccountTransferSubToMasterV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSubAccountTransferSubToMasterV1Resp'
                    description: Successful operation
            summary: Transfer to Master(For Sub-account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/transfer/subToSub:
        post:
            description: Transfer to Sub-account of Same Master
            operationId: CreateSubAccountTransferSubToSubV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateSubAccountTransferSubToSubV1Req'
                description: The request body for CreateSubAccountTransferSubToSubV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSubAccountTransferSubToSubV1Resp'
                    description: Successful operation
            summary: Transfer to Sub-account of Same Master(For Sub-account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/transfer/subUserHistory:
        get:
            description: Sub-account Transfer History
            operationId: GetSubAccountTransferSubUserHistoryV1
            parameters:
                - description: If not sent, result of all assets will be returned
                  in: query
                  name: asset
                  schema:
                    default: ""
                    type: string
                - description: '1: transfer in, 2: transfer out'
                  in: query
                  name: type
                  schema:
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 500
                  in: query
                  name: limit
                  schema:
                    default: 500
                    type: integer
                - description: Default `False`, return PROCESS and SUCCESS status history; If `True`,return PROCESS and SUCCESS and FAILURE status history
                  in: query
                  name: returnFailHistory
                  schema:
                    type: boolean
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountTransferSubUserHistoryV1Resp'
                    description: Successful operation
            summary: Sub-account Transfer History(For Sub-account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/universalTransfer:
        get:
            description: Query Universal Transfer History
            operationId: GetSubAccountUniversalTransferV1
            parameters:
                - in: query
                  name: fromEmail
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: toEmail
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: clientTranId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 1
                  in: query
                  name: page
                  schema:
                    default: 1
                    type: integer
                - description: Default 500, Max 500
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 500
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountUniversalTransferV1Resp'
                    description: Successful operation
            summary: Query Universal Transfer History(For Master Account)
            tags:
                - Sub Account
        post:
            description: Universal Transfer
            operationId: CreateSubAccountUniversalTransferV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateSubAccountUniversalTransferV1Req'
                description: The request body for CreateSubAccountUniversalTransferV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSubAccountUniversalTransferV1Resp'
                    description: Successful operation
            summary: Universal Transfer(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/sub-account/virtualSubAccount:
        post:
            description: Create a Virtual Sub-account
            operationId: CreateSubAccountVirtualSubAccountV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateSubAccountVirtualSubAccountV1Req'
                description: The request body for CreateSubAccountVirtualSubAccountV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSubAccountVirtualSubAccountV1Resp'
                    description: Successful operation
            summary: Create a Virtual Sub-account(For Master Account)
            tags:
                - Sub Account
    /sapi/v1/system/status:
        get:
            description: Fetch system status.
            operationId: GetSystemStatusV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSystemStatusV1Resp'
                    description: Successful operation
            summary: System Status (System)
            tags:
                - Wallet
    /sapi/v1/userDataStream:
        delete:
            description: Close out a Margin user data stream.
            operationId: DeleteUserDataStreamV1
            parameters:
                - in: query
                  name: listenkey
                  required: true
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserDataStreamV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Close Margin User Data Stream (USER_STREAM)
            tags:
                - Margin Trading
        post:
            description: Start a new margin user data stream. The stream will close after 60 minutes unless a keepalive is sent. If the account has an active listenKey, that listenKey will be returned and its validity will be extended for 60 minutes.
            operationId: CreateUserDataStreamV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserDataStreamV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Start Margin User Data Stream (USER_STREAM)
            tags:
                - Margin Trading
        put:
            description: Keepalive a margin user data stream to prevent a time out.
            operationId: UpdateUserDataStreamV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UpdateUserDataStreamV1Req'
                description: The request body for UpdateUserDataStreamV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserDataStreamV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Keepalive Margin User Data Stream (USER_STREAM)
            tags:
                - Margin Trading
    /sapi/v1/userDataStream/isolated:
        delete:
            description: Close out a isolated margin user data stream.
            operationId: DeleteUserDataStreamIsolatedV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: listenkey
                  required: true
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserDataStreamIsolatedV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Close Isolated Margin User Data Stream (USER_STREAM)
            tags:
                - Margin Trading
        post:
            description: Start a new isolated margin user data stream. The stream will close after 60 minutes unless a keepalive is sent. If the account has an active listenKey, that listenKey will be returned and its validity will be extended for 60 minutes.
            operationId: CreateUserDataStreamIsolatedV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateUserDataStreamIsolatedV1Req'
                description: The request body for CreateUserDataStreamIsolatedV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserDataStreamIsolatedV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Start Isolated Margin User Data Stream (USER_STREAM)
            tags:
                - Margin Trading
        put:
            description: Keepalive an isolated margin user data stream to prevent a time out.
            operationId: UpdateUserDataStreamIsolatedV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UpdateUserDataStreamIsolatedV1Req'
                description: The request body for UpdateUserDataStreamIsolatedV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserDataStreamIsolatedV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Keepalive Isolated Margin User Data Stream (USER_STREAM)
            tags:
                - Margin Trading
    /sapi/v2/broker/subAccount/depositHist:
        get:
            operationId: GetBrokerSubAccountDepositHistV2
            parameters:
                - in: query
                  name: depositId
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: subAccountId
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Default：500
                  in: query
                  name: limit
                  schema:
                    type: integer
                - description: Default：0
                  in: query
                  name: offset
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBrokerSubAccountDepositHistV2Resp'
                    description: Successful operation
            summary: Get Sub Account Deposit History V2
            tags:
                - Binance Link
    /sapi/v2/broker/subAccountApi/ipRestriction:
        post:
            operationId: CreateBrokerSubAccountApiIpRestrictionV2
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateBrokerSubAccountApiIpRestrictionV2Req'
                description: The request body for CreateBrokerSubAccountApiIpRestrictionV2
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBrokerSubAccountApiIpRestrictionV2Resp'
                    description: Successful operation
            summary: Update IP Restriction for Sub-Account API key (For Master Account)
            tags:
                - Binance Link
    /sapi/v2/eth-staking/account:
        get:
            description: ETH Staking account
            operationId: GetEthStakingAccountV2
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEthStakingAccountV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: ETH Staking account(USER_DATA)
            tags:
                - Staking
    /sapi/v2/eth-staking/eth/stake:
        post:
            description: Subscribe ETH Staking
            operationId: CreateEthStakingEthStakeV2
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateEthStakingEthStakeV2Req'
                description: The request body for CreateEthStakingEthStakeV2
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEthStakingEthStakeV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Subscribe ETH Staking(TRADE)
            tags:
                - Staking
    /sapi/v2/loan/flexible/adjust/ltv:
        post:
            description: Flexible Loan Adjust LTV
            operationId: CreateLoanFlexibleAdjustLtvV2
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateLoanFlexibleAdjustLtvV2Req'
                description: The request body for CreateLoanFlexibleAdjustLtvV2
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateLoanFlexibleAdjustLtvV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Flexible Loan Adjust LTV(TRADE)
            tags:
                - Crypto Loan
    /sapi/v2/loan/flexible/borrow:
        post:
            description: Borrow Flexible Loan
            operationId: CreateLoanFlexibleBorrowV2
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateLoanFlexibleBorrowV2Req'
                description: The request body for CreateLoanFlexibleBorrowV2
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateLoanFlexibleBorrowV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Flexible Loan Borrow(TRADE)
            tags:
                - Crypto Loan
    /sapi/v2/loan/flexible/borrow/history:
        get:
            description: Get Flexible Loan Borrow History
            operationId: GetLoanFlexibleBorrowHistoryV2
            parameters:
                - in: query
                  name: loanCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: collateralCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Current querying page. Start from 1; default: 1; max: 1000'
                  in: query
                  name: current
                  schema:
                    default: 1
                    format: int64
                    maximum: 1000
                    type: integer
                - description: 'Default: 10; max: 100'
                  in: query
                  name: limit
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanFlexibleBorrowHistoryV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Flexible Loan Borrow History(USER_DATA)
            tags:
                - Crypto Loan
    /sapi/v2/loan/flexible/collateral/data:
        get:
            description: Get LTV information and collateral limit of flexible loan's collateral assets. The collateral limit is shown in USD value.
            operationId: GetLoanFlexibleCollateralDataV2
            parameters:
                - in: query
                  name: collateralCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanFlexibleCollateralDataV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Flexible Loan Collateral Assets Data(USER_DATA)
            tags:
                - Crypto Loan
    /sapi/v2/loan/flexible/liquidation/history:
        get:
            operationId: GetLoanFlexibleLiquidationHistoryV2
            parameters:
                - in: query
                  name: loanCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: collateralCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Current querying page. Start from 1; default: 1; max: 1000'
                  in: query
                  name: current
                  schema:
                    default: 1
                    format: int64
                    maximum: 1000
                    type: integer
                - description: 'Default: 10; max: 100'
                  in: query
                  name: limit
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanFlexibleLiquidationHistoryV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Flexible Loan Liquidation History (USER_DATA)
            tags:
                - Crypto Loan
    /sapi/v2/loan/flexible/loanable/data:
        get:
            description: Get interest rate and borrow limit of flexible loanable assets. The borrow limit is shown in USD value.
            operationId: GetLoanFlexibleLoanableDataV2
            parameters:
                - in: query
                  name: loanCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanFlexibleLoanableDataV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Flexible Loan Assets Data(USER_DATA)
            tags:
                - Crypto Loan
    /sapi/v2/loan/flexible/ltv/adjustment/history:
        get:
            description: Get Flexible Loan LTV Adjustment History
            operationId: GetLoanFlexibleLtvAdjustmentHistoryV2
            parameters:
                - in: query
                  name: loanCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: collateralCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Current querying page. Start from 1; default: 1; max: 1000'
                  in: query
                  name: current
                  schema:
                    default: 1
                    format: int64
                    maximum: 1000
                    type: integer
                - description: 'Default: 10; max: 100'
                  in: query
                  name: limit
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanFlexibleLtvAdjustmentHistoryV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Flexible Loan LTV Adjustment History(USER_DATA)
            tags:
                - Crypto Loan
    /sapi/v2/loan/flexible/ongoing/orders:
        get:
            description: Get Flexible Loan Ongoing Orders
            operationId: GetLoanFlexibleOngoingOrdersV2
            parameters:
                - in: query
                  name: loanCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: collateralCoin
                  schema:
                    default: ""
                    type: string
                - description: 'Current querying page. Start from 1; default: 1; max: 1000'
                  in: query
                  name: current
                  schema:
                    default: 1
                    format: int64
                    maximum: 1000
                    type: integer
                - description: 'Default: 10; max: 100'
                  in: query
                  name: limit
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanFlexibleOngoingOrdersV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Flexible Loan Ongoing Orders(USER_DATA)
            tags:
                - Crypto Loan
    /sapi/v2/loan/flexible/repay:
        post:
            description: Flexible Loan Repay
            operationId: CreateLoanFlexibleRepayV2
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateLoanFlexibleRepayV2Req'
                description: The request body for CreateLoanFlexibleRepayV2
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateLoanFlexibleRepayV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Flexible Loan Repay(TRADE)
            tags:
                - Crypto Loan
    /sapi/v2/loan/flexible/repay/collateral:
        post:
            description: |-
                ** Request Weight(UID)
                ** 6000
                Parameters:
                - repayAmount refers to the loan amount the user would like to repay
            operationId: CreateLoanFlexibleRepayCollateralV2
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateLoanFlexibleRepayCollateralV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Flexible Loan Collateral Repayment (TRADE)
            tags:
                - Crypto Loan
    /sapi/v2/loan/flexible/repay/history:
        get:
            description: Get Flexible Loan Repayment History
            operationId: GetLoanFlexibleRepayHistoryV2
            parameters:
                - in: query
                  name: loanCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: collateralCoin
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Current querying page. Start from 1; default: 1; max: 1000'
                  in: query
                  name: current
                  schema:
                    default: 1
                    format: int64
                    maximum: 1000
                    type: integer
                - description: 'Default: 10; max: 100'
                  in: query
                  name: limit
                  schema:
                    default: 10
                    format: int64
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanFlexibleRepayHistoryV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Flexible Loan Repayment History(USER_DATA)
            tags:
                - Crypto Loan
    /sapi/v2/loan/flexible/repay/rate:
        get:
            description: Get the latest rate of collateral coin/loan coin when using collateral repay.
            operationId: GetLoanFlexibleRepayRateV2
            parameters:
                - in: query
                  name: loanCoin
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: collateralCoin
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLoanFlexibleRepayRateV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Check Collateral Repay Rate (USER_DATA)
            tags:
                - Crypto Loan
    /sapi/v2/localentity/withdraw/history:
        get:
            description: Fetch withdraw history for local entities that required travel rule.
            operationId: GetLocalentityWithdrawHistoryV2
            parameters:
                - description: Comma(,) separated list of travel rule record Ids.
                  in: query
                  name: trId
                  schema:
                    default: ""
                    type: string
                - description: Comma(,) separated list of transaction Ids.
                  in: query
                  name: txId
                  schema:
                    default: ""
                    type: string
                - description: Withdraw ID defined by the client (i.e. client&#39;s internal withdrawID).
                  in: query
                  name: withdrawOrderId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: network
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: coin
                  schema:
                    default: ""
                    type: string
                - description: 0:Completed,1:Pending,2:Failed
                  in: query
                  name: travelRuleStatus
                  schema:
                    type: integer
                - description: 'Default: 0'
                  in: query
                  name: offset
                  schema:
                    default: 0
                    type: integer
                - description: 'Default: 1000, Max: 1000'
                  in: query
                  name: limit
                  schema:
                    default: 1000
                    maximum: 1000
                    type: integer
                - description: 'Default: 90 days from current timestamp'
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default: present timestamp'
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLocalentityWithdrawHistoryV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Withdraw History V2 (for local entities that require travel rule) (supporting network) (USER_DATA)
            tags:
                - Wallet
    /sapi/v2/portfolio/account:
        get:
            description: Get Portfolio Margin Pro SPAN Account Info (For Portfolio Margin Pro SPAN users only)
            operationId: GetPortfolioAccountV2
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
            security:
                - ApiKey: []
            summary: Get Portfolio Margin Pro SPAN Account Info(USER_DATA)
            tags:
                - Portfolio Margin Pro
    /sapi/v2/portfolio/collateralRate:
        get:
            description: Portfolio Margin PRO Tiered Collateral Rate
            operationId: GetPortfolioCollateralRateV2
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPortfolioCollateralRateV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Portfolio Margin Pro Tiered Collateral Rate(USER_DATA)
            tags:
                - Portfolio Margin Pro
    /sapi/v2/sub-account/futures/account:
        get:
            description: Get Detail on Sub-account's Futures Account
            operationId: GetSubAccountFuturesAccountV2
            parameters:
                - description: <a href="/docs/sub_account/asset-management/Get-Detail-on-Sub-accounts-Futures-Account-V2#email-address">Sub-account email</a>
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: 1:USDT Margined Futures, 2:COIN Margined Futures
                  in: query
                  name: futuresType
                  required: true
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountFuturesAccountV2Resp'
                    description: Successful operation
            summary: Get Detail on Sub-account's Futures Account V2(For Master Account)
            tags:
                - Sub Account
    /sapi/v2/sub-account/futures/accountSummary:
        get:
            description: Get Summary of Sub-account's Futures Account
            operationId: GetSubAccountFuturesAccountSummaryV2
            parameters:
                - description: 1:USDT Margined Futures, 2:COIN Margined Futures
                  in: query
                  name: futuresType
                  required: true
                  schema:
                    type: integer
                - description: default:1
                  in: query
                  name: page
                  schema:
                    type: integer
                - description: default:10, max:20
                  in: query
                  name: limit
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountFuturesAccountSummaryV2Resp'
                    description: Successful operation
            summary: Get Summary of Sub-account's Futures Account V2(For Master Account)
            tags:
                - Sub Account
    /sapi/v2/sub-account/futures/positionRisk:
        get:
            description: Get Futures Position-Risk of Sub-account V2
            operationId: GetSubAccountFuturesPositionRiskV2
            parameters:
                - description: <a href="/docs/sub_account/account-management/Get-Futures-Position-Risk-of-Sub-account-V2#email-address">Sub-account email</a>
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: 1:USDT Margined Futures, 2:COIN Margined Futures
                  in: query
                  name: futuresType
                  required: true
                  schema:
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountFuturesPositionRiskV2Resp'
                    description: Successful operation
            summary: Get Futures Position-Risk of Sub-account V2(For Master Account)
            tags:
                - Sub Account
    /sapi/v2/sub-account/subAccountApi/ipRestriction:
        post:
            description: Add IP Restriction for Sub-Account API key
            operationId: CreateSubAccountSubAccountApiIpRestrictionV2
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateSubAccountSubAccountApiIpRestrictionV2Req'
                description: The request body for CreateSubAccountSubAccountApiIpRestrictionV2
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSubAccountSubAccountApiIpRestrictionV2Resp'
                    description: Successful operation
            summary: Add IP Restriction for Sub-Account API key(For Master Account)
            tags:
                - Sub Account
    /sapi/v3/asset/getUserAsset:
        post:
            description: Get user assets, just for positive data.
            operationId: CreateAssetGetUserAssetV3
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/CreateAssetGetUserAssetV3Req'
                description: The request body for CreateAssetGetUserAssetV3
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAssetGetUserAssetV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: User Asset (USER_DATA)
            tags:
                - Wallet
    /sapi/v3/broker/subAccount/futuresSummary:
        get:
            operationId: GetBrokerSubAccountFuturesSummaryV3
            parameters:
                - in: query
                  name: subAccountId
                  schema:
                    default: ""
                    type: string
                - description: 1:USD Margined Futures, 2:COIN Margined Futures
                  in: query
                  name: futuresType
                  required: true
                  schema:
                    type: integer
                - description: default 1
                  in: query
                  name: page
                  schema:
                    default: 1
                    format: int64
                    type: integer
                - description: default 10, max 20
                  in: query
                  name: size
                  schema:
                    default: 10
                    format: int64
                    maximum: 20
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ExchangelinkGetBrokerSubAccountFuturesSummaryV3Resp'
                    description: Successful operation
            summary: Query Sub Account Futures Asset info (V3)
            tags:
                - Binance Link
    /sapi/v3/sub-account/assets:
        get:
            description: Fetch sub-account assets
            operationId: GetSubAccountAssetsV3
            parameters:
                - description: Sub account email
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountAssetsV3Resp'
                    description: Successful operation
            summary: Query Sub-account Assets(For Master Account)
            tags:
                - Sub Account
    /sapi/v4/sub-account/assets:
        get:
            description: Fetch sub-account assets
            operationId: GetSubAccountAssetsV4
            parameters:
                - description: Sub Account Email
                  in: query
                  name: email
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSubAccountAssetsV4Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Sub-account Assets (For Master Account)(USER_DATA)
            tags:
                - Sub Account
servers:
    - description: Binance Spot API Server
      url: https://api.binance.com
    - description: Binance Spot API Server
      url: https://api1.binance.com
    - description: Binance Spot API Server
      url: https://api2.binance.com
    - description: Binance Spot API Server
      url: https://api3.binance.com
    - description: Binance Spot API Server
      url: https://api4.binance.com
    - description: Binance Spot API Server
      url: https://api-gcp.binance.com

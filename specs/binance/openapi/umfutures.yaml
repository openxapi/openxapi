components:
    schemas:
        APIError:
            description: binance API error
            properties:
                code:
                    type: integer
                msg:
                    type: string
            type: object
        UmfuturesCreateBatchOrdersV1Req:
            properties:
                batchOrders:
                    items:
                        $ref: '#/components/schemas/UmfuturesCreateBatchOrdersV1ReqBatchOrdersItem'
                    type: array
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - batchOrders
                - timestamp
            type: object
        UmfuturesCreateBatchOrdersV1ReqBatchOrdersItem:
            properties:
                activationPrice:
                    default: ""
                    type: string
                callbackRate:
                    default: ""
                    type: string
                goodTillDate:
                    format: int64
                    type: integer
                newClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                positionSide:
                    default: ""
                    type: string
                price:
                    default: ""
                    type: string
                priceMatch:
                    default: ""
                    type: string
                priceProtect:
                    default: ""
                    type: string
                quantity:
                    default: ""
                    type: string
                reduceOnly:
                    default: ""
                    type: string
                selfTradePreventionMode:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                stopPrice:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
                timeInForce:
                    default: ""
                    type: string
                type:
                    default: ""
                    type: string
                workingType:
                    default: ""
                    type: string
            required:
                - symbol
                - side
                - type
                - quantity
        UmfuturesCreateBatchOrdersV1Resp:
            example: '[ { "clientOrderId": "testOrder", "cumQty": "0", "cumQuote": "0", "executedQty": "0", "orderId": 22542179, "avgPrice": "0.00000", "origQty": "10", "price": "0", "reduceOnly": false, "side": "BUY", "positionSide": "SHORT", "status": "NEW", "stopPrice": "9300", "symbol": "BTCUSDT", "timeInForce": "GTC", "type": "TRAILING_STOP_MARKET", "origType": "TRAILING_STOP_MARKET", "activatePrice": "9020", "priceRate": "0.3", "updateTime": 1566818724722, "workingType": "CONTRACT_PRICE", "priceProtect": false,       "priceMatch": "NONE",               "selfTradePreventionMode": "NONE",  "goodTillDate": 1693207680000       }, { "code": -2022, "msg": "ReduceOnly Order is rejected." } ]'
            items:
                oneOf:
                    - $ref: '#/components/schemas/UmfuturesCreateBatchOrdersV1RespItem'
                    - $ref: '#/components/schemas/APIError'
            type: array
        UmfuturesCreateBatchOrdersV1RespItem:
            properties:
                activatePrice:
                    type: string
                avgPrice:
                    type: string
                clientOrderId:
                    type: string
                cumQty:
                    type: string
                cumQuote:
                    type: string
                executedQty:
                    type: string
                goodTillDate:
                    type: integer
                orderId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origType:
                    type: string
                positionSide:
                    type: string
                price:
                    type: string
                priceMatch:
                    type: string
                priceProtect:
                    type: boolean
                priceRate:
                    type: string
                reduceOnly:
                    type: boolean
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
                workingType:
                    type: string
            type: object
        UmfuturesCreateConvertAcceptQuoteV1Req:
            properties:
                quoteId:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - quoteId
                - timestamp
            type: object
        UmfuturesCreateConvertAcceptQuoteV1Resp:
            example: '{ "orderId":"933256278426274426", "createTime":1623381330472, "orderStatus":"PROCESS"  }'
            properties:
                createTime:
                    format: int64
                    type: integer
                orderId:
                    type: string
                orderStatus:
                    type: string
            type: object
        UmfuturesCreateConvertGetQuoteV1Req:
            properties:
                fromAmount:
                    default: ""
                    type: string
                fromAsset:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
                toAmount:
                    default: ""
                    type: string
                toAsset:
                    default: ""
                    type: string
                validTime:
                    default: "10"
                    type: string
            required:
                - fromAsset
                - toAsset
                - timestamp
            type: object
        UmfuturesCreateConvertGetQuoteV1Resp:
            example: '{ "quoteId":"12415572564", "ratio":"38163.7", "inverseRatio":"0.0000262", "validTimestamp":1623319461670, "toAmount":"3816.37", "fromAmount":"0.1" }'
            properties:
                fromAmount:
                    type: string
                inverseRatio:
                    type: string
                quoteId:
                    type: string
                ratio:
                    type: string
                toAmount:
                    type: string
                validTimestamp:
                    format: int64
                    type: integer
            type: object
        UmfuturesCreateCountdownCancelAllV1Req:
            properties:
                countdownTime:
                    format: int64
                    type: integer
                recvWindow:
                    format: int64
                    type: integer
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - symbol
                - countdownTime
                - timestamp
            type: object
        UmfuturesCreateCountdownCancelAllV1Resp:
            example: '{ "symbol": "BTCUSDT", "countdownTime": "100000" }'
            properties:
                countdownTime:
                    type: string
                symbol:
                    type: string
            type: object
        UmfuturesCreateFeeBurnV1Req:
            properties:
                feeBurn:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - feeBurn
                - timestamp
            type: object
        UmfuturesCreateFeeBurnV1Resp:
            example: '{ "code": 200, "msg": "success" }'
            properties:
                code:
                    type: integer
                msg:
                    type: string
            type: object
        UmfuturesCreateLeverageV1Req:
            properties:
                leverage:
                    type: integer
                recvWindow:
                    format: int64
                    type: integer
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - symbol
                - leverage
                - timestamp
            type: object
        UmfuturesCreateLeverageV1Resp:
            example: '{ "leverage": 21, "maxNotionalValue": "1000000", "symbol": "BTCUSDT" }'
            properties:
                leverage:
                    type: integer
                maxNotionalValue:
                    type: string
                symbol:
                    type: string
            type: object
        UmfuturesCreateListenKeyV1Resp:
            example: '{ "listenKey": "pqia91ma19a5s61cv6a81va65sdf19v8a65a1a5s61cv6a81va65sdf19v8a65a1" }'
            properties:
                listenKey:
                    type: string
            type: object
        UmfuturesCreateMarginTypeV1Req:
            properties:
                marginType:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - symbol
                - marginType
                - timestamp
            type: object
        UmfuturesCreateMarginTypeV1Resp:
            example: '{ "code": 200, "msg": "success" }'
            properties:
                code:
                    type: integer
                msg:
                    type: string
            type: object
        UmfuturesCreateMultiAssetsMarginV1Req:
            properties:
                multiAssetsMargin:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - multiAssetsMargin
                - timestamp
            type: object
        UmfuturesCreateMultiAssetsMarginV1Resp:
            example: '{ "code": 200, "msg": "success" }'
            properties:
                code:
                    type: integer
                msg:
                    type: string
            type: object
        UmfuturesCreateOrderTestV1Req:
            properties:
                activationPrice:
                    default: ""
                    type: string
                callbackRate:
                    default: ""
                    type: string
                closePosition:
                    default: ""
                    type: string
                goodTillDate:
                    format: int64
                    type: integer
                newClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                positionSide:
                    default: ""
                    type: string
                price:
                    default: ""
                    type: string
                priceMatch:
                    default: ""
                    type: string
                priceProtect:
                    default: ""
                    type: string
                quantity:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                reduceOnly:
                    default: ""
                    type: string
                selfTradePreventionMode:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                stopPrice:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
                timeInForce:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                type:
                    default: ""
                    type: string
                workingType:
                    default: ""
                    type: string
            required:
                - symbol
                - side
                - type
                - timestamp
            type: object
        UmfuturesCreateOrderTestV1Resp:
            example: '{ "clientOrderId": "testOrder", "cumQty": "0", "cumQuote": "0", "executedQty": "0", "orderId": 22542179, "avgPrice": "0.00000", "origQty": "10", "price": "0", "reduceOnly": false, "side": "BUY", "positionSide": "SHORT", "status": "NEW", "stopPrice": "9300", "closePosition": false,    "symbol": "BTCUSDT", "timeInForce": "GTD", "type": "TRAILING_STOP_MARKET", "origType": "TRAILING_STOP_MARKET", "activatePrice": "9020", "priceRate": "0.3", "updateTime": 1566818724722, "workingType": "CONTRACT_PRICE", "priceProtect": false,       "priceMatch": "NONE",               "selfTradePreventionMode": "NONE",  "goodTillDate": 1693207680000       }'
            properties:
                activatePrice:
                    type: string
                avgPrice:
                    type: string
                clientOrderId:
                    type: string
                closePosition:
                    type: boolean
                cumQty:
                    type: string
                cumQuote:
                    type: string
                executedQty:
                    type: string
                goodTillDate:
                    format: int64
                    type: integer
                orderId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origType:
                    type: string
                positionSide:
                    type: string
                price:
                    type: string
                priceMatch:
                    type: string
                priceProtect:
                    type: boolean
                priceRate:
                    type: string
                reduceOnly:
                    type: boolean
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
                workingType:
                    type: string
            type: object
        UmfuturesCreateOrderV1Req:
            properties:
                activationPrice:
                    default: ""
                    type: string
                callbackRate:
                    default: ""
                    type: string
                closePosition:
                    default: ""
                    type: string
                goodTillDate:
                    format: int64
                    type: integer
                newClientOrderId:
                    default: ""
                    type: string
                newOrderRespType:
                    default: ""
                    type: string
                positionSide:
                    default: ""
                    type: string
                price:
                    default: ""
                    type: string
                priceMatch:
                    default: ""
                    type: string
                priceProtect:
                    default: ""
                    type: string
                quantity:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                reduceOnly:
                    default: ""
                    type: string
                selfTradePreventionMode:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                stopPrice:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
                timeInForce:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                type:
                    default: ""
                    type: string
                workingType:
                    default: ""
                    type: string
            required:
                - symbol
                - side
                - type
                - timestamp
            type: object
        UmfuturesCreateOrderV1Resp:
            example: '{ "clientOrderId": "testOrder", "cumQty": "0", "cumQuote": "0", "executedQty": "0", "orderId": 22542179, "avgPrice": "0.00000", "origQty": "10", "price": "0", "reduceOnly": false, "side": "BUY", "positionSide": "SHORT", "status": "NEW", "stopPrice": "9300", "closePosition": false,    "symbol": "BTCUSDT", "timeInForce": "GTD", "type": "TRAILING_STOP_MARKET", "origType": "TRAILING_STOP_MARKET", "activatePrice": "9020", "priceRate": "0.3", "updateTime": 1566818724722, "workingType": "CONTRACT_PRICE", "priceProtect": false,       "priceMatch": "NONE",               "selfTradePreventionMode": "NONE",  "goodTillDate": 1693207680000       }'
            properties:
                activatePrice:
                    type: string
                avgPrice:
                    type: string
                clientOrderId:
                    type: string
                closePosition:
                    type: boolean
                cumQty:
                    type: string
                cumQuote:
                    type: string
                executedQty:
                    type: string
                goodTillDate:
                    format: int64
                    type: integer
                orderId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origType:
                    type: string
                positionSide:
                    type: string
                price:
                    type: string
                priceMatch:
                    type: string
                priceProtect:
                    type: boolean
                priceRate:
                    type: string
                reduceOnly:
                    type: boolean
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
                workingType:
                    type: string
            type: object
        UmfuturesCreatePositionMarginV1Req:
            properties:
                amount:
                    default: ""
                    type: string
                positionSide:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
                type:
                    type: integer
            required:
                - symbol
                - amount
                - type
                - timestamp
            type: object
        UmfuturesCreatePositionMarginV1Resp:
            example: '{ "amount": 100.0, "code": 200, "msg": "Successfully modify position margin.", "type": 1 }'
            properties:
                amount:
                    type: integer
                code:
                    type: integer
                msg:
                    type: string
                type:
                    type: integer
            type: object
        UmfuturesCreatePositionSideDualV1Req:
            properties:
                dualSidePosition:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - dualSidePosition
                - timestamp
            type: object
        UmfuturesCreatePositionSideDualV1Resp:
            example: '{ "code": 200, "msg": "success" }'
            properties:
                code:
                    type: integer
                msg:
                    type: string
            type: object
        UmfuturesDeleteAllOpenOrdersV1Resp:
            example: '{ "code": 200, "msg": "The operation of cancel all open order is done." }'
            properties:
                code:
                    type: integer
                msg:
                    type: string
            type: object
        UmfuturesDeleteBatchOrdersV1Resp:
            example: '[ { "clientOrderId": "myOrder1", "cumQty": "0", "cumQuote": "0", "executedQty": "0", "orderId": 283194212, "origQty": "11", "origType": "TRAILING_STOP_MARKET", "price": "0", "reduceOnly": false, "side": "BUY", "positionSide": "SHORT", "status": "CANCELED", "stopPrice": "9300", "closePosition": false,    "symbol": "BTCUSDT", "timeInForce": "GTC", "type": "TRAILING_STOP_MARKET", "activatePrice": "9020", "priceRate": "0.3", "updateTime": 1571110484038, "workingType": "CONTRACT_PRICE", "priceProtect": false,             "priceMatch": "NONE",               "selfTradePreventionMode": "NONE",  "goodTillDate": 1693207680000       }, { "code": -2011, "msg": "Unknown order sent." } ]'
            items:
                oneOf:
                    - $ref: '#/components/schemas/UmfuturesDeleteBatchOrdersV1RespItem'
                    - $ref: '#/components/schemas/APIError'
            type: array
        UmfuturesDeleteBatchOrdersV1RespItem:
            properties:
                activatePrice:
                    type: string
                clientOrderId:
                    type: string
                closePosition:
                    type: boolean
                cumQty:
                    type: string
                cumQuote:
                    type: string
                executedQty:
                    type: string
                goodTillDate:
                    format: int64
                    type: integer
                orderId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origType:
                    type: string
                positionSide:
                    type: string
                price:
                    type: string
                priceMatch:
                    type: string
                priceProtect:
                    type: boolean
                priceRate:
                    type: string
                reduceOnly:
                    type: boolean
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
                workingType:
                    type: string
            type: object
        UmfuturesDeleteListenKeyV1Resp:
            example: '{}'
            type: object
        UmfuturesDeleteOrderV1Resp:
            example: '{ "clientOrderId": "myOrder1", "cumQty": "0", "cumQuote": "0", "executedQty": "0", "orderId": 283194212, "origQty": "11", "origType": "TRAILING_STOP_MARKET", "price": "0", "reduceOnly": false, "side": "BUY", "positionSide": "SHORT", "status": "CANCELED", "stopPrice": "9300", "closePosition": false,    "symbol": "BTCUSDT", "timeInForce": "GTC", "type": "TRAILING_STOP_MARKET", "activatePrice": "9020", "priceRate": "0.3", "updateTime": 1571110484038, "workingType": "CONTRACT_PRICE", "priceProtect": false,             "priceMatch": "NONE",               "selfTradePreventionMode": "NONE",  "goodTillDate": 1693207680000       }'
            properties:
                activatePrice:
                    type: string
                clientOrderId:
                    type: string
                closePosition:
                    type: boolean
                cumQty:
                    type: string
                cumQuote:
                    type: string
                executedQty:
                    type: string
                goodTillDate:
                    format: int64
                    type: integer
                orderId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origType:
                    type: string
                positionSide:
                    type: string
                price:
                    type: string
                priceMatch:
                    type: string
                priceProtect:
                    type: boolean
                priceRate:
                    type: string
                reduceOnly:
                    type: boolean
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
                workingType:
                    type: string
            type: object
        UmfuturesGetAccountConfigV1Resp:
            example: '{ "feeTier": 0,                "canTrade": true,            "canDeposit": true,          "canWithdraw": true,         "dualSidePosition": true, "updateTime": 0,             "multiAssetsMargin": false, "tradeGroupId": -1 }'
            properties:
                canDeposit:
                    type: boolean
                canTrade:
                    type: boolean
                canWithdraw:
                    type: boolean
                dualSidePosition:
                    type: boolean
                feeTier:
                    type: integer
                multiAssetsMargin:
                    type: boolean
                tradeGroupId:
                    format: int64
                    type: integer
                updateTime:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetAccountV2Resp:
            example: '{ "feeTier": 0,   "feeBurn": true,   "canDeposit": true,   "canWithdraw": true,  "updateTime": 0,         "multiAssetsMargin": false, "tradeGroupId": -1, "totalInitialMargin": "0.00000000",     "totalMaintMargin": "0.00000000",     "totalWalletBalance": "23.72469206",      "totalUnrealizedProfit": "0.00000000",    "totalMarginBalance": "23.72469206",      "totalPositionInitialMargin": "0.00000000",     "totalOpenOrderInitialMargin": "0.00000000",    "totalCrossWalletBalance": "23.72469206",       "totalCrossUnPnl": "0.00000000",   "availableBalance": "23.72469206",        "maxWithdrawAmount": "23.72469206",      "assets": [ { "asset": "USDT", "walletBalance": "23.72469206",       "unrealizedProfit": "0.00000000",     "marginBalance": "23.72469206",       "maintMargin": "0.00000000",     "initialMargin": "0.00000000",     "positionInitialMargin": "0.00000000",     "openOrderInitialMargin": "0.00000000",    "crossWalletBalance": "23.72469206",       "crossUnPnl": "0.00000000",        "availableBalance": "23.72469206",        "maxWithdrawAmount": "23.72469206",      "marginAvailable": true,     "updateTime": 1625474304765  }, { "asset": "BUSD", "walletBalance": "103.12345678",       "unrealizedProfit": "0.00000000",     "marginBalance": "103.12345678",       "maintMargin": "0.00000000",     "initialMargin": "0.00000000",     "positionInitialMargin": "0.00000000",     "openOrderInitialMargin": "0.00000000",    "crossWalletBalance": "103.12345678",       "crossUnPnl": "0.00000000",        "availableBalance": "103.12345678",        "maxWithdrawAmount": "103.12345678",      "marginAvailable": true,     "updateTime": 1625474304765  } ], "positions": [   { "symbol": "BTCUSDT",   "initialMargin": "0", "maintMargin": "0", "unrealizedProfit": "0.00000000",   "positionInitialMargin": "0",       "openOrderInitialMargin": "0",      "leverage": "100", "isolated": true,   "entryPrice": "0.00000",   "maxNotional": "250000",   "bidNotional": "0",   "askNotional": "0",   "positionSide": "BOTH",   "positionAmt": "0", "updateTime": 0            } ] }'
            properties:
                assets:
                    items:
                        properties:
                            asset:
                                type: string
                            availableBalance:
                                type: string
                            crossUnPnl:
                                type: string
                            crossWalletBalance:
                                type: string
                            initialMargin:
                                type: string
                            maintMargin:
                                type: string
                            marginAvailable:
                                type: boolean
                            marginBalance:
                                type: string
                            maxWithdrawAmount:
                                type: string
                            openOrderInitialMargin:
                                type: string
                            positionInitialMargin:
                                type: string
                            unrealizedProfit:
                                type: string
                            updateTime:
                                format: int64
                                type: integer
                            walletBalance:
                                type: string
                        type: object
                    type: array
                availableBalance:
                    type: string
                canDeposit:
                    type: boolean
                canWithdraw:
                    type: boolean
                feeBurn:
                    type: boolean
                feeTier:
                    type: integer
                maxWithdrawAmount:
                    type: string
                multiAssetsMargin:
                    type: boolean
                positions:
                    items:
                        properties:
                            askNotional:
                                type: string
                            bidNotional:
                                type: string
                            entryPrice:
                                type: string
                            initialMargin:
                                type: string
                            isolated:
                                type: boolean
                            leverage:
                                type: string
                            maintMargin:
                                type: string
                            maxNotional:
                                type: string
                            openOrderInitialMargin:
                                type: string
                            positionAmt:
                                type: string
                            positionInitialMargin:
                                type: string
                            positionSide:
                                type: string
                            symbol:
                                type: string
                            unrealizedProfit:
                                type: string
                            updateTime:
                                format: int64
                                type: integer
                        type: object
                    type: array
                totalCrossUnPnl:
                    type: string
                totalCrossWalletBalance:
                    type: string
                totalInitialMargin:
                    type: string
                totalMaintMargin:
                    type: string
                totalMarginBalance:
                    type: string
                totalOpenOrderInitialMargin:
                    type: string
                totalPositionInitialMargin:
                    type: string
                totalUnrealizedProfit:
                    type: string
                totalWalletBalance:
                    type: string
                tradeGroupId:
                    format: int64
                    type: integer
                updateTime:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetAccountV3Resp:
            example: '{ "totalInitialMargin": "0.00000000",             "totalMaintMargin": "0.00000000",              "totalWalletBalance": "103.12345678",            "totalUnrealizedProfit": "0.00000000",          "totalMarginBalance": "103.12345678",            "totalPositionInitialMargin": "0.00000000",     "totalOpenOrderInitialMargin": "0.00000000",    "totalCrossWalletBalance": "103.12345678",       "totalCrossUnPnl": "0.00000000",            "availableBalance": "103.12345678",              "maxWithdrawAmount": "103.12345678",              "assets": [  { "asset": "USDT",             "walletBalance": "23.72469206",          "unrealizedProfit": "0.00000000",        "marginBalance": "23.72469206",          "maintMargin": "0.00000000",         "initialMargin": "0.00000000",           "positionInitialMargin": "0.00000000",   "openOrderInitialMargin": "0.00000000",  "crossWalletBalance": "23.72469206",     "crossUnPnl": "0.00000000",               "availableBalance": "23.72469206",       "maxWithdrawAmount": "23.72469206",      "updateTime": 1625474304765              }, { "asset": "USDC",             "walletBalance": "103.12345678",          "unrealizedProfit": "0.00000000",        "marginBalance": "103.12345678",          "maintMargin": "0.00000000",         "initialMargin": "0.00000000",           "positionInitialMargin": "0.00000000",   "openOrderInitialMargin": "0.00000000",  "crossWalletBalance": "103.12345678",     "crossUnPnl": "0.00000000",               "availableBalance": "126.72469206",       "maxWithdrawAmount": "103.12345678",      "updateTime": 1625474304765              } ], "positions": [   { "symbol": "BTCUSDT", "positionSide": "BOTH",             "positionAmt": "1.000", "unrealizedProfit": "0.00000000",   "isolatedMargin": "0.00000000", "notional": "0", "isolatedWallet": "0", "initialMargin": "0",               "maintMargin": "0",                 "updateTime": 0 } ] }'
            properties:
                assets:
                    items:
                        properties:
                            asset:
                                type: string
                            availableBalance:
                                type: string
                            crossUnPnl:
                                type: string
                            crossWalletBalance:
                                type: string
                            initialMargin:
                                type: string
                            maintMargin:
                                type: string
                            marginBalance:
                                type: string
                            maxWithdrawAmount:
                                type: string
                            openOrderInitialMargin:
                                type: string
                            positionInitialMargin:
                                type: string
                            unrealizedProfit:
                                type: string
                            updateTime:
                                format: int64
                                type: integer
                            walletBalance:
                                type: string
                        type: object
                    type: array
                availableBalance:
                    type: string
                maxWithdrawAmount:
                    type: string
                positions:
                    items:
                        properties:
                            initialMargin:
                                type: string
                            isolatedMargin:
                                type: string
                            isolatedWallet:
                                type: string
                            maintMargin:
                                type: string
                            notional:
                                type: string
                            positionAmt:
                                type: string
                            positionSide:
                                type: string
                            symbol:
                                type: string
                            unrealizedProfit:
                                type: string
                            updateTime:
                                format: int64
                                type: integer
                        type: object
                    type: array
                totalCrossUnPnl:
                    type: string
                totalCrossWalletBalance:
                    type: string
                totalInitialMargin:
                    type: string
                totalMaintMargin:
                    type: string
                totalMarginBalance:
                    type: string
                totalOpenOrderInitialMargin:
                    type: string
                totalPositionInitialMargin:
                    type: string
                totalUnrealizedProfit:
                    type: string
                totalWalletBalance:
                    type: string
            type: object
        UmfuturesGetAdlQuantileV1Resp:
            example: '[ { "symbol": "ETHUSDT", "adlQuantile": { "LONG": 3, "SHORT": 3, "HEDGE": 0    } }, { "symbol": "BTCUSDT", "adlQuantile": { "LONG": 1,  "SHORT": 2,  "BOTH": 0 } } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetAdlQuantileV1RespItem'
            type: array
        UmfuturesGetAdlQuantileV1RespItem:
            properties:
                adlQuantile:
                    properties:
                        HEDGE:
                            type: integer
                        LONG:
                            type: integer
                        SHORT:
                            type: integer
                    type: object
                symbol:
                    type: string
            type: object
        UmfuturesGetAggTradesV1Resp:
            example: '[ { "a": 26129,          "p": "0.01633102",   "q": "4.70443515",   "f": 27781,          "l": 27781,          "T": 1498793709153,  "m": true           } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetAggTradesV1RespItem'
            type: array
        UmfuturesGetAggTradesV1RespItem:
            properties:
                T:
                    format: int64
                    type: integer
                a:
                    type: integer
                f:
                    type: integer
                l:
                    type: integer
                m:
                    type: boolean
                p:
                    type: string
                q:
                    type: string
            type: object
        UmfuturesGetAllOrdersV1Resp:
            example: '[ { "avgPrice": "0.00000", "clientOrderId": "abc", "cumQuote": "0", "executedQty": "0", "orderId": 1917641, "origQty": "0.40", "origType": "TRAILING_STOP_MARKET", "price": "0", "reduceOnly": false, "side": "BUY", "positionSide": "SHORT", "status": "NEW", "stopPrice": "9300", "closePosition": false,    "symbol": "BTCUSDT", "time": 1579276756075, "timeInForce": "GTC", "type": "TRAILING_STOP_MARKET", "activatePrice": "9020", "priceRate": "0.3", "updateTime": 1579276756075, "workingType": "CONTRACT_PRICE", "priceProtect": false,               "priceMatch": "NONE",               "selfTradePreventionMode": "NONE",  "goodTillDate": 0       } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetAllOrdersV1RespItem'
            type: array
        UmfuturesGetAllOrdersV1RespItem:
            properties:
                activatePrice:
                    type: string
                avgPrice:
                    type: string
                clientOrderId:
                    type: string
                closePosition:
                    type: boolean
                cumQuote:
                    type: string
                executedQty:
                    type: string
                goodTillDate:
                    format: int64
                    type: integer
                orderId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origType:
                    type: string
                positionSide:
                    type: string
                price:
                    type: string
                priceMatch:
                    type: string
                priceProtect:
                    type: boolean
                priceRate:
                    type: string
                reduceOnly:
                    type: boolean
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
                workingType:
                    type: string
            type: object
        UmfuturesGetApiTradingStatusV1Resp:
            properties:
                indicators:
                    additionalProperties: {}
                    type: object
                updateTime:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetAssetIndexV1Resp:
            oneOf:
                - items:
                    $ref: '#/components/schemas/UmfuturesGetAssetIndexV1RespItem'
                  type: array
                - $ref: '#/components/schemas/UmfuturesGetAssetIndexV1RespItem'
        UmfuturesGetAssetIndexV1RespItem:
            example: '{ "symbol": "ADAUSD", "time": 1635740268004, "index": "1.92957370", "bidBuffer": "0.10000000", "askBuffer": "0.10000000", "bidRate": "1.73661633", "askRate": "2.12253107", "autoExchangeBidBuffer": "0.05000000", "autoExchangeAskBuffer": "0.05000000", "autoExchangeBidRate": "1.83309501", "autoExchangeAskRate": "2.02605238" }'
            properties:
                askBuffer:
                    type: string
                askRate:
                    type: string
                autoExchangeAskBuffer:
                    type: string
                autoExchangeAskRate:
                    type: string
                autoExchangeBidBuffer:
                    type: string
                autoExchangeBidRate:
                    type: string
                bidBuffer:
                    type: string
                bidRate:
                    type: string
                index:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetBalanceV2Resp:
            example: '[ { "accountAlias": "SgsR",     "asset": "USDT",   "balance": "122607.35137903",  "crossWalletBalance": "23.72469206",  "crossUnPnl": "0.00000000",   "availableBalance": "23.72469206",        "maxWithdrawAmount": "23.72469206",      "marginAvailable": true,     "updateTime": 1617939110373 } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetBalanceV2RespItem'
            type: array
        UmfuturesGetBalanceV2RespItem:
            properties:
                accountAlias:
                    type: string
                asset:
                    type: string
                availableBalance:
                    type: string
                balance:
                    type: string
                crossUnPnl:
                    type: string
                crossWalletBalance:
                    type: string
                marginAvailable:
                    type: boolean
                maxWithdrawAmount:
                    type: string
                updateTime:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetBalanceV3Resp:
            example: '[ { "accountAlias": "SgsR",               "asset": "USDT",                   "balance": "122607.35137903",         "crossWalletBalance": "23.72469206",  "crossUnPnl": "0.00000000",           "availableBalance": "23.72469206",    "maxWithdrawAmount": "23.72469206",   "marginAvailable": true,              "updateTime": 1617939110373 } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetBalanceV3RespItem'
            type: array
        UmfuturesGetBalanceV3RespItem:
            properties:
                accountAlias:
                    type: string
                asset:
                    type: string
                availableBalance:
                    type: string
                balance:
                    type: string
                crossUnPnl:
                    type: string
                crossWalletBalance:
                    type: string
                marginAvailable:
                    type: boolean
                maxWithdrawAmount:
                    type: string
                updateTime:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetCommissionRateV1Resp:
            example: '{ "symbol": "BTCUSDT", "makerCommissionRate": "0.0002",   "takerCommissionRate": "0.0004"    }'
            properties:
                makerCommissionRate:
                    type: string
                symbol:
                    type: string
                takerCommissionRate:
                    type: string
            type: object
        UmfuturesGetConstituentsV1Resp:
            example: '{ "symbol": "BTCUSDT", "time": 1697421272043, "constituents": [ { "exchange": "binance", "symbol": "BTCUSDT" }, { "exchange": "okex", "symbol": "BTC-USDT" }, { "exchange": "huobi", "symbol": "btcusdt" }, { "exchange": "coinbase", "symbol": "BTC-USDT" } ] }'
            properties:
                constituents:
                    items:
                        properties:
                            exchange:
                                type: string
                            symbol:
                                type: string
                        type: object
                    type: array
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetContinuousKlinesV1Resp:
            example: "[ [ 1607444700000,      \t \"18879.99\",       \t \t \"18900.00\",       \t \t \"18878.98\",       \t \t \"18896.13\",      \t \t \"492.363\", \t\t\t \t 1607444759999,       \t \"9302145.66080\",    \t 1874,             \t\t \"385.983\",    \t\t\t \"7292402.33267\",      \t \"0\" \t\t\t\t\t ] ]"
            items:
                items:
                    oneOf:
                        - type: string
                        - format: int64
                          type: integer
                type: array
            type: array
        UmfuturesGetConvertExchangeInfoV1Resp:
            example: '[ { "fromAsset":"BTC", "toAsset":"USDT", "fromAssetMinAmount":"0.0004", "fromAssetMaxAmount":"50", "toAssetMinAmount":"20", "toAssetMaxAmount":"2500000" } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetConvertExchangeInfoV1RespItem'
            type: array
        UmfuturesGetConvertExchangeInfoV1RespItem:
            properties:
                fromAsset:
                    type: string
                fromAssetMaxAmount:
                    type: string
                fromAssetMinAmount:
                    type: string
                toAsset:
                    type: string
                toAssetMaxAmount:
                    type: string
                toAssetMinAmount:
                    type: string
            type: object
        UmfuturesGetConvertOrderStatusV1Resp:
            example: '{ "orderId":933256278426274426, "orderStatus":"SUCCESS", "fromAsset":"BTC", "fromAmount":"0.00054414", "toAsset":"USDT", "toAmount":"20", "ratio":"36755", "inverseRatio":"0.00002721", "createTime":1623381330472 }'
            properties:
                createTime:
                    format: int64
                    type: integer
                fromAmount:
                    type: string
                fromAsset:
                    type: string
                inverseRatio:
                    type: string
                orderId:
                    format: int64
                    type: integer
                orderStatus:
                    type: string
                ratio:
                    type: string
                toAmount:
                    type: string
                toAsset:
                    type: string
            type: object
        UmfuturesGetDepthV1Resp:
            example: '{ "lastUpdateId": 1027024, "E": 1589436922972,    "T": 1589436922959,    "bids": [ [ "4.00000000",      "431.00000000"     ] ], "asks": [ [ "4.00000200", "12.00000000" ] ] }'
            properties:
                E:
                    type: integer
                T:
                    type: integer
                asks:
                    items:
                        items:
                            type: string
                        type: array
                    type: array
                bids:
                    items:
                        items:
                            type: string
                        type: array
                    type: array
                lastUpdateId:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetExchangeInfoV1Resp:
            example: "{ \"exchangeFilters\": [], \"rateLimits\": [ { \"interval\": \"MINUTE\", \"intervalNum\": 1, \"limit\": 2400, \"rateLimitType\": \"REQUEST_WEIGHT\" }, { \"interval\": \"MINUTE\", \"intervalNum\": 1, \"limit\": 1200, \"rateLimitType\": \"ORDERS\" } ], \"serverTime\": 1565613908500,     \"assets\": [  { \"asset\": \"BUSD\", \"marginAvailable\": true,  \"autoAssetExchange\": 0  }, { \"asset\": \"USDT\", \"marginAvailable\": true, \"autoAssetExchange\": 0 }, { \"asset\": \"BNB\", \"marginAvailable\": false, \"autoAssetExchange\": null } ], \"symbols\": [ { \"symbol\": \"BLZUSDT\", \"pair\": \"BLZUSDT\", \"contractType\": \"PERPETUAL\", \"deliveryDate\": 4133404800000, \"onboardDate\": 1598252400000, \"status\": \"TRADING\", \"maintMarginPercent\": \"2.5000\",    \"requiredMarginPercent\": \"5.0000\",   \"baseAsset\": \"BLZ\", \"quoteAsset\": \"USDT\", \"marginAsset\": \"USDT\", \"pricePrecision\": 5,\t \"quantityPrecision\": 0,  \"baseAssetPrecision\": 8, \"quotePrecision\": 8, \"underlyingType\": \"COIN\", \"underlyingSubType\": [\"STORAGE\"], \"settlePlan\": 0, \"triggerProtect\": \"0.15\",  \"filters\": [ { \"filterType\": \"PRICE_FILTER\", \"maxPrice\": \"300\", \"minPrice\": \"0.0001\", \"tickSize\": \"0.0001\" }, { \"filterType\": \"LOT_SIZE\", \"maxQty\": \"10000000\", \"minQty\": \"1\", \"stepSize\": \"1\" }, { \"filterType\": \"MARKET_LOT_SIZE\", \"maxQty\": \"590119\", \"minQty\": \"1\", \"stepSize\": \"1\" }, { \"filterType\": \"MAX_NUM_ORDERS\", \"limit\": 200 }, { \"filterType\": \"MAX_NUM_ALGO_ORDERS\", \"limit\": 10 }, { \"filterType\": \"MIN_NOTIONAL\", \"notional\": \"5.0\" }, { \"filterType\": \"PERCENT_PRICE\", \"multiplierUp\": \"1.1500\", \"multiplierDown\": \"0.8500\", \"multiplierDecimal\": 4 } ], \"OrderType\": [ \"LIMIT\", \"MARKET\", \"STOP\", \"STOP_MARKET\", \"TAKE_PROFIT\", \"TAKE_PROFIT_MARKET\", \"TRAILING_STOP_MARKET\" ], \"timeInForce\": [ \"GTC\", \"IOC\", \"FOK\", \"GTX\" ], \"liquidationFee\": \"0.010000\",\t \"marketTakeBound\": \"0.30\"\t } ], \"timezone\": \"UTC\" }"
            properties:
                assets:
                    items:
                        properties:
                            asset:
                                type: string
                            autoAssetExchange:
                                type: integer
                            marginAvailable:
                                type: boolean
                        type: object
                    type: array
                exchangeFilters:
                    items:
                        type: string
                    type: array
                rateLimits:
                    items:
                        properties:
                            interval:
                                type: string
                            intervalNum:
                                type: integer
                            limit:
                                type: integer
                            rateLimitType:
                                type: string
                        type: object
                    type: array
                serverTime:
                    type: integer
                symbols:
                    items:
                        properties:
                            OrderType:
                                items:
                                    type: string
                                type: array
                            baseAsset:
                                type: string
                            baseAssetPrecision:
                                type: integer
                            contractType:
                                type: string
                            deliveryDate:
                                type: integer
                            filters:
                                items:
                                    properties:
                                        filterType:
                                            type: string
                                        maxPrice:
                                            type: string
                                        minPrice:
                                            type: string
                                        tickSize:
                                            type: string
                                    type: object
                                type: array
                            liquidationFee:
                                type: string
                            maintMarginPercent:
                                type: string
                            marginAsset:
                                type: string
                            marketTakeBound:
                                type: string
                            onboardDate:
                                type: integer
                            pair:
                                type: string
                            pricePrecision:
                                type: integer
                            quantityPrecision:
                                type: integer
                            quoteAsset:
                                type: string
                            quotePrecision:
                                type: integer
                            requiredMarginPercent:
                                type: string
                            settlePlan:
                                type: integer
                            status:
                                type: string
                            symbol:
                                type: string
                            timeInForce:
                                items:
                                    type: string
                                type: array
                            triggerProtect:
                                type: string
                            underlyingSubType:
                                items:
                                    type: string
                                type: array
                            underlyingType:
                                type: string
                        type: object
                    type: array
                timezone:
                    type: string
            type: object
        UmfuturesGetFeeBurnV1Resp:
            example: '{ "feeBurn": true  }'
            properties:
                feeBurn:
                    type: boolean
            type: object
        UmfuturesGetForceOrdersV1Resp:
            example: '[ { "orderId": 6071832819, "symbol": "BTCUSDT", "status": "FILLED", "clientOrderId": "autoclose-1596107620040000020", "price": "10871.09", "avgPrice": "10913.21000", "origQty": "0.001", "executedQty": "0.001", "cumQuote": "10.91321", "timeInForce": "IOC", "type": "LIMIT", "reduceOnly": false, "closePosition": false, "side": "SELL", "positionSide": "BOTH", "stopPrice": "0", "workingType": "CONTRACT_PRICE", "origType": "LIMIT", "time": 1596107620044, "updateTime": 1596107620087 }, { "orderId": 6072734303, "symbol": "BTCUSDT", "status": "FILLED", "clientOrderId": "adl_autoclose", "price": "11023.14", "avgPrice": "10979.82000", "origQty": "0.001", "executedQty": "0.001", "cumQuote": "10.97982", "timeInForce": "GTC", "type": "LIMIT", "reduceOnly": false, "closePosition": false, "side": "BUY", "positionSide": "SHORT", "stopPrice": "0", "workingType": "CONTRACT_PRICE", "origType": "LIMIT", "time": 1596110725059, "updateTime": 1596110725071 } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetForceOrdersV1RespItem'
            type: array
        UmfuturesGetForceOrdersV1RespItem:
            properties:
                avgPrice:
                    type: string
                clientOrderId:
                    type: string
                closePosition:
                    type: boolean
                cumQuote:
                    type: string
                executedQty:
                    type: string
                orderId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origType:
                    type: string
                positionSide:
                    type: string
                price:
                    type: string
                reduceOnly:
                    type: boolean
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
                workingType:
                    type: string
            type: object
        UmfuturesGetFundingInfoV1Resp:
            example: '[ { "symbol": "BLZUSDT", "adjustedFundingRateCap": "0.02500000", "adjustedFundingRateFloor": "-0.02500000", "fundingIntervalHours": 8, "disclaimer": false    } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetFundingInfoV1RespItem'
            type: array
        UmfuturesGetFundingInfoV1RespItem:
            properties:
                adjustedFundingRateCap:
                    type: string
                adjustedFundingRateFloor:
                    type: string
                disclaimer:
                    type: boolean
                fundingIntervalHours:
                    type: integer
                symbol:
                    type: string
            type: object
        UmfuturesGetFundingRateV1Resp:
            example: '[ { "symbol": "BTCUSDT", "fundingRate": "-0.03750000", "fundingTime": 1570608000000, "markPrice": "34287.54619963"    }, { "symbol": "BTCUSDT", "fundingRate": "0.00010000", "fundingTime": 1570636800000, "markPrice": "34287.54619963" } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetFundingRateV1RespItem'
            type: array
        UmfuturesGetFundingRateV1RespItem:
            properties:
                fundingRate:
                    type: string
                fundingTime:
                    format: int64
                    type: integer
                markPrice:
                    type: string
                symbol:
                    type: string
            type: object
        UmfuturesGetFuturesDataBasisResp:
            example: '[ { "indexPrice": "34400.15945055", "contractType": "PERPETUAL", "basisRate": "0.0004", "futuresPrice": "34414.10", "annualizedBasisRate": "", "basis": "13.94054945", "pair": "BTCUSDT", "timestamp": 1698742800000 } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetFuturesDataBasisRespItem'
            type: array
        UmfuturesGetFuturesDataBasisRespItem:
            properties:
                annualizedBasisRate:
                    type: string
                basis:
                    type: string
                basisRate:
                    type: string
                contractType:
                    type: string
                futuresPrice:
                    type: string
                indexPrice:
                    type: string
                pair:
                    type: string
                timestamp:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetFuturesDataDeliveryPriceResp:
            example: '[ { "deliveryTime": 1695945600000, "deliveryPrice": 27103.00000000 }, { "deliveryTime": 1688083200000, "deliveryPrice": 30733.60000000 }, { "deliveryTime": 1680220800000, "deliveryPrice": 27814.20000000 }, { "deliveryTime": 1648166400000, "deliveryPrice": 44066.30000000 } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetFuturesDataDeliveryPriceRespItem'
            type: array
        UmfuturesGetFuturesDataDeliveryPriceRespItem:
            properties:
                deliveryPrice:
                    type: number
                deliveryTime:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetFuturesDataGlobalLongShortAccountRatioResp:
            example: '[ { "symbol":"BTCUSDT",   "longShortRatio":"0.1960",   "longAccount": "0.6622",    "shortAccount":"0.3378", "timestamp":"1583139600000" }, { "symbol":"BTCUSDT", "longShortRatio":"1.9559", "longAccount": "0.6617", "shortAccount":"0.3382", "timestamp":"1583139900000" } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetFuturesDataGlobalLongShortAccountRatioRespItem'
            type: array
        UmfuturesGetFuturesDataGlobalLongShortAccountRatioRespItem:
            properties:
                longAccount:
                    type: string
                longShortRatio:
                    type: string
                shortAccount:
                    type: string
                symbol:
                    type: string
                timestamp:
                    type: string
            type: object
        UmfuturesGetFuturesDataOpenInterestHistResp:
            example: '[ { "symbol":"BTCUSDT", "sumOpenInterest":"20403.63700000",   "sumOpenInterestValue": "150570784.07809979",    "timestamp":"1583127900000" }, { "symbol":"BTCUSDT", "sumOpenInterest":"20401.36700000", "sumOpenInterestValue":"149940752.14464448", "timestamp":"1583128200000" } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetFuturesDataOpenInterestHistRespItem'
            type: array
        UmfuturesGetFuturesDataOpenInterestHistRespItem:
            properties:
                sumOpenInterest:
                    type: string
                sumOpenInterestValue:
                    type: string
                symbol:
                    type: string
                timestamp:
                    type: string
            type: object
        UmfuturesGetFuturesDataTakerlongshortRatioResp:
            example: '[ { "buySellRatio":"1.5586", "buyVol": "387.3300", "sellVol":"248.5030", "timestamp":"1585614900000" }, { "buySellRatio":"1.3104", "buyVol": "343.9290", "sellVol":"248.5030", "timestamp":"1583139900000" } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetFuturesDataTakerlongshortRatioRespItem'
            type: array
        UmfuturesGetFuturesDataTakerlongshortRatioRespItem:
            properties:
                buySellRatio:
                    type: string
                buyVol:
                    type: string
                sellVol:
                    type: string
                timestamp:
                    type: string
            type: object
        UmfuturesGetFuturesDataTopLongShortAccountRatioResp:
            example: '[ { "symbol":"BTCUSDT", "longShortRatio":"1.8105",   "longAccount": "0.6442",    "shortAccount":"0.3558",    "timestamp":"1583139600000" }, { "symbol":"BTCUSDT", "longShortRatio":"0.5576", "longAccount": "0.3580", "shortAccount":"0.6420", "timestamp":"1583139900000" } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetFuturesDataTopLongShortAccountRatioRespItem'
            type: array
        UmfuturesGetFuturesDataTopLongShortAccountRatioRespItem:
            properties:
                longAccount:
                    type: string
                longShortRatio:
                    type: string
                shortAccount:
                    type: string
                symbol:
                    type: string
                timestamp:
                    type: string
            type: object
        UmfuturesGetFuturesDataTopLongShortPositionRatioResp:
            example: '[ { "symbol":"BTCUSDT", "longShortRatio":"1.4342", "longAccount": "0.5891",  "shortAccount":"0.4108",  "timestamp":"1583139600000" }, { "symbol":"BTCUSDT", "longShortRatio":"1.4337", "longAccount": "0.3583", "shortAccount":"0.6417", "timestamp":"1583139900000" } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetFuturesDataTopLongShortPositionRatioRespItem'
            type: array
        UmfuturesGetFuturesDataTopLongShortPositionRatioRespItem:
            properties:
                longAccount:
                    type: string
                longShortRatio:
                    type: string
                shortAccount:
                    type: string
                symbol:
                    type: string
                timestamp:
                    type: string
            type: object
        UmfuturesGetHistoricalTradesV1Resp:
            example: '[ { "id": 28457, "price": "4.00000100", "qty": "12.00000000", "quoteQty": "8000.00", "time": 1499865549590, "isBuyerMaker": true } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetHistoricalTradesV1RespItem'
            type: array
        UmfuturesGetHistoricalTradesV1RespItem:
            properties:
                id:
                    type: integer
                isBuyerMaker:
                    type: boolean
                price:
                    type: string
                qty:
                    type: string
                quoteQty:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetIncomeAsynIdV1Resp:
            example: '{ "downloadId":"545923594199212032", "status":"completed",      "url":"www.binance.com",   "notified":true,           "expirationTimestamp":1645009771000,   "isExpired":null }'
            properties:
                downloadId:
                    type: string
                expirationTimestamp:
                    format: int64
                    type: integer
                isExpired:
                    nullable: true
                    type: object
                notified:
                    type: boolean
                status:
                    type: string
                url:
                    type: string
            type: object
        UmfuturesGetIncomeAsynV1Resp:
            example: '{ "avgCostTimestampOfLast30d":7241837,  "downloadId":"546975389218332672" }'
            properties:
                avgCostTimestampOfLast30d:
                    type: integer
                downloadId:
                    type: string
            type: object
        UmfuturesGetIncomeV1Resp:
            example: '[ { "symbol": "", "incomeType": "TRANSFER", "income": "-0.37500000",   "asset": "USDT", "info":"TRANSFER", "time": 1570608000000, "tranId":9689322392, "tradeId":"" }, { "symbol": "BTCUSDT", "incomeType": "COMMISSION", "income": "-0.01000000", "asset": "USDT", "info":"COMMISSION", "time": 1570636800000, "tranId":9689322392, "tradeId":"2059192" } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetIncomeV1RespItem'
            type: array
        UmfuturesGetIncomeV1RespItem:
            properties:
                asset:
                    type: string
                income:
                    type: string
                incomeType:
                    type: string
                info:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
                tradeId:
                    type: string
                tranId:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetIndexInfoV1Resp:
            example: '[ { "symbol": "DEFIUSDT", "time": 1589437530011,     "component": "baseAsset",  "baseAssetList":[ { "baseAsset":"BAL", "quoteAsset": "USDT", "weightInQuantity":"1.04406228", "weightInPercentage":"0.02783900" }, { "baseAsset":"BAND", "quoteAsset": "USDT", "weightInQuantity":"3.53782729", "weightInPercentage":"0.03935200" } ] } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetIndexInfoV1RespItem'
            type: array
        UmfuturesGetIndexInfoV1RespItem:
            properties:
                baseAssetList:
                    items:
                        properties:
                            baseAsset:
                                type: string
                            quoteAsset:
                                type: string
                            weightInPercentage:
                                type: string
                            weightInQuantity:
                                type: string
                        type: object
                    type: array
                component:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetIndexPriceKlinesV1Resp:
            example: '[ [ 1591256400000,       "9653.69440000",     "9653.69640000",      "9651.38600000",      "9651.55200000",      "0",  1591256459999,       "0",     60,                 "0",     "0",       "0"  ] ]'
            items:
                items:
                    oneOf:
                        - type: string
                        - format: int64
                          type: integer
                type: array
            type: array
        UmfuturesGetKlinesV1Resp:
            example: '[ [ 1499040000000,       "0.01634790",        "0.80000000",        "0.01575800",        "0.01577100",        "148976.11427815",   1499644799999,       "2434.19055334",     308,                 "1756.87402397",     "28.46694368",       "17928899.62484339"  ] ]'
            items:
                items:
                    oneOf:
                        - type: string
                        - format: int64
                          type: integer
                type: array
            type: array
        UmfuturesGetLeverageBracketV1Resp:
            oneOf:
                - items:
                    $ref: '#/components/schemas/UmfuturesGetLeverageBracketV1RespItem'
                  type: array
                - $ref: '#/components/schemas/UmfuturesGetLeverageBracketV1RespItem'
        UmfuturesGetLeverageBracketV1RespItem:
            example: '{ "symbol": "ETHUSDT", "notionalCoef": 1.50,   "brackets": [ { "bracket": 1,    "initialLeverage": 75,   "notionalCap": 10000,   "notionalFloor": 0,   "maintMarginRatio": 0.0065,  "cum":0  } ] }'
            properties:
                brackets:
                    items:
                        properties:
                            bracket:
                                type: integer
                            cum:
                                type: integer
                            initialLeverage:
                                type: integer
                            maintMarginRatio:
                                type: number
                            notionalCap:
                                type: integer
                            notionalFloor:
                                type: integer
                        type: object
                    type: array
                notionalCoef:
                    type: number
                symbol:
                    type: string
            type: object
        UmfuturesGetMarkPriceKlinesV1Resp:
            example: '[ [ 1591256460000,      "9653.29201333",     "9654.56401333",      "9653.07367333",      "9653.07367333",      "0",  1591256519999,       "0",     60,                  "0",     "0",        "0"  ] ]'
            items:
                items:
                    oneOf:
                        - type: string
                        - format: int64
                          type: integer
                type: array
            type: array
        UmfuturesGetMultiAssetsMarginV1Resp:
            example: '{ "multiAssetsMargin": true  }'
            properties:
                multiAssetsMargin:
                    type: boolean
            type: object
        UmfuturesGetOpenInterestV1Resp:
            example: '{ "openInterest": "10659.509", "symbol": "BTCUSDT", "time": 1589437530011    }'
            properties:
                openInterest:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetOpenOrderV1Resp:
            example: '{ "avgPrice": "0.00000", "clientOrderId": "abc", "cumQuote": "0", "executedQty": "0", "orderId": 1917641, "origQty": "0.40", "origType": "TRAILING_STOP_MARKET", "price": "0", "reduceOnly": false, "side": "BUY", "positionSide": "SHORT", "status": "NEW", "stopPrice": "9300", "closePosition": false,    "symbol": "BTCUSDT", "time": 1579276756075, "timeInForce": "GTC", "type": "TRAILING_STOP_MARKET", "activatePrice": "9020", "priceRate": "0.3", "updateTime": 1579276756075, "workingType": "CONTRACT_PRICE", "priceProtect": false,             "priceMatch": "NONE",               "selfTradePreventionMode": "NONE",  "goodTillDate": 0       }'
            properties:
                activatePrice:
                    type: string
                avgPrice:
                    type: string
                clientOrderId:
                    type: string
                closePosition:
                    type: boolean
                cumQuote:
                    type: string
                executedQty:
                    type: string
                goodTillDate:
                    format: int64
                    type: integer
                orderId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origType:
                    type: string
                positionSide:
                    type: string
                price:
                    type: string
                priceMatch:
                    type: string
                priceProtect:
                    type: boolean
                priceRate:
                    type: string
                reduceOnly:
                    type: boolean
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
                workingType:
                    type: string
            type: object
        UmfuturesGetOpenOrdersV1Resp:
            example: '[ { "avgPrice": "0.00000", "clientOrderId": "abc", "cumQuote": "0", "executedQty": "0", "orderId": 1917641, "origQty": "0.40", "origType": "TRAILING_STOP_MARKET", "price": "0", "reduceOnly": false, "side": "BUY", "positionSide": "SHORT", "status": "NEW", "stopPrice": "9300", "closePosition": false,    "symbol": "BTCUSDT", "time": 1579276756075, "timeInForce": "GTC", "type": "TRAILING_STOP_MARKET", "activatePrice": "9020", "priceRate": "0.3", "updateTime": 1579276756075, "workingType": "CONTRACT_PRICE", "priceProtect": false,             "priceMatch": "NONE",               "selfTradePreventionMode": "NONE",  "goodTillDate": 0       } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetOpenOrdersV1RespItem'
            type: array
        UmfuturesGetOpenOrdersV1RespItem:
            properties:
                activatePrice:
                    type: string
                avgPrice:
                    type: string
                clientOrderId:
                    type: string
                closePosition:
                    type: boolean
                cumQuote:
                    type: string
                executedQty:
                    type: string
                goodTillDate:
                    format: int64
                    type: integer
                orderId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origType:
                    type: string
                positionSide:
                    type: string
                price:
                    type: string
                priceMatch:
                    type: string
                priceProtect:
                    type: boolean
                priceRate:
                    type: string
                reduceOnly:
                    type: boolean
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
                workingType:
                    type: string
            type: object
        UmfuturesGetOrderAmendmentV1Resp:
            example: '[ { "amendmentId": 5363, "symbol": "BTCUSDT", "pair": "BTCUSDT", "orderId": 20072994037, "clientOrderId": "LJ9R4QZDihCaS8UAOOLpgW", "time": 1629184560899, "amendment": { "price": { "before": "30004", "after": "30003.2" }, "origQty": { "before": "1", "after": "1" }, "count": 3 } }, { "amendmentId": 5361, "symbol": "BTCUSDT", "pair": "BTCUSDT", "orderId": 20072994037, "clientOrderId": "LJ9R4QZDihCaS8UAOOLpgW", "time": 1629184533946, "amendment": { "price": { "before": "30005", "after": "30004" }, "origQty": { "before": "1", "after": "1" }, "count": 2 } }, { "amendmentId": 5325, "symbol": "BTCUSDT", "pair": "BTCUSDT", "orderId": 20072994037, "clientOrderId": "LJ9R4QZDihCaS8UAOOLpgW", "time": 1629182711787, "amendment": { "price": { "before": "30002", "after": "30005" }, "origQty": { "before": "1", "after": "1" }, "count": 1 } } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetOrderAmendmentV1RespItem'
            type: array
        UmfuturesGetOrderAmendmentV1RespItem:
            properties:
                amendment:
                    properties:
                        count:
                            type: integer
                        origQty:
                            properties:
                                after:
                                    type: string
                                before:
                                    type: string
                            type: object
                        price:
                            properties:
                                after:
                                    type: string
                                before:
                                    type: string
                            type: object
                    type: object
                amendmentId:
                    format: int64
                    type: integer
                clientOrderId:
                    type: string
                orderId:
                    format: int64
                    type: integer
                pair:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetOrderAsynIdV1Resp:
            example: '{ "downloadId":"545923594199212032", "status":"completed",      "url":"www.binance.com",   "notified":true,           "expirationTimestamp":1645009771000,   "isExpired":null }'
            properties:
                downloadId:
                    type: string
                expirationTimestamp:
                    format: int64
                    type: integer
                isExpired:
                    nullable: true
                    type: object
                notified:
                    type: boolean
                status:
                    type: string
                url:
                    type: string
            type: object
        UmfuturesGetOrderAsynV1Resp:
            example: '{ "avgCostTimestampOfLast30d":7241837,  "downloadId":"546975389218332672" }'
            properties:
                avgCostTimestampOfLast30d:
                    format: int64
                    type: integer
                downloadId:
                    type: string
            type: object
        UmfuturesGetOrderV1Resp:
            example: '{ "avgPrice": "0.00000", "clientOrderId": "abc", "cumQuote": "0", "executedQty": "0", "orderId": 1917641, "origQty": "0.40", "origType": "TRAILING_STOP_MARKET", "price": "0", "reduceOnly": false, "side": "BUY", "positionSide": "SHORT", "status": "NEW", "stopPrice": "9300", "closePosition": false,    "symbol": "BTCUSDT", "time": 1579276756075, "timeInForce": "GTC", "type": "TRAILING_STOP_MARKET", "activatePrice": "9020", "priceRate": "0.3", "updateTime": 1579276756075, "workingType": "CONTRACT_PRICE", "priceProtect": false,               "priceMatch": "NONE",               "selfTradePreventionMode": "NONE",  "goodTillDate": 0                   }'
            properties:
                activatePrice:
                    type: string
                avgPrice:
                    type: string
                clientOrderId:
                    type: string
                closePosition:
                    type: boolean
                cumQuote:
                    type: string
                executedQty:
                    type: string
                goodTillDate:
                    format: int64
                    type: integer
                orderId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origType:
                    type: string
                positionSide:
                    type: string
                price:
                    type: string
                priceMatch:
                    type: string
                priceProtect:
                    type: boolean
                priceRate:
                    type: string
                reduceOnly:
                    type: boolean
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
                workingType:
                    type: string
            type: object
        UmfuturesGetPingV1Resp:
            example: '{}'
            type: object
        UmfuturesGetPmAccountInfoV1Resp:
            example: '{ "maxWithdrawAmountUSD": "1627523.32459208",    "asset": "BTC",             "maxWithdrawAmount": "27.43689636"         }'
            properties:
                asset:
                    type: string
                maxWithdrawAmount:
                    type: string
                maxWithdrawAmountUSD:
                    type: string
            type: object
        UmfuturesGetPositionMarginHistoryV1Resp:
            example: '[ { "symbol": "BTCUSDT", "type": 1, "deltaType": "USER_ADJUST", "amount": "23.36332311", "asset": "USDT", "time": 1578047897183, "positionSide": "BOTH" }, { "symbol": "BTCUSDT", "type": 1, "deltaType": "USER_ADJUST", "amount": "100", "asset": "USDT", "time": 1578047900425, "positionSide": "LONG" } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetPositionMarginHistoryV1RespItem'
            type: array
        UmfuturesGetPositionMarginHistoryV1RespItem:
            properties:
                amount:
                    type: string
                asset:
                    type: string
                deltaType:
                    type: string
                positionSide:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
                type:
                    type: integer
            type: object
        UmfuturesGetPositionRiskV2Resp:
            example: '[ { "entryPrice": "0.00000", "breakEvenPrice": "0.0", "marginType": "isolated", "isAutoAddMargin": "false", "isolatedMargin": "0.00000000", "leverage": "10", "liquidationPrice": "0", "markPrice": "6679.50671178", "maxNotionalValue": "20000000", "positionAmt": "0.000", "notional": "0", "isolatedWallet": "0", "symbol": "BTCUSDT", "unRealizedProfit": "0.00000000", "positionSide": "BOTH", "updateTime": 0 } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetPositionRiskV2RespItem'
            type: array
        UmfuturesGetPositionRiskV2RespItem:
            properties:
                breakEvenPrice:
                    type: string
                entryPrice:
                    type: string
                isAutoAddMargin:
                    type: string
                isolatedMargin:
                    type: string
                isolatedWallet:
                    type: string
                leverage:
                    type: string
                liquidationPrice:
                    type: string
                marginType:
                    type: string
                markPrice:
                    type: string
                maxNotionalValue:
                    type: string
                notional:
                    type: string
                positionAmt:
                    type: string
                positionSide:
                    type: string
                symbol:
                    type: string
                unRealizedProfit:
                    type: string
                updateTime:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetPositionRiskV3Resp:
            example: '[ { "symbol": "ADAUSDT", "positionSide": "BOTH",                "positionAmt": "30", "entryPrice": "0.385", "breakEvenPrice": "0.385077", "markPrice": "0.41047590", "unRealizedProfit": "0.76427700",      "liquidationPrice": "0", "isolatedMargin": "0", "notional": "12.31427700", "marginAsset": "USDT", "isolatedWallet": "0", "initialMargin": "0.61571385",         "maintMargin": "0.08004280",           "positionInitialMargin": "0.61571385", "openOrderInitialMargin": "0",         "adl": 2, "bidNotional": "0",                    "askNotional": "0",                    "updateTime": 1720736417660 } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetPositionRiskV3RespItem'
            type: array
        UmfuturesGetPositionRiskV3RespItem:
            properties:
                adl:
                    type: integer
                askNotional:
                    type: string
                bidNotional:
                    type: string
                breakEvenPrice:
                    type: string
                entryPrice:
                    type: string
                initialMargin:
                    type: string
                isolatedMargin:
                    type: string
                isolatedWallet:
                    type: string
                liquidationPrice:
                    type: string
                maintMargin:
                    type: string
                marginAsset:
                    type: string
                markPrice:
                    type: string
                notional:
                    type: string
                openOrderInitialMargin:
                    type: string
                positionAmt:
                    type: string
                positionInitialMargin:
                    type: string
                positionSide:
                    type: string
                symbol:
                    type: string
                unRealizedProfit:
                    type: string
                updateTime:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetPositionSideDualV1Resp:
            example: '{ "dualSidePosition": true  }'
            properties:
                dualSidePosition:
                    type: boolean
            type: object
        UmfuturesGetPremiumIndexKlinesV1Resp:
            example: '[ [ 1691603820000,           "-0.00042931",           "-0.00023641",           "-0.00059406",           "-0.00043659",           "0",                     1691603879999,           "0",                     12,                      "0",                     "0",                     "0"                      ] ]'
            items:
                items:
                    oneOf:
                        - type: string
                        - format: int64
                          type: integer
                type: array
            type: array
        UmfuturesGetPremiumIndexV1Resp:
            oneOf:
                - items:
                    $ref: '#/components/schemas/UmfuturesGetPremiumIndexV1RespItem'
                  type: array
                - $ref: '#/components/schemas/UmfuturesGetPremiumIndexV1RespItem'
        UmfuturesGetPremiumIndexV1RespItem:
            example: '{ "symbol": "BTCUSDT", "markPrice": "11793.63104562", "indexPrice": "11781.80495970", "estimatedSettlePrice": "11781.16138815",  "lastFundingRate": "0.00038246",   "interestRate": "0.00010000", "nextFundingTime": 1597392000000, "time": 1597370495002 }'
            properties:
                estimatedSettlePrice:
                    type: string
                indexPrice:
                    type: string
                interestRate:
                    type: string
                lastFundingRate:
                    type: string
                markPrice:
                    type: string
                nextFundingTime:
                    format: int64
                    type: integer
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetRateLimitOrderV1Resp:
            example: '[ { "rateLimitType": "ORDERS", "interval": "SECOND", "intervalNum": 10, "limit": 10000 }, { "rateLimitType": "ORDERS", "interval": "MINUTE", "intervalNum": 1, "limit": 20000 } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetRateLimitOrderV1RespItem'
            type: array
        UmfuturesGetRateLimitOrderV1RespItem:
            properties:
                interval:
                    type: string
                intervalNum:
                    type: integer
                limit:
                    type: integer
                rateLimitType:
                    type: string
            type: object
        UmfuturesGetSymbolConfigV1Resp:
            example: '[ { "symbol": "BTCUSDT", "marginType": "CROSSED", "isAutoAddMargin": "false", "leverage": 21, "maxNotionalValue": "1000000" } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetSymbolConfigV1RespItem'
            type: array
        UmfuturesGetSymbolConfigV1RespItem:
            properties:
                isAutoAddMargin:
                    type: string
                leverage:
                    type: integer
                marginType:
                    type: string
                maxNotionalValue:
                    type: string
                symbol:
                    type: string
            type: object
        UmfuturesGetTicker24hrV1Resp:
            oneOf:
                - items:
                    $ref: '#/components/schemas/UmfuturesGetTicker24hrV1RespItem'
                  type: array
                - $ref: '#/components/schemas/UmfuturesGetTicker24hrV1RespItem'
        UmfuturesGetTicker24hrV1RespItem:
            example: '{ "symbol": "BTCUSDT", "priceChange": "-94.99999800", "priceChangePercent": "-95.960", "weightedAvgPrice": "0.29628482", "lastPrice": "4.00000200", "lastQty": "200.00000000", "openPrice": "99.00000000", "highPrice": "100.00000000", "lowPrice": "0.10000000", "volume": "8913.30000000", "quoteVolume": "15.30000000", "openTime": 1499783499040, "closeTime": 1499869899040, "firstId": 28385,    "lastId": 28460,     "count": 76          }'
            properties:
                closeTime:
                    format: int64
                    type: integer
                count:
                    type: integer
                firstId:
                    format: int64
                    type: integer
                highPrice:
                    type: string
                lastId:
                    format: int64
                    type: integer
                lastPrice:
                    type: string
                lastQty:
                    type: string
                lowPrice:
                    type: string
                openPrice:
                    type: string
                openTime:
                    format: int64
                    type: integer
                priceChange:
                    type: string
                priceChangePercent:
                    type: string
                quoteVolume:
                    type: string
                symbol:
                    type: string
                volume:
                    type: string
                weightedAvgPrice:
                    type: string
            type: object
        UmfuturesGetTickerBookTickerV1Resp:
            oneOf:
                - items:
                    $ref: '#/components/schemas/UmfuturesGetTickerBookTickerV1RespItem'
                  type: array
                - $ref: '#/components/schemas/UmfuturesGetTickerBookTickerV1RespItem'
        UmfuturesGetTickerBookTickerV1RespItem:
            example: '{ "symbol": "BTCUSDT", "bidPrice": "4.00000000", "bidQty": "431.00000000", "askPrice": "4.00000200", "askQty": "9.00000000", "time": 1589437530011    }'
            properties:
                askPrice:
                    type: string
                askQty:
                    type: string
                bidPrice:
                    type: string
                bidQty:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetTickerPriceV1Resp:
            oneOf:
                - items:
                    $ref: '#/components/schemas/UmfuturesGetTickerPriceV1RespItem'
                  type: array
                - $ref: '#/components/schemas/UmfuturesGetTickerPriceV1RespItem'
        UmfuturesGetTickerPriceV1RespItem:
            example: '{ "symbol": "BTCUSDT", "price": "6000.01", "time": 1589437530011    }'
            properties:
                price:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetTickerPriceV2Resp:
            oneOf:
                - items:
                    $ref: '#/components/schemas/UmfuturesGetTickerPriceV2RespItem'
                  type: array
                - $ref: '#/components/schemas/UmfuturesGetTickerPriceV2RespItem'
        UmfuturesGetTickerPriceV2RespItem:
            example: '{ "symbol": "BTCUSDT", "price": "6000.01", "time": 1589437530011    }'
            properties:
                price:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetTimeV1Resp:
            example: '{ "serverTime": 1499827319559 }'
            properties:
                serverTime:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetTradeAsynIdV1Resp:
            example: '{ "downloadId":"545923594199212032", "status":"completed",      "url":"www.binance.com",   "notified":true,           "expirationTimestamp":1645009771000,   "isExpired":null }'
            properties:
                downloadId:
                    type: string
                expirationTimestamp:
                    format: int64
                    type: integer
                isExpired:
                    nullable: true
                    type: object
                notified:
                    type: boolean
                status:
                    type: string
                url:
                    type: string
            type: object
        UmfuturesGetTradeAsynV1Resp:
            example: '{ "avgCostTimestampOfLast30d":7241837,  "downloadId":"546975389218332672" }'
            properties:
                avgCostTimestampOfLast30d:
                    type: integer
                downloadId:
                    type: string
            type: object
        UmfuturesGetTradesV1Resp:
            example: '[ { "id": 28457, "price": "4.00000100", "qty": "12.00000000", "quoteQty": "48.00", "time": 1499865549590, "isBuyerMaker": true } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetTradesV1RespItem'
            type: array
        UmfuturesGetTradesV1RespItem:
            properties:
                id:
                    type: integer
                isBuyerMaker:
                    type: boolean
                price:
                    type: string
                qty:
                    type: string
                quoteQty:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        UmfuturesGetUserTradesV1Resp:
            example: '[ { "buyer": false, "commission": "-0.07819010", "commissionAsset": "USDT", "id": 698759, "maker": false, "orderId": 25851813, "price": "7819.01", "qty": "0.002", "quoteQty": "15.63802", "realizedPnl": "-0.91539999", "side": "SELL", "positionSide": "SHORT", "symbol": "BTCUSDT", "time": 1569514978020 } ]'
            items:
                $ref: '#/components/schemas/UmfuturesGetUserTradesV1RespItem'
            type: array
        UmfuturesGetUserTradesV1RespItem:
            properties:
                buyer:
                    type: boolean
                commission:
                    type: string
                commissionAsset:
                    type: string
                id:
                    type: integer
                maker:
                    type: boolean
                orderId:
                    format: int64
                    type: integer
                positionSide:
                    type: string
                price:
                    type: string
                qty:
                    type: string
                quoteQty:
                    type: string
                realizedPnl:
                    type: string
                side:
                    type: string
                symbol:
                    type: string
                time:
                    format: int64
                    type: integer
            type: object
        UmfuturesUpdateBatchOrdersV1Req:
            properties:
                batchOrders:
                    items:
                        $ref: '#/components/schemas/UmfuturesUpdateBatchOrdersV1ReqBatchOrdersItem'
                    type: array
                recvWindow:
                    format: int64
                    type: integer
                timestamp:
                    format: int64
                    type: integer
            required:
                - batchOrders
                - timestamp
            type: object
        UmfuturesUpdateBatchOrdersV1ReqBatchOrdersItem:
            properties:
                orderId:
                    format: int64
                    type: integer
                origClientOrderId:
                    default: ""
                    type: string
                price:
                    default: ""
                    type: string
                priceMatch:
                    default: ""
                    type: string
                quantity:
                    default: ""
                    type: string
                side:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
            required:
                - symbol
                - side
                - quantity
                - price
            type: object
        UmfuturesUpdateBatchOrdersV1Resp:
            example: '[ { "orderId": 20072994037, "symbol": "BTCUSDT", "pair": "BTCUSDT", "status": "NEW", "clientOrderId": "LJ9R4QZDihCaS8UAOOLpgW", "price": "30005", "avgPrice": "0.0", "origQty": "1", "executedQty": "0", "cumQty": "0", "cumBase": "0", "timeInForce": "GTC", "type": "LIMIT", "reduceOnly": false, "closePosition": false, "side": "BUY", "positionSide": "LONG", "stopPrice": "0", "workingType": "CONTRACT_PRICE", "priceProtect": false, "origType": "LIMIT", "priceMatch": "NONE",               "selfTradePreventionMode": "NONE",  "goodTillDate": 0,                  "updateTime": 1629182711600 }, { "code": -2022, "msg": "ReduceOnly Order is rejected." } ]'
            items:
                $ref: '#/components/schemas/UmfuturesUpdateBatchOrdersV1RespItem'
            type: array
        UmfuturesUpdateBatchOrdersV1RespItem:
            properties:
                avgPrice:
                    type: string
                clientOrderId:
                    type: string
                closePosition:
                    type: boolean
                cumBase:
                    type: string
                cumQty:
                    type: string
                executedQty:
                    type: string
                goodTillDate:
                    type: integer
                orderId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origType:
                    type: string
                pair:
                    type: string
                positionSide:
                    type: string
                price:
                    type: string
                priceMatch:
                    type: string
                priceProtect:
                    type: boolean
                reduceOnly:
                    type: boolean
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
                workingType:
                    type: string
            type: object
        UmfuturesUpdateListenKeyV1Resp:
            example: '{ "listenKey": "3HBntNTepshgEdjIwSUIBgB9keLyOCg5qv3n6bYAtktG8ejcaW5HXz9Vx1JgIieg"  }'
            properties:
                listenKey:
                    type: string
            type: object
        UmfuturesUpdateOrderV1Req:
            properties:
                orderId:
                    format: int64
                    type: integer
                origClientOrderId:
                    default: ""
                    type: string
                price:
                    default: ""
                    type: string
                priceMatch:
                    default: ""
                    type: string
                quantity:
                    default: ""
                    type: string
                recvWindow:
                    format: int64
                    type: integer
                side:
                    default: ""
                    type: string
                symbol:
                    default: ""
                    type: string
                timestamp:
                    format: int64
                    type: integer
            required:
                - symbol
                - side
                - quantity
                - price
                - timestamp
            type: object
        UmfuturesUpdateOrderV1Resp:
            example: '{ "orderId": 20072994037, "symbol": "BTCUSDT", "pair": "BTCUSDT", "status": "NEW", "clientOrderId": "LJ9R4QZDihCaS8UAOOLpgW", "price": "30005", "avgPrice": "0.0", "origQty": "1", "executedQty": "0", "cumQty": "0", "cumBase": "0", "timeInForce": "GTC", "type": "LIMIT", "reduceOnly": false, "closePosition": false, "side": "BUY", "positionSide": "LONG", "stopPrice": "0", "workingType": "CONTRACT_PRICE", "priceProtect": false, "origType": "LIMIT", "priceMatch": "NONE",               "selfTradePreventionMode": "NONE",  "goodTillDate": 0,                  "updateTime": 1629182711600 }'
            properties:
                avgPrice:
                    type: string
                clientOrderId:
                    type: string
                closePosition:
                    type: boolean
                cumBase:
                    type: string
                cumQty:
                    type: string
                executedQty:
                    type: string
                goodTillDate:
                    format: int64
                    type: integer
                orderId:
                    format: int64
                    type: integer
                origQty:
                    type: string
                origType:
                    type: string
                pair:
                    type: string
                positionSide:
                    type: string
                price:
                    type: string
                priceMatch:
                    type: string
                priceProtect:
                    type: boolean
                reduceOnly:
                    type: boolean
                selfTradePreventionMode:
                    type: string
                side:
                    type: string
                status:
                    type: string
                stopPrice:
                    type: string
                symbol:
                    type: string
                timeInForce:
                    type: string
                type:
                    type: string
                updateTime:
                    format: int64
                    type: integer
                workingType:
                    type: string
            type: object
    securitySchemes:
        ApiKey:
            in: header
            name: X-MBX-APIKEY
            type: apiKey
info:
    description: OpenAPI specification for Binance exchange - Umfutures API
    title: Binance USD-M Futures API
    version: 0.1.0
openapi: 3.0.3
paths:
    /fapi/v1/accountConfig:
        get:
            description: Query account configuration
            operationId: UmfuturesGetAccountConfigV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetAccountConfigV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Futures Account Configuration(USER_DATA)
            tags:
                - Account
    /fapi/v1/adlQuantile:
        get:
            description: Position ADL Quantile Estimation
            operationId: UmfuturesGetAdlQuantileV1
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetAdlQuantileV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Position ADL Quantile Estimation(USER_DATA)
            tags:
                - Trade
    /fapi/v1/aggTrades:
        get:
            description: Get compressed, aggregate market trades. Market trades that fill in 100ms with the same price and the same taking side will have the quantity aggregated.
            operationId: UmfuturesGetAggTradesV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: ID to get aggregate trades from INCLUSIVE.
                  in: query
                  name: fromId
                  schema:
                    format: int64
                    type: integer
                - description: Timestamp in ms to get aggregate trades from INCLUSIVE.
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: Timestamp in ms to get aggregate trades until INCLUSIVE.
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetAggTradesV1Resp'
                    description: Successful operation
            summary: Compressed/Aggregate Trades List
            tags:
                - Market Data
    /fapi/v1/allOpenOrders:
        delete:
            description: Cancel All Open Orders
            operationId: UmfuturesDeleteAllOpenOrdersV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesDeleteAllOpenOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Cancel All Open Orders (TRADE)
            tags:
                - Trade
    /fapi/v1/allOrders:
        get:
            description: Get all account orders; active, canceled, or filled.
            operationId: UmfuturesGetAllOrdersV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetAllOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: All Orders (USER_DATA)
            tags:
                - Trade
    /fapi/v1/apiTradingStatus:
        get:
            description: Futures trading quantitative rules indicators, for more information on this, please refer to the Futures Trading Quantitative Rules
            operationId: UmfuturesGetApiTradingStatusV1
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetApiTradingStatusV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Futures Trading Quantitative Rules Indicators (USER_DATA)
            tags:
                - Account
    /fapi/v1/assetIndex:
        get:
            description: asset index for Multi-Assets mode
            operationId: UmfuturesGetAssetIndexV1
            parameters:
                - description: Asset pair
                  in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetAssetIndexV1Resp'
                    description: Successful operation
            summary: Multi-Assets Mode Asset Index
            tags:
                - Market Data
    /fapi/v1/batchOrders:
        delete:
            description: Cancel Multiple Orders
            operationId: UmfuturesDeleteBatchOrdersV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: max length 10 <br/> e.g. [1234567,2345678]
                  in: query
                  name: orderIdList
                  schema:
                    items:
                        format: int64
                        type: integer
                    type: array
                - description: max length 10<br/> e.g. [&#34;my_id_1&#34;,&#34;my_id_2&#34;], encode the double quotes. No space after comma.
                  in: query
                  name: origClientOrderIdList
                  schema:
                    items:
                        type: string
                    type: array
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesDeleteBatchOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Cancel Multiple Orders (TRADE)
            tags:
                - Trade
        post:
            description: Place Multiple Orders
            operationId: UmfuturesCreateBatchOrdersV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UmfuturesCreateBatchOrdersV1Req'
                description: The request body for UmfuturesCreateBatchOrdersV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesCreateBatchOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Place Multiple Orders(TRADE)
            tags:
                - Trade
        put:
            description: Modify Multiple Orders (TRADE)
            operationId: UmfuturesUpdateBatchOrdersV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UmfuturesUpdateBatchOrdersV1Req'
                description: The request body for UmfuturesUpdateBatchOrdersV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesUpdateBatchOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Modify Multiple Orders(TRADE)
            tags:
                - Trade
    /fapi/v1/commissionRate:
        get:
            description: Get User Commission Rate
            operationId: UmfuturesGetCommissionRateV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetCommissionRateV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: User Commission Rate (USER_DATA)
            tags:
                - Account
    /fapi/v1/constituents:
        get:
            description: Query index price constituents
            operationId: UmfuturesGetConstituentsV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetConstituentsV1Resp'
                    description: Successful operation
            summary: Query Index Price Constituents
            tags:
                - Market Data
    /fapi/v1/continuousKlines:
        get:
            description: |-
                Kline/candlestick bars for a specific contract type.
                Klines are uniquely identified by their open time.
            operationId: UmfuturesGetContinuousKlinesV1
            parameters:
                - in: query
                  name: pair
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: contractType
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: interval
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 500; max 1500.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1500
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetContinuousKlinesV1Resp'
                    description: Successful operation
            summary: Continuous Contract Kline/Candlestick Data
            tags:
                - Market Data
    /fapi/v1/convert/acceptQuote:
        post:
            description: Accept the offered quote by quote ID.
            operationId: UmfuturesCreateConvertAcceptQuoteV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UmfuturesCreateConvertAcceptQuoteV1Req'
                description: The request body for UmfuturesCreateConvertAcceptQuoteV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesCreateConvertAcceptQuoteV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Accept the offered quote (USER_DATA)
            tags:
                - Convert
    /fapi/v1/convert/exchangeInfo:
        get:
            description: Query for all convertible token pairs and the tokens’ respective upper/lower limits
            operationId: UmfuturesGetConvertExchangeInfoV1
            parameters:
                - description: User spends coin
                  in: query
                  name: fromAsset
                  schema:
                    default: ""
                    type: string
                - description: User receives coin
                  in: query
                  name: toAsset
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetConvertExchangeInfoV1Resp'
                    description: Successful operation
            summary: List All Convert Pairs
            tags:
                - Convert
    /fapi/v1/convert/getQuote:
        post:
            description: Request a quote for the requested token pairs
            operationId: UmfuturesCreateConvertGetQuoteV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UmfuturesCreateConvertGetQuoteV1Req'
                description: The request body for UmfuturesCreateConvertGetQuoteV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesCreateConvertGetQuoteV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Send Quote Request(USER_DATA)
            tags:
                - Convert
    /fapi/v1/convert/orderStatus:
        get:
            description: Query order status by order ID.
            operationId: UmfuturesGetConvertOrderStatusV1
            parameters:
                - description: Either orderId or quoteId is required
                  in: query
                  name: orderId
                  schema:
                    default: ""
                    type: string
                - description: Either orderId or quoteId is required
                  in: query
                  name: quoteId
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetConvertOrderStatusV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Order status(USER_DATA)
            tags:
                - Convert
    /fapi/v1/countdownCancelAll:
        post:
            description: |-
                Cancel all open orders of the specified symbol at the end of the specified countdown.
                The endpoint should be called repeatedly as heartbeats so that the existing countdown time can be canceled and replaced by a new one.
            operationId: UmfuturesCreateCountdownCancelAllV1
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UmfuturesCreateCountdownCancelAllV1Req'
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesCreateCountdownCancelAllV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Auto-Cancel All Open Orders (TRADE)
            tags:
                - Trade
    /fapi/v1/depth:
        get:
            description: Query symbol orderbook
            operationId: UmfuturesGetDepthV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Default 500; Valid limits:[5, 10, 20, 50, 100, 500, 1000]
                  in: query
                  name: limit
                  schema:
                    default: 500
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetDepthV1Resp'
                    description: Successful operation
            summary: Order Book
            tags:
                - Market Data
    /fapi/v1/exchangeInfo:
        get:
            description: Current exchange trading rules and symbol information
            operationId: UmfuturesGetExchangeInfoV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetExchangeInfoV1Resp'
                    description: Successful operation
            summary: Exchange Information
            tags:
                - Market Data
    /fapi/v1/feeBurn:
        get:
            description: Get user's BNB Fee Discount (Fee Discount On or Fee Discount Off )
            operationId: UmfuturesGetFeeBurnV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetFeeBurnV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get BNB Burn Status (USER_DATA)
            tags:
                - Account
        post:
            description: Change user's BNB Fee Discount (Fee Discount On or Fee Discount Off ) on EVERY symbol
            operationId: UmfuturesCreateFeeBurnV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UmfuturesCreateFeeBurnV1Req'
                description: The request body for UmfuturesCreateFeeBurnV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesCreateFeeBurnV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Toggle BNB Burn On Futures Trade (TRADE)
            tags:
                - Account
    /fapi/v1/forceOrders:
        get:
            description: Query user's Force Orders
            operationId: UmfuturesGetForceOrdersV1
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: '&#34;LIQUIDATION&#34; for liquidation orders, &#34;ADL&#34; for ADL orders.'
                  in: query
                  name: autoCloseType
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 50; max 100.
                  in: query
                  name: limit
                  schema:
                    default: 50
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetForceOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: User's Force Orders (USER_DATA)
            tags:
                - Trade
    /fapi/v1/fundingInfo:
        get:
            description: Query funding rate info for symbols that had FundingRateCap/ FundingRateFloor / fundingIntervalHours adjustment
            operationId: UmfuturesGetFundingInfoV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetFundingInfoV1Resp'
                    description: Successful operation
            summary: Get Funding Rate Info
            tags:
                - Market Data
    /fapi/v1/fundingRate:
        get:
            description: Get Funding Rate History
            operationId: UmfuturesGetFundingRateV1
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: Timestamp in ms to get funding rate from INCLUSIVE.
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: Timestamp in ms to get funding rate  until INCLUSIVE.
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 100; max 1000
                  in: query
                  name: limit
                  schema:
                    default: 100
                    maximum: 1000
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetFundingRateV1Resp'
                    description: Successful operation
            summary: Get Funding Rate History
            tags:
                - Market Data
    /fapi/v1/historicalTrades:
        get:
            description: Get older market historical trades.
            operationId: UmfuturesGetHistoricalTradesV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Default 100; max 500.
                  in: query
                  name: limit
                  schema:
                    default: 100
                    maximum: 500
                    type: integer
                - description: TradeId to fetch from. Default gets most recent trades.
                  in: query
                  name: fromId
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetHistoricalTradesV1Resp'
                    description: Successful operation
            summary: Old Trades Lookup (MARKET_DATA)
            tags:
                - Market Data
    /fapi/v1/income:
        get:
            description: Query income history
            operationId: UmfuturesGetIncomeV1
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - description: TRANSFER, WELCOME_BONUS, REALIZED_PNL, FUNDING_FEE, COMMISSION, INSURANCE_CLEAR, REFERRAL_KICKBACK, COMMISSION_REBATE, API_REBATE, CONTEST_REWARD, CROSS_COLLATERAL_TRANSFER, OPTIONS_PREMIUM_FEE, OPTIONS_SETTLE_PROFIT, INTERNAL_TRANSFER, AUTO_EXCHANGE, DELIVERED_SETTELMENT, COIN_SWAP_DEPOSIT, COIN_SWAP_WITHDRAW, POSITION_LIMIT_INCREASE_FEE, STRATEGY_UMFUTURES_TRANSFER，FEE_RETURN，BFUSD_REWARD
                  in: query
                  name: incomeType
                  schema:
                    default: ""
                    type: string
                - description: Timestamp in ms to get funding from INCLUSIVE.
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: Timestamp in ms to get funding until INCLUSIVE.
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: page
                  schema:
                    type: integer
                - description: Default 100; max 1000
                  in: query
                  name: limit
                  schema:
                    default: 100
                    maximum: 1000
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetIncomeV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Income History (USER_DATA)
            tags:
                - Account
    /fapi/v1/income/asyn:
        get:
            description: Get download id for futures transaction history
            operationId: UmfuturesGetIncomeAsynV1
            parameters:
                - description: Timestamp in ms
                  in: query
                  name: startTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: Timestamp in ms
                  in: query
                  name: endTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetIncomeAsynV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Download Id For Futures Transaction History(USER_DATA)
            tags:
                - Account
    /fapi/v1/income/asyn/id:
        get:
            description: Get futures transaction history download link by Id
            operationId: UmfuturesGetIncomeAsynIdV1
            parameters:
                - description: get by download id api
                  in: query
                  name: downloadId
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetIncomeAsynIdV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Futures Transaction History Download Link by Id (USER_DATA)
            tags:
                - Account
    /fapi/v1/indexInfo:
        get:
            description: Query composite index symbol information
            operationId: UmfuturesGetIndexInfoV1
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetIndexInfoV1Resp'
                    description: Successful operation
            summary: Composite Index Symbol Information
            tags:
                - Market Data
    /fapi/v1/indexPriceKlines:
        get:
            description: |-
                Kline/candlestick bars for the index price of a pair.
                Klines are uniquely identified by their open time.
            operationId: UmfuturesGetIndexPriceKlinesV1
            parameters:
                - in: query
                  name: pair
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: interval
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 500; max 1500.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1500
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetIndexPriceKlinesV1Resp'
                    description: Successful operation
            summary: Index Price Kline/Candlestick Data
            tags:
                - Market Data
    /fapi/v1/klines:
        get:
            description: |-
                Kline/candlestick bars for a symbol.
                Klines are uniquely identified by their open time.
            operationId: UmfuturesGetKlinesV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: interval
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 500; max 1500.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1500
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetKlinesV1Resp'
                    description: Successful operation
            summary: Kline/Candlestick Data
            tags:
                - Market Data
    /fapi/v1/leverage:
        post:
            description: Change user's initial leverage of specific symbol market.
            operationId: UmfuturesCreateLeverageV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UmfuturesCreateLeverageV1Req'
                description: The request body for UmfuturesCreateLeverageV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesCreateLeverageV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Change Initial Leverage(TRADE)
            tags:
                - Trade
    /fapi/v1/leverageBracket:
        get:
            description: Query user notional and leverage bracket on speicfic symbol
            operationId: UmfuturesGetLeverageBracketV1
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetLeverageBracketV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Notional and Leverage Brackets (USER_DATA)
            tags:
                - Account
    /fapi/v1/listenKey:
        delete:
            description: Close out a user data stream.
            operationId: UmfuturesDeleteListenKeyV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesDeleteListenKeyV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Close User Data Stream (USER_STREAM)
            tags:
                - User Data Streams
        post:
            description: Start a new user data stream. The stream will close after 60 minutes unless a keepalive is sent. If the account has an active listenKey, that listenKey will be returned and its validity will be extended for 60 minutes.
            operationId: UmfuturesCreateListenKeyV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesCreateListenKeyV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Start User Data Stream (USER_STREAM)
            tags:
                - User Data Streams
        put:
            description: Keepalive a user data stream to prevent a time out. User data streams will close after 60 minutes. It's recommended to send a ping about every 60 minutes.
            operationId: UmfuturesUpdateListenKeyV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesUpdateListenKeyV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Keepalive User Data Stream (USER_STREAM)
            tags:
                - User Data Streams
    /fapi/v1/marginType:
        post:
            description: Change symbol level margin type
            operationId: UmfuturesCreateMarginTypeV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UmfuturesCreateMarginTypeV1Req'
                description: The request body for UmfuturesCreateMarginTypeV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesCreateMarginTypeV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Change Margin Type(TRADE)
            tags:
                - Trade
    /fapi/v1/markPriceKlines:
        get:
            description: |-
                Kline/candlestick bars for the mark price of a symbol.
                Klines are uniquely identified by their open time.
            operationId: UmfuturesGetMarkPriceKlinesV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: interval
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 500; max 1500.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1500
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetMarkPriceKlinesV1Resp'
                    description: Successful operation
            summary: Mark Price Kline/Candlestick Data
            tags:
                - Market Data
    /fapi/v1/multiAssetsMargin:
        get:
            description: Get user's Multi-Assets mode (Multi-Assets Mode or Single-Asset Mode) on Every symbol
            operationId: UmfuturesGetMultiAssetsMarginV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetMultiAssetsMarginV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Current Multi-Assets Mode (USER_DATA)
            tags:
                - Account
        post:
            description: Change user's Multi-Assets mode (Multi-Assets Mode or Single-Asset Mode) on Every symbol
            operationId: UmfuturesCreateMultiAssetsMarginV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UmfuturesCreateMultiAssetsMarginV1Req'
                description: The request body for UmfuturesCreateMultiAssetsMarginV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesCreateMultiAssetsMarginV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Change Multi-Assets Mode (TRADE)
            tags:
                - Trade
    /fapi/v1/openInterest:
        get:
            description: Get present open interest of a specific symbol.
            operationId: UmfuturesGetOpenInterestV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetOpenInterestV1Resp'
                    description: Successful operation
            summary: Open Interest
            tags:
                - Market Data
    /fapi/v1/openOrder:
        get:
            description: Query open order
            operationId: UmfuturesGetOpenOrderV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: origClientOrderId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetOpenOrderV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Current Open Order (USER_DATA)
            tags:
                - Trade
    /fapi/v1/openOrders:
        get:
            description: Get all open orders on a symbol.
            operationId: UmfuturesGetOpenOrdersV1
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetOpenOrdersV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Current All Open Orders (USER_DATA)
            tags:
                - Trade
    /fapi/v1/order:
        delete:
            description: Cancel an active order.
            operationId: UmfuturesDeleteOrderV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: origClientOrderId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesDeleteOrderV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Cancel Order (TRADE)
            tags:
                - Trade
        get:
            description: Check an order's status.
            operationId: UmfuturesGetOrderV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: origClientOrderId
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetOrderV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query Order (USER_DATA)
            tags:
                - Trade
        post:
            description: Send in a new order.
            operationId: UmfuturesCreateOrderV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UmfuturesCreateOrderV1Req'
                description: The request body for UmfuturesCreateOrderV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesCreateOrderV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: New Order(TRADE)
            tags:
                - Trade
        put:
            description: Order modify function, currently only LIMIT order modification is supported, modified orders will be reordered in the match queue
            operationId: UmfuturesUpdateOrderV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UmfuturesUpdateOrderV1Req'
                description: The request body for UmfuturesUpdateOrderV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesUpdateOrderV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Modify Order (TRADE)
            tags:
                - Trade
    /fapi/v1/order/asyn:
        get:
            description: Get Download Id For Futures Order History
            operationId: UmfuturesGetOrderAsynV1
            parameters:
                - description: Timestamp in ms
                  in: query
                  name: startTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: Timestamp in ms
                  in: query
                  name: endTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetOrderAsynV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Download Id For Futures Order History (USER_DATA)
            tags:
                - Account
    /fapi/v1/order/asyn/id:
        get:
            description: Get futures order history download link by Id
            operationId: UmfuturesGetOrderAsynIdV1
            parameters:
                - description: get by download id api
                  in: query
                  name: downloadId
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetOrderAsynIdV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Futures Order History Download Link by Id (USER_DATA)
            tags:
                - Account
    /fapi/v1/order/test:
        post:
            description: Testing order request, this order will not be submitted to matching engine
            operationId: UmfuturesCreateOrderTestV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UmfuturesCreateOrderTestV1Req'
                description: The request body for UmfuturesCreateOrderTestV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesCreateOrderTestV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Test Order(TRADE)
            tags:
                - Trade
    /fapi/v1/orderAmendment:
        get:
            description: Get order modification history
            operationId: UmfuturesGetOrderAmendmentV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: origClientOrderId
                  schema:
                    default: ""
                    type: string
                - description: Timestamp in ms to get modification history from INCLUSIVE
                  in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: Timestamp in ms to get modification history until INCLUSIVE
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 50; max 100
                  in: query
                  name: limit
                  schema:
                    default: 50
                    maximum: 100
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetOrderAmendmentV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Order Modify History (USER_DATA)
            tags:
                - Trade
    /fapi/v1/ping:
        get:
            description: Test connectivity to the Rest API.
            operationId: UmfuturesGetPingV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetPingV1Resp'
                    description: Successful operation
            summary: Test Connectivity
            tags:
                - Market Data
    /fapi/v1/pmAccountInfo:
        get:
            description: Get Classic Portfolio Margin current account information.
            operationId: UmfuturesGetPmAccountInfoV1
            parameters:
                - in: query
                  name: asset
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetPmAccountInfoV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Classic Portfolio Margin Account Information (USER_DATA)
            tags:
                - Portfolio Margin Endpoints
    /fapi/v1/positionMargin:
        post:
            description: Modify Isolated Position Margin
            operationId: UmfuturesCreatePositionMarginV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UmfuturesCreatePositionMarginV1Req'
                description: The request body for UmfuturesCreatePositionMarginV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesCreatePositionMarginV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Modify Isolated Position Margin(TRADE)
            tags:
                - Trade
    /fapi/v1/positionMargin/history:
        get:
            description: Get Position Margin Change History
            operationId: UmfuturesGetPositionMarginHistoryV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: '1: Add position margin，2: Reduce position margin'
                  in: query
                  name: type
                  schema:
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - description: Default current time if not pass
                  in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: 'Default: 500'
                  in: query
                  name: limit
                  schema:
                    default: 500
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetPositionMarginHistoryV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Position Margin Change History (TRADE)
            tags:
                - Trade
    /fapi/v1/positionSide/dual:
        get:
            description: Get user's position mode (Hedge Mode or One-way Mode ) on EVERY symbol
            operationId: UmfuturesGetPositionSideDualV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetPositionSideDualV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Current Position Mode(USER_DATA)
            tags:
                - Account
        post:
            description: Change user's position mode (Hedge Mode or One-way Mode ) on EVERY symbol
            operationId: UmfuturesCreatePositionSideDualV1
            requestBody:
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UmfuturesCreatePositionSideDualV1Req'
                description: The request body for UmfuturesCreatePositionSideDualV1
                required: true
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesCreatePositionSideDualV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Change Position Mode(TRADE)
            tags:
                - Trade
    /fapi/v1/premiumIndex:
        get:
            description: Mark Price and Funding Rate
            operationId: UmfuturesGetPremiumIndexV1
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetPremiumIndexV1Resp'
                    description: Successful operation
            summary: Mark Price
            tags:
                - Market Data
    /fapi/v1/premiumIndexKlines:
        get:
            description: Premium index kline bars of a symbol. Klines are uniquely identified by their open time.
            operationId: UmfuturesGetPremiumIndexKlinesV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: interval
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Default 500; max 1500.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1500
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetPremiumIndexKlinesV1Resp'
                    description: Successful operation
            summary: Premium index Kline Data
            tags:
                - Market Data
    /fapi/v1/rateLimit/order:
        get:
            description: Query User Rate Limit
            operationId: UmfuturesGetRateLimitOrderV1
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetRateLimitOrderV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Query User Rate Limit (USER_DATA)
            tags:
                - Account
    /fapi/v1/symbolConfig:
        get:
            description: Get current account symbol configuration.
            operationId: UmfuturesGetSymbolConfigV1
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetSymbolConfigV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Symbol Configuration(USER_DATA)
            tags:
                - Account
    /fapi/v1/ticker/24hr:
        get:
            description: |-
                24 hour rolling window price change statistics.
                Careful when accessing this with no symbol.
            operationId: UmfuturesGetTicker24hrV1
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetTicker24hrV1Resp'
                    description: Successful operation
            summary: 24hr Ticker Price Change Statistics
            tags:
                - Market Data
    /fapi/v1/ticker/bookTicker:
        get:
            description: Best price/qty on the order book for a symbol or symbols.
            operationId: UmfuturesGetTickerBookTickerV1
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetTickerBookTickerV1Resp'
                    description: Successful operation
            summary: Symbol Order Book Ticker
            tags:
                - Market Data
    /fapi/v1/ticker/price:
        get:
            description: Latest price for a symbol or symbols.
            operationId: UmfuturesGetTickerPriceV1
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetTickerPriceV1Resp'
                    description: Successful operation
            summary: Symbol Price Ticker
            tags:
                - Market Data
    /fapi/v1/time:
        get:
            description: Test connectivity to the Rest API and get the current server time.
            operationId: UmfuturesGetTimeV1
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetTimeV1Resp'
                    description: Successful operation
            summary: Check Server Time
            tags:
                - Market Data
    /fapi/v1/trade/asyn:
        get:
            description: Get download id for futures trade history
            operationId: UmfuturesGetTradeAsynV1
            parameters:
                - description: Timestamp in ms
                  in: query
                  name: startTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - description: Timestamp in ms
                  in: query
                  name: endTime
                  required: true
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetTradeAsynV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Download Id For Futures Trade History (USER_DATA)
            tags:
                - Account
    /fapi/v1/trade/asyn/id:
        get:
            description: Get futures trade download link by Id
            operationId: UmfuturesGetTradeAsynIdV1
            parameters:
                - description: get by download id api
                  in: query
                  name: downloadId
                  required: true
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetTradeAsynIdV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Get Futures Trade Download Link by Id(USER_DATA)
            tags:
                - Account
    /fapi/v1/trades:
        get:
            description: Get recent market trades
            operationId: UmfuturesGetTradesV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetTradesV1Resp'
                    description: Successful operation
            summary: Recent Trades List
            tags:
                - Market Data
    /fapi/v1/userTrades:
        get:
            description: Get trades for a specific account and symbol.
            operationId: UmfuturesGetUserTradesV1
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: This can only be used in combination with `symbol`
                  in: query
                  name: orderId
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
                - description: Trade id to fetch from. Default gets most recent trades.
                  in: query
                  name: fromId
                  schema:
                    format: int64
                    type: integer
                - description: Default 500; max 1000.
                  in: query
                  name: limit
                  schema:
                    default: 500
                    maximum: 1000
                    type: integer
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetUserTradesV1Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Account Trade List (USER_DATA)
            tags:
                - Trade
    /fapi/v2/account:
        get:
            description: Get current account information. User in single-asset/ multi-assets mode will see different value, see comments in response section for detail.
            operationId: UmfuturesGetAccountV2
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetAccountV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Account Information V2(USER_DATA)
            tags:
                - Account
    /fapi/v2/balance:
        get:
            description: Query account balance info
            operationId: UmfuturesGetBalanceV2
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetBalanceV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Futures Account Balance V2 (USER_DATA)
            tags:
                - Account
    /fapi/v2/positionRisk:
        get:
            description: Get current position information.
            operationId: UmfuturesGetPositionRiskV2
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetPositionRiskV2Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Position Information V2 (USER_DATA)
            tags:
                - Trade
    /fapi/v2/ticker/price:
        get:
            description: Latest price for a symbol or symbols.
            operationId: UmfuturesGetTickerPriceV2
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetTickerPriceV2Resp'
                    description: Successful operation
            summary: Symbol Price Ticker V2
            tags:
                - Market Data
    /fapi/v3/account:
        get:
            description: Get current account information. User in single-asset/ multi-assets mode will see different value, see comments in response section for detail.
            operationId: UmfuturesGetAccountV3
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetAccountV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Account Information V3(USER_DATA)
            tags:
                - Account
    /fapi/v3/balance:
        get:
            description: Query account balance info
            operationId: UmfuturesGetBalanceV3
            parameters:
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetBalanceV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Futures Account Balance V3 (USER_DATA)
            tags:
                - Account
    /fapi/v3/positionRisk:
        get:
            description: Get current position information(only symbol that has position or open orders will be returned).
            operationId: UmfuturesGetPositionRiskV3
            parameters:
                - in: query
                  name: symbol
                  schema:
                    default: ""
                    type: string
                - in: query
                  name: recvWindow
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: timestamp
                  required: true
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetPositionRiskV3Resp'
                    description: Successful operation
            security:
                - ApiKey: []
            summary: Position Information V3 (USER_DATA)
            tags:
                - Trade
    /futures/data/basis:
        get:
            description: Query future basis
            operationId: UmfuturesGetFuturesDataBasis
            parameters:
                - description: BTCUSDT
                  in: query
                  name: pair
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: CURRENT_QUARTER, NEXT_QUARTER, PERPETUAL
                  in: query
                  name: contractType
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: '&#34;5m&#34;,&#34;15m&#34;,&#34;30m&#34;,&#34;1h&#34;,&#34;2h&#34;,&#34;4h&#34;,&#34;6h&#34;,&#34;12h&#34;,&#34;1d&#34;'
                  in: query
                  name: period
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: Default 30,Max 500
                  in: query
                  name: limit
                  required: true
                  schema:
                    default: 30
                    format: int64
                    maximum: 500
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetFuturesDataBasisResp'
                    description: Successful operation
            summary: Basis
            tags:
                - Market Data
    /futures/data/delivery-price:
        get:
            description: Latest price for a symbol or symbols.
            operationId: UmfuturesGetFuturesDataDeliveryPrice
            parameters:
                - description: e.g BTCUSDT
                  in: query
                  name: pair
                  required: true
                  schema:
                    default: ""
                    type: string
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetFuturesDataDeliveryPriceResp'
                    description: Successful operation
            summary: Quarterly Contract Settlement Price
            tags:
                - Market Data
    /futures/data/globalLongShortAccountRatio:
        get:
            description: Query symbol Long/Short Ratio
            operationId: UmfuturesGetFuturesDataGlobalLongShortAccountRatio
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: '&#34;5m&#34;,&#34;15m&#34;,&#34;30m&#34;,&#34;1h&#34;,&#34;2h&#34;,&#34;4h&#34;,&#34;6h&#34;,&#34;12h&#34;,&#34;1d&#34;'
                  in: query
                  name: period
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: default 30, max 500
                  in: query
                  name: limit
                  schema:
                    default: 30
                    format: int64
                    maximum: 500
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetFuturesDataGlobalLongShortAccountRatioResp'
                    description: Successful operation
            summary: Long/Short Ratio
            tags:
                - Market Data
    /futures/data/openInterestHist:
        get:
            description: Open Interest Statistics
            operationId: UmfuturesGetFuturesDataOpenInterestHist
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: '&#34;5m&#34;,&#34;15m&#34;,&#34;30m&#34;,&#34;1h&#34;,&#34;2h&#34;,&#34;4h&#34;,&#34;6h&#34;,&#34;12h&#34;,&#34;1d&#34;'
                  in: query
                  name: period
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: default 30, max 500
                  in: query
                  name: limit
                  schema:
                    default: 30
                    format: int64
                    maximum: 500
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetFuturesDataOpenInterestHistResp'
                    description: Successful operation
            summary: Open Interest Statistics
            tags:
                - Market Data
    /futures/data/takerlongshortRatio:
        get:
            description: Taker Buy/Sell Volume
            operationId: UmfuturesGetFuturesDataTakerlongshortRatio
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: '&#34;5m&#34;,&#34;15m&#34;,&#34;30m&#34;,&#34;1h&#34;,&#34;2h&#34;,&#34;4h&#34;,&#34;6h&#34;,&#34;12h&#34;,&#34;1d&#34;'
                  in: query
                  name: period
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: default 30, max 500
                  in: query
                  name: limit
                  schema:
                    default: 30
                    format: int64
                    maximum: 500
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetFuturesDataTakerlongshortRatioResp'
                    description: Successful operation
            summary: Taker Buy/Sell Volume
            tags:
                - Market Data
    /futures/data/topLongShortAccountRatio:
        get:
            description: |-
                The proportion of net long and net short accounts to total accounts of the top 20% users with the highest margin balance. Each account is counted once only.
                Long Account % = Accounts of top traders with net long positions / Total accounts of top traders with open positions
                Short Account % = Accounts of top traders with net short positions / Total accounts of top traders with open positions
                Long/Short Ratio (Accounts) = Long Account % / Short Account %
            operationId: UmfuturesGetFuturesDataTopLongShortAccountRatio
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: '&#34;5m&#34;,&#34;15m&#34;,&#34;30m&#34;,&#34;1h&#34;,&#34;2h&#34;,&#34;4h&#34;,&#34;6h&#34;,&#34;12h&#34;,&#34;1d&#34;'
                  in: query
                  name: period
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: default 30, max 500
                  in: query
                  name: limit
                  schema:
                    default: 30
                    format: int64
                    maximum: 500
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetFuturesDataTopLongShortAccountRatioResp'
                    description: Successful operation
            summary: Top Trader Long/Short Ratio (Accounts)
            tags:
                - Market Data
    /futures/data/topLongShortPositionRatio:
        get:
            description: |-
                The proportion of net long and net short positions to total open positions of the top 20% users with the highest margin balance.
                Long Position % = Long positions of top traders / Total open positions of top traders
                Short Position % = Short positions of top traders / Total open positions of top traders
                Long/Short Ratio (Positions) = Long Position % / Short Position %
            operationId: UmfuturesGetFuturesDataTopLongShortPositionRatio
            parameters:
                - in: query
                  name: symbol
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: '&#34;5m&#34;,&#34;15m&#34;,&#34;30m&#34;,&#34;1h&#34;,&#34;2h&#34;,&#34;4h&#34;,&#34;6h&#34;,&#34;12h&#34;,&#34;1d&#34;'
                  in: query
                  name: period
                  required: true
                  schema:
                    default: ""
                    type: string
                - description: default 30, max 500
                  in: query
                  name: limit
                  schema:
                    default: 30
                    format: int64
                    maximum: 500
                    type: integer
                - in: query
                  name: startTime
                  schema:
                    format: int64
                    type: integer
                - in: query
                  name: endTime
                  schema:
                    format: int64
                    type: integer
            responses:
                4XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Client Error
                5XX:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/APIError'
                    description: Server Error
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UmfuturesGetFuturesDataTopLongShortPositionRatioResp'
                    description: Successful operation
            summary: Top Trader Long/Short Ratio (Positions)
            tags:
                - Market Data
servers:
    - description: Binance Umfutures API Server
      url: https://fapi.binance.com

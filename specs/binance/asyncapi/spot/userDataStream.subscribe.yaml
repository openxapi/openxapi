asyncapi: 3.0.0
info:
    title: ""
    version: ""
channels:
    userDataStream_subscribe:
        address: userDataStream.subscribe
        title: Channel userDataStream.subscribe
        description: |-
            Subscribe to the User Data Stream in the current WebSocket connection.
            Notes:
            - This method requires an authenticated WebSocket connection using Ed25519 keys. Please refer to session.logon.
            - To check the subscription status, use session.status, see the userDataStream flag indicating you have have an active subscription.
            - User Data Stream events are available in both JSON and SBE sessions.

            Please refer to User Data Streams for the event format details.
            For SBE, only SBE schema 2:1 or later is supported.
        messages:
            receiveMessage:
                name: Subscribe to User Data Stream Response
                title: Subscribe to User Data Stream Response
                description: Response received after subscribing to user data stream
                payload:
                    type: object
                    description: Response schema for subscription
                    properties:
                        id:
                            type: string
                            description: Request ID
                            example: d3df8a21-98ea-4fe0-8f4e-0fcea5d418b7
                        status:
                            type: integer
                            description: Response status code
                            example: 200
                        result:
                            type: object
                            description: Subscription result (empty object on success)
                            properties: {}
            sendMessage:
                name: Subscribe to User Data Stream Request
                title: Subscribe to User Data Stream Request
                description: Send a userDataStream.subscribe request
                payload:
                    type: object
                    description: request schema
                    properties:
                        id:
                            type: string
                            description: id property
                            example: d3df8a21-98ea-4fe0-8f4e-0fcea5d418b7
                        method:
                            type: string
                            description: method property
                            example: userDataStream.subscribe
                            enum:
                                - userDataStream.subscribe
operations:
    receive_userDataStream_subscribe:
        title: Receive subscription response
        description: Receive response from userDataStream.subscribe
        action: receive
        channel:
            $ref: '#/channels/userDataStream_subscribe'
        messages:
            - $ref: '#/channels/userDataStream_subscribe/messages/receiveMessage'
    send_userDataStream_subscribe:
        title: Send subscription request
        description: Send a userDataStream.subscribe request
        action: send
        channel:
            $ref: '#/channels/userDataStream_subscribe'
        messages:
            - $ref: '#/channels/userDataStream_subscribe/messages/sendMessage'

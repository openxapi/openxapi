asyncapi: 3.0.0
info:
    title: ""
    version: ""
channels:
    spot:
        address: /
        title: Channel userDataStream.subscribe
        description: |-
            Subscribe to the User Data Stream in the current WebSocket connection.
            Notes:
            - This method requires an authenticated WebSocket connection using Ed25519 keys. Please refer to session.logon.
            - To check the subscription status, use session.status, see the userDataStream flag indicating you have have an active subscription.
            - User Data Stream events are available in both JSON and SBE sessions.

            Please refer to User Data Streams for the event format details.
            For SBE, only SBE schema 2:1 or later is supported.
        messages:
            userDataStreamSubscribeReceive:
                $ref: '#/components/messages/userDataStreamSubscribeReceive'
            userDataStreamSubscribeSend:
                $ref: '#/components/messages/userDataStreamSubscribeSend'
operations:
    receiveUserdatastreamSubscribe:
        title: Receive from userDataStream.subscribe
        description: Receive response from userDataStream.subscribe
        action: receive
        channel:
            $ref: '#/channels/spot'
        messages:
            - $ref: '#/channels/spot/messages/userDataStreamSubscribeReceive'
    sendUserdatastreamSubscribe:
        title: Send to userDataStream.subscribe
        description: Send a userDataStream.subscribe request
        action: send
        channel:
            $ref: '#/channels/spot'
        messages:
            - $ref: '#/channels/spot/messages/userDataStreamSubscribeSend'
components:
    messages:
        userDataStreamSubscribeReceive:
            name: Subscribe to User Data Stream (USER_STREAM) Response
            title: Subscribe to User Data Stream (USER_STREAM) Response
            description: Receive response from userDataStream.subscribe
            payload:
                type: object
                description: response schema
                properties:
                    id:
                        type: string
                        description: id property
                        example: d3df8a21-98ea-4fe0-8f4e-0fcea5d418b7
                    result:
                        type: object
                        description: result property
                    status:
                        type: integer
                        description: status property
                        example: 200
        userDataStreamSubscribeSend:
            name: Subscribe to User Data Stream (USER_STREAM) Request
            title: Subscribe to User Data Stream (USER_STREAM) Request
            description: Send a userDataStream.subscribe request
            payload:
                type: object
                description: request schema
                properties:
                    id:
                        type: string
                        description: id property
                        example: d3df8a21-98ea-4fe0-8f4e-0fcea5d418b7
                    method:
                        type: string
                        description: method property
                        example: userDataStream.subscribe
                        enum:
                            - userDataStream.subscribe
